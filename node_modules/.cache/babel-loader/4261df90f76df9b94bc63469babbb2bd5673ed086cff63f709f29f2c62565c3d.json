{"ast":null,"code":"var _jsxFileName = \"/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { exampleWords, koreanConsonants, koreanVowels } from '../koreanAlphabetData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordBuilderSection = () => {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currentStage, setCurrentStage] = useState(1); // 1: jamo, 2: syllables, 3: word\n  const [selectedJamo, setSelectedJamo] = useState({\n    consonants: [],\n    vowels: []\n  });\n  const [builtSyllables, setBuiltSyllables] = useState([]);\n  const [userWord, setUserWord] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [currentHint, setCurrentHint] = useState('');\n  const selectWord = useCallback(word => {\n    setSelectedWord(word);\n    setCurrentStage(1);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n  const getRequiredJamo = useCallback(() => {\n    if (!selectedWord) return {\n      consonants: [],\n      vowels: []\n    };\n    const required = {\n      consonants: [],\n      vowels: []\n    };\n    selectedWord.syllables.forEach(syllable => {\n      // Add initial consonant\n      if (syllable.consonant) {\n        const consonant = koreanConsonants.find(c => c.koreanLetter === syllable.consonant);\n        if (consonant && !required.consonants.find(c => c.id === consonant.id)) {\n          required.consonants.push(consonant);\n        }\n      }\n\n      // Add vowel\n      if (syllable.vowel) {\n        const vowel = koreanVowels.find(v => v.koreanLetter === syllable.vowel);\n        if (vowel && !required.vowels.find(v => v.id === vowel.id)) {\n          required.vowels.push(vowel);\n        }\n      }\n\n      // Add final consonant (for CVC syllables)\n      if (syllable.final) {\n        const finalConsonant = koreanConsonants.find(c => c.koreanLetter === syllable.final);\n        if (finalConsonant && !required.consonants.find(c => c.id === finalConsonant.id)) {\n          required.consonants.push(finalConsonant);\n        }\n      }\n    });\n    return required;\n  }, [selectedWord]);\n  const getHints = useCallback(() => {\n    if (!selectedWord) return [];\n    const hints = [];\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const missingConsonants = required.consonants.filter(reqC => !selectedJamo.consonants.some(selC => selC.id === reqC.id));\n      const missingVowels = required.vowels.filter(reqV => !selectedJamo.vowels.some(selV => selV.id === reqV.id));\n      if (missingConsonants.length > 0) {\n        hints.push(`Select the consonant: ${missingConsonants[0].koreanLetter} (${missingConsonants[0].name})`);\n      } else if (missingVowels.length > 0) {\n        hints.push(`Select the vowel: ${missingVowels[0].koreanLetter} (${missingVowels[0].name})`);\n      } else {\n        hints.push(\"Great! You've selected all required letters. Click 'Next' to build syllables.\");\n      }\n    }\n    if (currentStage === 2) {\n      const currentSyllableIndex = builtSyllables.length;\n      if (currentSyllableIndex < selectedWord.syllables.length) {\n        const targetSyllable = selectedWord.syllables[currentSyllableIndex];\n        if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length === 0) {\n          if (targetSyllable.structure === 'CVC') {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CVC): Select ${targetSyllable.consonant} (initial) + ${targetSyllable.vowel} + ${targetSyllable.final} (final)`);\n          } else {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CV): Select ${targetSyllable.consonant} + ${targetSyllable.vowel}`);\n          }\n        } else if (selectedJamo.consonants.length > 0 && selectedJamo.vowels.length === 0) {\n          hints.push(`Now select ${targetSyllable.vowel}${targetSyllable.final ? ' (and optionally ' + targetSyllable.final + ' for final consonant)' : ''}`);\n        } else if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length > 0) {\n          hints.push(`Select ${targetSyllable.consonant} as initial consonant`);\n        } else if (selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1) {\n          if (targetSyllable.final && selectedJamo.consonants.length === 1) {\n            hints.push(`Add ${targetSyllable.final} as final consonant, or click \"Build Syllable\" for CV structure`);\n          } else {\n            hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\"`);\n          }\n        } else if (selectedJamo.consonants.length === 2 && selectedJamo.vowels.length === 1) {\n          hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CVC structure)`);\n        }\n      }\n    }\n    if (currentStage === 3) {\n      if (userWord.length < selectedWord.syllables.length) {\n        const nextSyllable = selectedWord.syllables[userWord.length];\n        const availableSyllable = builtSyllables.find(bs => bs.syllable === nextSyllable.syllable);\n        if (availableSyllable) {\n          hints.push(`Drag \"${availableSyllable.syllable}\" to the next empty slot`);\n        } else {\n          hints.push(`Build \"${nextSyllable.syllable}\" first in Stage 2`);\n        }\n      } else {\n        hints.push(`Click \"Check Word\" to verify your word construction`);\n      }\n    }\n    return hints;\n  }, [selectedWord, currentStage, selectedJamo, builtSyllables, userWord, getRequiredJamo]);\n  const showHintForCurrentStage = useCallback(() => {\n    const hints = getHints();\n    if (hints.length > 0) {\n      setCurrentHint(hints[0]);\n      setShowHint(true);\n    }\n  }, [getHints]);\n  const handleJamoSelection = useCallback((jamo, type) => {\n    console.log('Jamo selected:', jamo, type);\n    if (type === 'consonant') {\n      setSelectedJamo(prev => {\n        const newState = {\n          ...prev,\n          consonants: prev.consonants.includes(jamo) ? prev.consonants.filter(c => c.id !== jamo.id) : [...prev.consonants, jamo]\n        };\n        console.log('New consonant state:', newState);\n        return newState;\n      });\n    } else {\n      setSelectedJamo(prev => {\n        const newState = {\n          ...prev,\n          vowels: prev.vowels.includes(jamo) ? prev.vowels.filter(v => v.id !== jamo.id) : [...prev.vowels, jamo]\n        };\n        console.log('New vowel state:', newState);\n        return newState;\n      });\n    }\n  }, []);\n  const canBuildSyllable = useCallback(() => {\n    // For CV syllables: need exactly 1 consonant and 1 vowel\n    // For CVC syllables: need 1 consonant, 1 vowel, and optionally 1 final consonant\n    const hasConsonant = selectedJamo.consonants.length >= 1;\n    const hasVowel = selectedJamo.vowels.length === 1;\n    const hasFinalConsonant = selectedJamo.consonants.length <= 2; // Max 1 initial + 1 final\n\n    return hasConsonant && hasVowel && hasFinalConsonant;\n  }, [selectedJamo]);\n  const buildSyllable = useCallback(() => {\n    if (!canBuildSyllable()) return;\n    const initialConsonant = selectedJamo.consonants[0];\n    const vowel = selectedJamo.vowels[0];\n    const finalConsonant = selectedJamo.consonants.length > 1 ? selectedJamo.consonants[1] : null;\n\n    // Create syllable text based on structure\n    let syllableText = initialConsonant.koreanLetter + vowel.koreanLetter;\n    if (finalConsonant) {\n      syllableText += finalConsonant.koreanLetter;\n    }\n\n    // Find the matching syllable in the target word to get complete structure\n    const targetSyllable = selectedWord.syllables.find(ts => {\n      const consonantMatch = ts.consonant === initialConsonant.koreanLetter;\n      const vowelMatch = ts.vowel === vowel.koreanLetter;\n      const finalMatch = finalConsonant ? ts.final === finalConsonant.koreanLetter : !ts.final; // No final consonant expected\n\n      return consonantMatch && vowelMatch && finalMatch;\n    });\n    const newSyllable = {\n      syllable: targetSyllable ? targetSyllable.syllable : syllableText,\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : targetSyllable ? targetSyllable.final : null,\n      structure: targetSyllable ? targetSyllable.structure : finalConsonant ? 'CVC' : 'CV',\n      completed: true\n    };\n    setBuiltSyllables(prev => [...prev, newSyllable]);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n  }, [canBuildSyllable, selectedJamo, selectedWord]);\n  const handleSyllableDrop = useCallback(syllable => {\n    if (userWord.length >= selectedWord.syllables.length) return;\n    if (userWord.some(userSyl => userSyl.syllable === syllable.syllable)) return;\n    setUserWord(prev => [...prev, syllable]);\n  }, [selectedWord, userWord]);\n  const removeSyllable = useCallback(index => {\n    setUserWord(prev => prev.filter((_, i) => i !== index));\n  }, []);\n  const checkStageCompletion = useCallback(() => {\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const hasAllConsonants = required.consonants.every(reqC => selectedJamo.consonants.some(selC => selC.id === reqC.id));\n      const hasAllVowels = required.vowels.every(reqV => selectedJamo.vowels.some(selV => selV.id === reqV.id));\n      return hasAllConsonants && hasAllVowels;\n    }\n    if (currentStage === 2) {\n      return builtSyllables.length === selectedWord.syllables.length && builtSyllables.every(bs => bs.completed);\n    }\n    if (currentStage === 3) {\n      if (userWord.length !== selectedWord.syllables.length) return false;\n      return userWord.every((userSyl, index) => userSyl.syllable === selectedWord.syllables[index].syllable);\n    }\n    return false;\n  }, [currentStage, selectedJamo, builtSyllables, userWord, selectedWord, getRequiredJamo]);\n  const advanceToNextStage = useCallback(() => {\n    if (currentStage < 3) {\n      setCurrentStage(prev => prev + 1);\n      setShowHint(false);\n    }\n  }, [currentStage]);\n  const resetExercise = useCallback(() => {\n    setCurrentStage(1);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n  const getJamoButtonClass = (jamo, type) => {\n    const isSelected = type === 'consonant' ? selectedJamo.consonants.some(c => c.id === jamo.id) : selectedJamo.vowels.some(v => v.id === jamo.id);\n    return `jamo-btn ${isSelected ? 'selected' : 'available'}`;\n  };\n  const getSyllableButtonClass = syllable => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n  const requiredJamo = getRequiredJamo();\n  const stageHints = getHints();\n  if (!selectedWord) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Progressive Word Builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn Korean writing step by step: from individual letters to complete words.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a word to build:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-cards\",\n          children: exampleWords.map(word => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"word-card\",\n            onClick: () => selectWord(word),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-korean\",\n              children: word.korean\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-romanization\",\n              children: word.romanization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-english\",\n              children: [\"\\\"\", word.english, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-count\",\n              children: [word.syllables.length, \" syllables\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-builder-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"\\u2190 Back to Word Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Build: \", selectedWord.english]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"target-word\",\n            children: selectedWord.korean\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"romanization\",\n            children: [\"(\", selectedWord.romanization, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 1 ? 'active' : ''} ${currentStage > 1 ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Jamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 2 ? 'active' : ''} ${currentStage > 2 ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Syllables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 3 ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-container\",\n      children: [currentStage === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 1: Select Required Letters (Jamo)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose all the consonants and vowels needed to build this word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jamo-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Required Consonants:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-grid\",\n              children: requiredJamo.consonants.map(consonant => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getJamoButtonClass(consonant, 'consonant'),\n                onClick: () => handleJamoSelection(consonant, 'consonant'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: consonant.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: consonant.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-sound\",\n                  children: [\"(\", consonant.romanization, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 23\n                }, this)]\n              }, consonant.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Required Vowels:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-grid\",\n              children: requiredJamo.vowels.map(vowel => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getJamoButtonClass(vowel, 'vowel'),\n                onClick: () => handleJamoSelection(vowel, 'vowel'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: vowel.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: vowel.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-sound\",\n                  children: [\"(\", vowel.romanization, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this)]\n              }, vowel.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            disabled: stageHints.length === 0,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-stage-btn\",\n            onClick: advanceToNextStage,\n            disabled: !checkStageCompletion(),\n            children: \"Next: Build Syllables \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), currentStage === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 2: Build Syllable Blocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Combine consonants and vowels to create syllable blocks. Build them one at a time.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"syllable-building\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-pool-stage2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Available Letters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select one consonant and one vowel to build the next syllable.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-pool-grid\",\n              children: [requiredJamo.consonants.map(consonant => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: getJamoButtonClass(consonant, 'consonant'),\n                onClick: () => handleJamoSelection(consonant, 'consonant'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: consonant.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: consonant.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 23\n                }, this)]\n              }, consonant.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this)), requiredJamo.vowels.map(vowel => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: getJamoButtonClass(vowel, 'vowel'),\n                onClick: () => handleJamoSelection(vowel, 'vowel'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: vowel.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: vowel.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this)]\n              }, vowel.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-workspace\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Selected for Current Syllable:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-jamo\",\n              children: [selectedJamo.consonants.map((c, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `selected-jamo-item ${index === 0 ? 'consonant' : 'final-consonant'}`,\n                children: [c.koreanLetter, \" (\", c.name, \")\", index === 0 ? ' (initial)' : ' (final)']\n              }, c.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 21\n              }, this)), selectedJamo.vowels.map(v => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-jamo-item vowel\",\n                children: [v.koreanLetter, \" (\", v.name, \")\"]\n              }, v.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-preview\",\n              children: selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-syllable\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-text\",\n                  children: [\"Preview: \", selectedJamo.consonants[0].koreanLetter + selectedJamo.vowels[0].koreanLetter, selectedJamo.consonants.length > 1 && selectedJamo.consonants[1].koreanLetter]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-structure\",\n                  children: [\"(\", selectedJamo.consonants.length > 1 ? 'CVC' : 'CV', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"build-syllable-btn\",\n              onClick: () => {\n                console.log('Build Syllable clicked');\n                console.log('Selected Jamo:', selectedJamo);\n                console.log('Can build:', canBuildSyllable());\n                buildSyllable();\n              },\n              disabled: !canBuildSyllable(),\n              children: canBuildSyllable() ? 'Build Syllable →' : 'Select 1 consonant + 1 vowel (+ optional final consonant)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), selectedJamo.consonants.length > 0 || selectedJamo.vowels.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-selection-btn\",\n              onClick: () => setSelectedJamo({\n                consonants: [],\n                vowels: []\n              }),\n              children: \"Clear Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"built-syllables\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Built Syllables (\", builtSyllables.length, \"/\", selectedWord.syllables.length, \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllables-display\",\n              children: builtSyllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"built-syllable\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"syllable-text\",\n                  children: syllable.syllable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-components\",\n                  children: [syllable.consonant, \" + \", syllable.vowel, syllable.final && ` + ${syllable.final}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-structure\",\n                  children: syllable.structure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this), builtSyllables.length < selectedWord.syllables.length && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"next-syllable-hint\",\n              children: [\"Next: Build \\\"\", selectedWord.syllables[builtSyllables.length].syllable, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-stage-btn\",\n            onClick: () => setCurrentStage(1),\n            children: \"\\u2190 Back to Jamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-stage-btn\",\n            onClick: advanceToNextStage,\n            disabled: !checkStageCompletion(),\n            children: \"Next: Build Word \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this), currentStage === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 3: Build the Complete Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Arrange the syllable blocks to form the complete word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-building\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"target-word-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Word Structure:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-slots\",\n              children: selectedWord.syllables.map((targetSyllable, index) => {\n                const isCorrect = userWord[index] && userWord[index].syllable === targetSyllable.syllable;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `word-slot ${isCorrect ? 'correct' : ''}`,\n                  children: userWord[index] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `syllable-in-word ${isCorrect ? 'correct' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"syllable-text\",\n                      children: userWord[index].syllable\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"remove-syllable\",\n                      onClick: () => removeSyllable(index),\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"empty-word-slot\",\n                    children: \"Drop syllable here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), userWord.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-word\",\n              children: [\"Current: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"current-word-display\",\n                children: userWord.map(s => s.syllable).join('')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this), checkStageCompletion() && currentStage === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success-message\",\n              children: [\"\\uD83C\\uDF89 Congratulations! You successfully built \\\"\", selectedWord.korean, \"\\\" (\", selectedWord.english, \")!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available-syllables\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Available Syllables:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllables-pool\",\n              children: builtSyllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getSyllableButtonClass(syllable),\n                draggable: !userWord.some(userSyl => userSyl.syllable === syllable.syllable),\n                onDragStart: e => {\n                  e.dataTransfer.setData('text/plain', syllable.syllable);\n                },\n                onClick: () => handleSyllableDrop(syllable),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"syllable-display\",\n                  children: syllable.syllable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-stage-btn\",\n            onClick: () => setCurrentStage(2),\n            children: \"\\u2190 Back to Syllables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"check-word-btn\",\n            onClick: () => {\n              if (checkStageCompletion()) {\n                setShowHint(false);\n                setCurrentHint(`Perfect! You successfully built \"${selectedWord.korean}\" (${selectedWord.english})!`);\n                setShowHint(true);\n              } else {\n                setShowHint(false);\n                setCurrentHint(`Almost there! Make sure \"${selectedWord.syllables[userWord.length].syllable}\" is in the correct position.`);\n                setShowHint(true);\n              }\n            },\n            children: \"Check Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: resetExercise,\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-word-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"Try Another Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hint-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hint-icon\",\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-hint\",\n            onClick: () => setShowHint(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n_s(WordBuilderSection, \"I16eSpEKyAQm5si9JFq8htCv5Yw=\");\n_c = WordBuilderSection;\nexport default WordBuilderSection;\nvar _c;\n$RefreshReg$(_c, \"WordBuilderSection\");","map":{"version":3,"names":["React","useState","useCallback","exampleWords","koreanConsonants","koreanVowels","jsxDEV","_jsxDEV","WordBuilderSection","_s","selectedWord","setSelectedWord","currentStage","setCurrentStage","selectedJamo","setSelectedJamo","consonants","vowels","builtSyllables","setBuiltSyllables","userWord","setUserWord","showHint","setShowHint","currentHint","setCurrentHint","selectWord","word","getRequiredJamo","required","syllables","forEach","syllable","consonant","find","c","koreanLetter","id","push","vowel","v","final","finalConsonant","getHints","hints","missingConsonants","filter","reqC","some","selC","missingVowels","reqV","selV","length","name","currentSyllableIndex","targetSyllable","structure","nextSyllable","availableSyllable","bs","showHintForCurrentStage","handleJamoSelection","jamo","type","console","log","prev","newState","includes","canBuildSyllable","hasConsonant","hasVowel","hasFinalConsonant","buildSyllable","initialConsonant","syllableText","ts","consonantMatch","vowelMatch","finalMatch","newSyllable","completed","handleSyllableDrop","userSyl","removeSyllable","index","_","i","checkStageCompletion","hasAllConsonants","every","hasAllVowels","advanceToNextStage","resetExercise","getJamoButtonClass","isSelected","getSyllableButtonClass","isUsed","requiredJamo","stageHints","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","korean","romanization","english","disabled","isCorrect","s","join","draggable","onDragStart","e","dataTransfer","setData","_c","$RefreshReg$"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { exampleWords, koreanConsonants, koreanVowels } from '../koreanAlphabetData';\n\nconst WordBuilderSection = () => {\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currentStage, setCurrentStage] = useState(1); // 1: jamo, 2: syllables, 3: word\n  const [selectedJamo, setSelectedJamo] = useState({ consonants: [], vowels: [] });\n  const [builtSyllables, setBuiltSyllables] = useState([]);\n  const [userWord, setUserWord] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [currentHint, setCurrentHint] = useState('');\n\n  const selectWord = useCallback((word) => {\n    setSelectedWord(word);\n    setCurrentStage(1);\n    setSelectedJamo({ consonants: [], vowels: [] });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n\n  const getRequiredJamo = useCallback(() => {\n    if (!selectedWord) return { consonants: [], vowels: [] };\n\n    const required = { consonants: [], vowels: [] };\n\n    selectedWord.syllables.forEach(syllable => {\n      // Add initial consonant\n      if (syllable.consonant) {\n        const consonant = koreanConsonants.find(c => c.koreanLetter === syllable.consonant);\n        if (consonant && !required.consonants.find(c => c.id === consonant.id)) {\n          required.consonants.push(consonant);\n        }\n      }\n\n      // Add vowel\n      if (syllable.vowel) {\n        const vowel = koreanVowels.find(v => v.koreanLetter === syllable.vowel);\n        if (vowel && !required.vowels.find(v => v.id === vowel.id)) {\n          required.vowels.push(vowel);\n        }\n      }\n\n      // Add final consonant (for CVC syllables)\n      if (syllable.final) {\n        const finalConsonant = koreanConsonants.find(c => c.koreanLetter === syllable.final);\n        if (finalConsonant && !required.consonants.find(c => c.id === finalConsonant.id)) {\n          required.consonants.push(finalConsonant);\n        }\n      }\n    });\n\n    return required;\n  }, [selectedWord]);\n\n  const getHints = useCallback(() => {\n    if (!selectedWord) return [];\n\n    const hints = [];\n\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const missingConsonants = required.consonants.filter(reqC =>\n        !selectedJamo.consonants.some(selC => selC.id === reqC.id)\n      );\n      const missingVowels = required.vowels.filter(reqV =>\n        !selectedJamo.vowels.some(selV => selV.id === reqV.id)\n      );\n\n      if (missingConsonants.length > 0) {\n        hints.push(`Select the consonant: ${missingConsonants[0].koreanLetter} (${missingConsonants[0].name})`);\n      } else if (missingVowels.length > 0) {\n        hints.push(`Select the vowel: ${missingVowels[0].koreanLetter} (${missingVowels[0].name})`);\n      } else {\n        hints.push(\"Great! You've selected all required letters. Click 'Next' to build syllables.\");\n      }\n    }\n\n    if (currentStage === 2) {\n      const currentSyllableIndex = builtSyllables.length;\n      if (currentSyllableIndex < selectedWord.syllables.length) {\n        const targetSyllable = selectedWord.syllables[currentSyllableIndex];\n\n        if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length === 0) {\n          if (targetSyllable.structure === 'CVC') {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CVC): Select ${targetSyllable.consonant} (initial) + ${targetSyllable.vowel} + ${targetSyllable.final} (final)`);\n          } else {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CV): Select ${targetSyllable.consonant} + ${targetSyllable.vowel}`);\n          }\n        } else if (selectedJamo.consonants.length > 0 && selectedJamo.vowels.length === 0) {\n          hints.push(`Now select ${targetSyllable.vowel}${targetSyllable.final ? ' (and optionally ' + targetSyllable.final + ' for final consonant)' : ''}`);\n        } else if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length > 0) {\n          hints.push(`Select ${targetSyllable.consonant} as initial consonant`);\n        } else if (selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1) {\n          if (targetSyllable.final && selectedJamo.consonants.length === 1) {\n            hints.push(`Add ${targetSyllable.final} as final consonant, or click \"Build Syllable\" for CV structure`);\n          } else {\n            hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\"`);\n          }\n        } else if (selectedJamo.consonants.length === 2 && selectedJamo.vowels.length === 1) {\n          hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CVC structure)`);\n        }\n      }\n    }\n\n    if (currentStage === 3) {\n      if (userWord.length < selectedWord.syllables.length) {\n        const nextSyllable = selectedWord.syllables[userWord.length];\n        const availableSyllable = builtSyllables.find(bs => bs.syllable === nextSyllable.syllable);\n        if (availableSyllable) {\n          hints.push(`Drag \"${availableSyllable.syllable}\" to the next empty slot`);\n        } else {\n          hints.push(`Build \"${nextSyllable.syllable}\" first in Stage 2`);\n        }\n      } else {\n        hints.push(`Click \"Check Word\" to verify your word construction`);\n      }\n    }\n\n    return hints;\n  }, [selectedWord, currentStage, selectedJamo, builtSyllables, userWord, getRequiredJamo]);\n\n  const showHintForCurrentStage = useCallback(() => {\n    const hints = getHints();\n    if (hints.length > 0) {\n      setCurrentHint(hints[0]);\n      setShowHint(true);\n    }\n  }, [getHints]);\n\n  const handleJamoSelection = useCallback((jamo, type) => {\n    console.log('Jamo selected:', jamo, type);\n\n    if (type === 'consonant') {\n      setSelectedJamo(prev => {\n        const newState = {\n          ...prev,\n          consonants: prev.consonants.includes(jamo)\n            ? prev.consonants.filter(c => c.id !== jamo.id)\n            : [...prev.consonants, jamo]\n        };\n        console.log('New consonant state:', newState);\n        return newState;\n      });\n    } else {\n      setSelectedJamo(prev => {\n        const newState = {\n          ...prev,\n          vowels: prev.vowels.includes(jamo)\n            ? prev.vowels.filter(v => v.id !== jamo.id)\n            : [...prev.vowels, jamo]\n        };\n        console.log('New vowel state:', newState);\n        return newState;\n      });\n    }\n  }, []);\n\n  const canBuildSyllable = useCallback(() => {\n    // For CV syllables: need exactly 1 consonant and 1 vowel\n    // For CVC syllables: need 1 consonant, 1 vowel, and optionally 1 final consonant\n    const hasConsonant = selectedJamo.consonants.length >= 1;\n    const hasVowel = selectedJamo.vowels.length === 1;\n    const hasFinalConsonant = selectedJamo.consonants.length <= 2; // Max 1 initial + 1 final\n\n    return hasConsonant && hasVowel && hasFinalConsonant;\n  }, [selectedJamo]);\n\n\n  const buildSyllable = useCallback(() => {\n    if (!canBuildSyllable()) return;\n\n    const initialConsonant = selectedJamo.consonants[0];\n    const vowel = selectedJamo.vowels[0];\n    const finalConsonant = selectedJamo.consonants.length > 1 ? selectedJamo.consonants[1] : null;\n\n    // Create syllable text based on structure\n    let syllableText = initialConsonant.koreanLetter + vowel.koreanLetter;\n    if (finalConsonant) {\n      syllableText += finalConsonant.koreanLetter;\n    }\n\n    // Find the matching syllable in the target word to get complete structure\n    const targetSyllable = selectedWord.syllables.find(ts => {\n      const consonantMatch = ts.consonant === initialConsonant.koreanLetter;\n      const vowelMatch = ts.vowel === vowel.koreanLetter;\n      const finalMatch = finalConsonant\n        ? ts.final === finalConsonant.koreanLetter\n        : !ts.final; // No final consonant expected\n\n      return consonantMatch && vowelMatch && finalMatch;\n    });\n\n    const newSyllable = {\n      syllable: targetSyllable ? targetSyllable.syllable : syllableText,\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : (targetSyllable ? targetSyllable.final : null),\n      structure: targetSyllable ? targetSyllable.structure : (finalConsonant ? 'CVC' : 'CV'),\n      completed: true\n    };\n\n    setBuiltSyllables(prev => [...prev, newSyllable]);\n    setSelectedJamo({ consonants: [], vowels: [] });\n  }, [canBuildSyllable, selectedJamo, selectedWord]);\n\n  const handleSyllableDrop = useCallback((syllable) => {\n    if (userWord.length >= selectedWord.syllables.length) return;\n\n    if (userWord.some(userSyl => userSyl.syllable === syllable.syllable)) return;\n\n    setUserWord(prev => [...prev, syllable]);\n  }, [selectedWord, userWord]);\n\n  const removeSyllable = useCallback((index) => {\n    setUserWord(prev => prev.filter((_, i) => i !== index));\n  }, []);\n\n  const checkStageCompletion = useCallback(() => {\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const hasAllConsonants = required.consonants.every(reqC =>\n        selectedJamo.consonants.some(selC => selC.id === reqC.id)\n      );\n      const hasAllVowels = required.vowels.every(reqV =>\n        selectedJamo.vowels.some(selV => selV.id === reqV.id)\n      );\n      return hasAllConsonants && hasAllVowels;\n    }\n\n    if (currentStage === 2) {\n      return builtSyllables.length === selectedWord.syllables.length &&\n             builtSyllables.every(bs => bs.completed);\n    }\n\n    if (currentStage === 3) {\n      if (userWord.length !== selectedWord.syllables.length) return false;\n      return userWord.every((userSyl, index) =>\n        userSyl.syllable === selectedWord.syllables[index].syllable\n      );\n    }\n\n    return false;\n  }, [currentStage, selectedJamo, builtSyllables, userWord, selectedWord, getRequiredJamo]);\n\n  const advanceToNextStage = useCallback(() => {\n    if (currentStage < 3) {\n      setCurrentStage(prev => prev + 1);\n      setShowHint(false);\n    }\n  }, [currentStage]);\n\n  const resetExercise = useCallback(() => {\n    setCurrentStage(1);\n    setSelectedJamo({ consonants: [], vowels: [] });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n\n  const getJamoButtonClass = (jamo, type) => {\n    const isSelected = type === 'consonant'\n      ? selectedJamo.consonants.some(c => c.id === jamo.id)\n      : selectedJamo.vowels.some(v => v.id === jamo.id);\n    return `jamo-btn ${isSelected ? 'selected' : 'available'}`;\n  };\n\n  const getSyllableButtonClass = (syllable) => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n\n  const requiredJamo = getRequiredJamo();\n  const stageHints = getHints();\n\n  if (!selectedWord) {\n    return (\n      <div className=\"word-builder-section\">\n        <div className=\"section-header\">\n          <h2>Progressive Word Builder</h2>\n          <p>Learn Korean writing step by step: from individual letters to complete words.</p>\n        </div>\n\n        <div className=\"word-selection\">\n          <h3>Select a word to build:</h3>\n          <div className=\"word-cards\">\n            {exampleWords.map(word => (\n              <button\n                key={word.id}\n                className=\"word-card\"\n                onClick={() => selectWord(word)}\n              >\n                <div className=\"word-korean\">{word.korean}</div>\n                <div className=\"word-romanization\">{word.romanization}</div>\n                <div className=\"word-english\">\"{word.english}\"</div>\n                <div className=\"syllable-count\">{word.syllables.length} syllables</div>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"word-builder-section\">\n      <div className=\"section-header\">\n        <div className=\"exercise-header\">\n          <button className=\"back-btn\" onClick={() => setSelectedWord(null)}>\n            ← Back to Word Selection\n          </button>\n          <h2>Build: {selectedWord.english}</h2>\n          <div className=\"word-info\">\n            <span className=\"target-word\">{selectedWord.korean}</span>\n            <span className=\"romanization\">({selectedWord.romanization})</span>\n          </div>\n        </div>\n\n        {/* Progress indicator */}\n        <div className=\"stage-progress\">\n          <div className={`stage ${currentStage === 1 ? 'active' : ''} ${currentStage > 1 ? 'completed' : ''}`}>\n            <span className=\"stage-number\">1</span>\n            <span className=\"stage-label\">Jamo</span>\n          </div>\n          <div className={`stage ${currentStage === 2 ? 'active' : ''} ${currentStage > 2 ? 'completed' : ''}`}>\n            <span className=\"stage-number\">2</span>\n            <span className=\"stage-label\">Syllables</span>\n          </div>\n          <div className={`stage ${currentStage === 3 ? 'active' : ''}`}>\n            <span className=\"stage-number\">3</span>\n            <span className=\"stage-label\">Word</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"word-builder-container\">\n        {/* Stage 1: Jamo Selection */}\n        {currentStage === 1 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 1: Select Required Letters (Jamo)</h3>\n              <p>Choose all the consonants and vowels needed to build this word.</p>\n            </div>\n\n            <div className=\"jamo-selection\">\n              <div className=\"jamo-section\">\n                <h4>Required Consonants:</h4>\n                <div className=\"jamo-grid\">\n                  {requiredJamo.consonants.map(consonant => (\n                    <div\n                      key={consonant.id}\n                      className={getJamoButtonClass(consonant, 'consonant')}\n                      onClick={() => handleJamoSelection(consonant, 'consonant')}\n                    >\n                      <span className=\"jamo-letter\">{consonant.koreanLetter}</span>\n                      <span className=\"jamo-name\">{consonant.name}</span>\n                      <span className=\"jamo-sound\">({consonant.romanization})</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"jamo-section\">\n                <h4>Required Vowels:</h4>\n                <div className=\"jamo-grid\">\n                  {requiredJamo.vowels.map(vowel => (\n                    <div\n                      key={vowel.id}\n                      className={getJamoButtonClass(vowel, 'vowel')}\n                      onClick={() => handleJamoSelection(vowel, 'vowel')}\n                    >\n                      <span className=\"jamo-letter\">{vowel.koreanLetter}</span>\n                      <span className=\"jamo-name\">{vowel.name}</span>\n                      <span className=\"jamo-sound\">({vowel.romanization})</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button\n                className=\"hint-btn\"\n                onClick={showHintForCurrentStage}\n                disabled={stageHints.length === 0}\n              >\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button\n                className=\"next-stage-btn\"\n                onClick={advanceToNextStage}\n                disabled={!checkStageCompletion()}\n              >\n                Next: Build Syllables →\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Stage 2: Syllable Building */}\n        {currentStage === 2 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 2: Build Syllable Blocks</h3>\n              <p>Combine consonants and vowels to create syllable blocks. Build them one at a time.</p>\n            </div>\n\n            <div className=\"syllable-building\">\n              {/* Available Jamo Pool for Syllable Building */}\n              <div className=\"jamo-pool-stage2\">\n                <h4>Available Letters:</h4>\n                <p>Select one consonant and one vowel to build the next syllable.</p>\n                <div className=\"jamo-pool-grid\">\n                  {requiredJamo.consonants.map(consonant => (\n                    <button\n                      key={consonant.id}\n                      className={getJamoButtonClass(consonant, 'consonant')}\n                      onClick={() => handleJamoSelection(consonant, 'consonant')}\n                    >\n                      <span className=\"jamo-letter\">{consonant.koreanLetter}</span>\n                      <span className=\"jamo-name\">{consonant.name}</span>\n                    </button>\n                  ))}\n                  {requiredJamo.vowels.map(vowel => (\n                    <button\n                      key={vowel.id}\n                      className={getJamoButtonClass(vowel, 'vowel')}\n                      onClick={() => handleJamoSelection(vowel, 'vowel')}\n                    >\n                      <span className=\"jamo-letter\">{vowel.koreanLetter}</span>\n                      <span className=\"jamo-name\">{vowel.name}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"jamo-workspace\">\n                <h4>Selected for Current Syllable:</h4>\n                <div className=\"selected-jamo\">\n                  {selectedJamo.consonants.map((c, index) => (\n                    <span key={c.id} className={`selected-jamo-item ${index === 0 ? 'consonant' : 'final-consonant'}`}>\n                      {c.koreanLetter} ({c.name})\n                      {index === 0 ? ' (initial)' : ' (final)'}\n                    </span>\n                  ))}\n                  {selectedJamo.vowels.map(v => (\n                    <span key={v.id} className=\"selected-jamo-item vowel\">\n                      {v.koreanLetter} ({v.name})\n                    </span>\n                  ))}\n                </div>\n\n                <div className=\"syllable-preview\">\n                  {selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && (\n                    <div className=\"preview-syllable\">\n                      <span className=\"preview-text\">\n                        Preview: {selectedJamo.consonants[0].koreanLetter + selectedJamo.vowels[0].koreanLetter}\n                        {selectedJamo.consonants.length > 1 && selectedJamo.consonants[1].koreanLetter}\n                      </span>\n                      <span className=\"preview-structure\">\n                        ({selectedJamo.consonants.length > 1 ? 'CVC' : 'CV'})\n                      </span>\n                    </div>\n                  )}\n                </div>\n\n                <button\n                  className=\"build-syllable-btn\"\n                  onClick={() => {\n                    console.log('Build Syllable clicked');\n                    console.log('Selected Jamo:', selectedJamo);\n                    console.log('Can build:', canBuildSyllable());\n                    buildSyllable();\n                  }}\n                  disabled={!canBuildSyllable()}\n                >\n                  {canBuildSyllable() ? 'Build Syllable →' : 'Select 1 consonant + 1 vowel (+ optional final consonant)'}\n                </button>\n\n                {selectedJamo.consonants.length > 0 || selectedJamo.vowels.length > 0 ? (\n                  <button\n                    className=\"clear-selection-btn\"\n                    onClick={() => setSelectedJamo({ consonants: [], vowels: [] })}\n                  >\n                    Clear Selection\n                  </button>\n                ) : null}\n              </div>\n\n              <div className=\"built-syllables\">\n                <h4>Built Syllables ({builtSyllables.length}/{selectedWord.syllables.length}):</h4>\n                <div className=\"syllables-display\">\n                  {builtSyllables.map((syllable, index) => (\n                    <div key={index} className=\"built-syllable\">\n                      <span className=\"syllable-text\">{syllable.syllable}</span>\n                      <div className=\"syllable-components\">\n                        {syllable.consonant} + {syllable.vowel}\n                        {syllable.final && ` + ${syllable.final}`}\n                      </div>\n                      <div className=\"syllable-structure\">{syllable.structure}</div>\n                    </div>\n                  ))}\n                </div>\n\n                {builtSyllables.length < selectedWord.syllables.length && (\n                  <div className=\"next-syllable-hint\">\n                    Next: Build \"{selectedWord.syllables[builtSyllables.length].syllable}\"\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button className=\"hint-btn\" onClick={showHintForCurrentStage}>\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button className=\"prev-stage-btn\" onClick={() => setCurrentStage(1)}>\n                ← Back to Jamo\n              </button>\n              <button\n                className=\"next-stage-btn\"\n                onClick={advanceToNextStage}\n                disabled={!checkStageCompletion()}\n              >\n                Next: Build Word →\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Stage 3: Word Building */}\n        {currentStage === 3 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 3: Build the Complete Word</h3>\n              <p>Arrange the syllable blocks to form the complete word.</p>\n            </div>\n\n            <div className=\"word-building\">\n              <div className=\"target-word-area\">\n                <h4>Word Structure:</h4>\n                <div className=\"word-slots\">\n                  {selectedWord.syllables.map((targetSyllable, index) => {\n                    const isCorrect = userWord[index] && userWord[index].syllable === targetSyllable.syllable;\n                    return (\n                      <div key={index} className={`word-slot ${isCorrect ? 'correct' : ''}`}>\n                        {userWord[index] ? (\n                          <div className={`syllable-in-word ${isCorrect ? 'correct' : ''}`}>\n                            <span className=\"syllable-text\">{userWord[index].syllable}</span>\n                            <button\n                              className=\"remove-syllable\"\n                              onClick={() => removeSyllable(index)}\n                            >\n                              ×\n                            </button>\n                          </div>\n                        ) : (\n                          <div className=\"empty-word-slot\">\n                            Drop syllable here\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n                {userWord.length > 0 && (\n                  <div className=\"current-word\">\n                    Current: <span className=\"current-word-display\">\n                      {userWord.map(s => s.syllable).join('')}\n                    </span>\n                  </div>\n                )}\n\n                {checkStageCompletion() && currentStage === 3 && (\n                  <div className=\"success-message\">\n                    🎉 Congratulations! You successfully built \"{selectedWord.korean}\" ({selectedWord.english})!\n                  </div>\n                )}\n              </div>\n\n              <div className=\"available-syllables\">\n                <h4>Available Syllables:</h4>\n                <div className=\"syllables-pool\">\n                  {builtSyllables.map((syllable, index) => (\n                    <div\n                      key={index}\n                      className={getSyllableButtonClass(syllable)}\n                      draggable={!userWord.some(userSyl => userSyl.syllable === syllable.syllable)}\n                      onDragStart={(e) => {\n                        e.dataTransfer.setData('text/plain', syllable.syllable);\n                      }}\n                      onClick={() => handleSyllableDrop(syllable)}\n                    >\n                      <span className=\"syllable-display\">{syllable.syllable}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button className=\"hint-btn\" onClick={showHintForCurrentStage}>\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button className=\"prev-stage-btn\" onClick={() => setCurrentStage(2)}>\n                ← Back to Syllables\n              </button>\n              <button className=\"check-word-btn\" onClick={() => {\n                if (checkStageCompletion()) {\n                  setShowHint(false);\n                  setCurrentHint(`Perfect! You successfully built \"${selectedWord.korean}\" (${selectedWord.english})!`);\n                  setShowHint(true);\n                } else {\n                  setShowHint(false);\n                  setCurrentHint(`Almost there! Make sure \"${selectedWord.syllables[userWord.length].syllable}\" is in the correct position.`);\n                  setShowHint(true);\n                }\n              }}>\n                Check Word\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Overall Controls */}\n        <div className=\"exercise-controls\">\n          <button className=\"reset-btn\" onClick={resetExercise}>\n            Start Over\n          </button>\n          <button className=\"new-word-btn\" onClick={() => setSelectedWord(null)}>\n            Try Another Word\n          </button>\n        </div>\n\n        {/* Hints */}\n        {showHint && (\n          <div className=\"hint-section\">\n            <div className=\"hint-content\">\n              <span className=\"hint-icon\">💡</span>\n              <span className=\"hint-text\">{currentHint}</span>\n              <button className=\"close-hint\" onClick={() => setShowHint(false)}>×</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WordBuilderSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}