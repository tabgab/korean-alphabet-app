{"ast":null,"code":"var _jsxFileName = \"/Users/gabortabi/DEV/learnKorean/src/components/PracticeSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useProgress } from '../context/ProgressContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PracticeSection = () => {\n  _s();\n  const {\n    getAvailableLetters,\n    updateScore,\n    getBestScore,\n    isLetterCompleted\n  } = useProgress();\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [sessionStats, setSessionStats] = useState({\n    correct: 0,\n    incorrect: 0,\n    currentStreak: 0,\n    bestStreak: 0\n  });\n  const [practiceMode, setPracticeMode] = useState('identification');\n\n  // Get available letters for practice\n  const availableLetters = getAvailableLetters();\n\n  // Generate a new question\n  const generateQuestion = useCallback(() => {\n    if (availableLetters.length === 0) return;\n    let question, correctAnswer, options, selectedLetter;\n    switch (practiceMode) {\n      case 'identification':\n        // Show Korean letter, ask for name or sound\n        selectedLetter = availableLetters[Math.floor(Math.random() * availableLetters.length)];\n        question = `What is the name of this Korean letter?`;\n        correctAnswer = selectedLetter.name;\n        options = [correctAnswer];\n\n        // Add 3 incorrect options\n        const otherLetters = availableLetters.filter(letter => letter.id !== selectedLetter.id);\n        while (options.length < 4 && otherLetters.length > 0) {\n          const randomIndex = Math.floor(Math.random() * otherLetters.length);\n          const incorrectOption = otherLetters[randomIndex].name;\n          if (!options.includes(incorrectOption)) {\n            options.push(incorrectOption);\n          }\n          otherLetters.splice(randomIndex, 1);\n        }\n        break;\n      case 'pronunciation':\n        // Show Korean letter, ask for romanization\n        selectedLetter = availableLetters[Math.floor(Math.random() * availableLetters.length)];\n        question = `How do you romanize this letter?`;\n        correctAnswer = selectedLetter.romanization;\n        options = [correctAnswer];\n\n        // Add 3 incorrect options\n        const otherLetters2 = availableLetters.filter(letter => letter.id !== selectedLetter.id);\n        while (options.length < 4 && otherLetters2.length > 0) {\n          const randomIndex = Math.floor(Math.random() * otherLetters2.length);\n          const incorrectOption = otherLetters2[randomIndex].romanization;\n          if (!options.includes(incorrectOption)) {\n            options.push(incorrectOption);\n          }\n          otherLetters2.splice(randomIndex, 1);\n        }\n        break;\n      default:\n        return;\n    }\n\n    // Shuffle options\n    options = options.sort(() => Math.random() - 0.5);\n    setCurrentQuestion({\n      question,\n      correctAnswer,\n      options,\n      letter: selectedLetter\n    });\n    setSelectedAnswer(null);\n    setShowResult(false);\n  }, [availableLetters, practiceMode]);\n\n  // Initialize first question\n  useEffect(() => {\n    generateQuestion();\n  }, [generateQuestion]);\n\n  // Handle answer selection\n  const handleAnswerSelect = answer => {\n    setSelectedAnswer(answer);\n    setShowResult(true);\n    const isCorrect = answer === currentQuestion.correctAnswer;\n    const newScore = isCorrect ? 100 : 0;\n\n    // Update progress\n    updateScore(currentQuestion.letter.id, newScore);\n\n    // Update session stats\n    setSessionStats(prev => ({\n      correct: prev.correct + (isCorrect ? 1 : 0),\n      incorrect: prev.incorrect + (isCorrect ? 0 : 1),\n      currentStreak: isCorrect ? prev.currentStreak + 1 : 0,\n      bestStreak: isCorrect ? Math.max(prev.bestStreak, prev.currentStreak + 1) : prev.bestStreak\n    }));\n\n    // Update question count\n    setQuestionCount(prev => prev + 1);\n\n    // Auto-advance to next question after 2 seconds\n    setTimeout(() => {\n      generateQuestion();\n    }, 2000);\n  };\n\n  // Get practice mode description\n  const getPracticeModeDescription = () => {\n    switch (practiceMode) {\n      case 'identification':\n        return 'Identify Korean letters by their names';\n      case 'pronunciation':\n        return 'Practice Korean letter romanization';\n      default:\n        return 'Practice Korean letters';\n    }\n  };\n\n  // Calculate session accuracy\n  const getSessionAccuracy = () => {\n    if (questionCount === 0) return 0;\n    return Math.round(sessionStats.correct / questionCount * 100);\n  };\n  if (availableLetters.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Practice Korean Letters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No letters available for practice. Complete some letters in the Learn section first!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Practice Korean Letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getPracticeModeDescription()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-mode-selection\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mode-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `mode-btn ${practiceMode === 'identification' ? 'active' : ''}`,\n            onClick: () => setPracticeMode('identification'),\n            children: \"Letter Names\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `mode-btn ${practiceMode === 'pronunciation' ? 'active' : ''}`,\n            onClick: () => setPracticeMode('pronunciation'),\n            children: \"Romanization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"session-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: questionCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Correct:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value correct\",\n            children: sessionStats.correct\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Accuracy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [getSessionAccuracy(), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Best Streak:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: sessionStats.bestStreak\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", questionCount + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"letter-display-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"korean-letter-large\",\n              children: currentQuestion.letter.koreanLetter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"letter-hint\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `category-hint ${currentQuestion.letter.category}`,\n                children: currentQuestion.letter.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `difficulty-hint difficulty-${currentQuestion.letter.difficulty}`,\n                children: [\"Level \", currentQuestion.letter.difficulty]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentQuestion.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-options\",\n            children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `answer-option ${showResult ? option === currentQuestion.correctAnswer ? 'correct' : selectedAnswer === option ? 'incorrect' : '' : selectedAnswer === option ? 'selected' : ''}`,\n              onClick: () => !showResult && handleAnswerSelect(option),\n              disabled: showResult,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-letter\",\n                children: String.fromCharCode(65 + index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-text\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), showResult && option === currentQuestion.correctAnswer && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-icon correct\",\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 23\n              }, this), showResult && selectedAnswer === option && option !== currentQuestion.correctAnswer && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"result-icon incorrect\",\n                children: \"\\u2717\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-feedback\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `feedback ${selectedAnswer === currentQuestion.correctAnswer ? 'correct' : 'incorrect'}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: selectedAnswer === currentQuestion.correctAnswer ? 'Correct! Well done!' : `Incorrect. The correct answer is \"${currentQuestion.correctAnswer}\".`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"letter-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [currentQuestion.letter.name, \" (\", currentQuestion.letter.koreanLetter, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Romanization:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 24\n                }, this), \" \", currentQuestion.letter.romanization]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Pronunciation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 24\n                }, this), \" \", currentQuestion.letter.englishComparison]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-label\",\n              children: \"Best Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-value\",\n              children: [getBestScore(currentQuestion.letter.id), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-label\",\n              children: \"Completed:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-value\",\n              children: isLetterCompleted(currentQuestion.letter.id) ? 'Yes' : 'No'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(PracticeSection, \"arfzZk6WJUhvstsCxb4SNftWNP0=\", false, function () {\n  return [useProgress];\n});\n_c = PracticeSection;\nexport default PracticeSection;\nvar _c;\n$RefreshReg$(_c, \"PracticeSection\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useProgress","jsxDEV","_jsxDEV","PracticeSection","_s","getAvailableLetters","updateScore","getBestScore","isLetterCompleted","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","showResult","setShowResult","questionCount","setQuestionCount","sessionStats","setSessionStats","correct","incorrect","currentStreak","bestStreak","practiceMode","setPracticeMode","availableLetters","generateQuestion","length","question","correctAnswer","options","selectedLetter","Math","floor","random","name","otherLetters","filter","letter","id","randomIndex","incorrectOption","includes","push","splice","romanization","otherLetters2","sort","handleAnswerSelect","answer","isCorrect","newScore","prev","max","setTimeout","getPracticeModeDescription","getSessionAccuracy","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","koreanLetter","category","difficulty","map","option","index","disabled","String","fromCharCode","englishComparison","_c","$RefreshReg$"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/PracticeSection.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useProgress } from '../context/ProgressContext';\n\nconst PracticeSection = () => {\n  const {\n    getAvailableLetters,\n    updateScore,\n    getBestScore,\n    isLetterCompleted\n  } = useProgress();\n\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [questionCount, setQuestionCount] = useState(0);\n  const [sessionStats, setSessionStats] = useState({\n    correct: 0,\n    incorrect: 0,\n    currentStreak: 0,\n    bestStreak: 0\n  });\n  const [practiceMode, setPracticeMode] = useState('identification');\n\n  // Get available letters for practice\n  const availableLetters = getAvailableLetters();\n\n  // Generate a new question\n  const generateQuestion = useCallback(() => {\n    if (availableLetters.length === 0) return;\n\n    let question, correctAnswer, options, selectedLetter;\n\n    switch (practiceMode) {\n      case 'identification':\n        // Show Korean letter, ask for name or sound\n        selectedLetter = availableLetters[Math.floor(Math.random() * availableLetters.length)];\n        question = `What is the name of this Korean letter?`;\n        correctAnswer = selectedLetter.name;\n        options = [correctAnswer];\n\n        // Add 3 incorrect options\n        const otherLetters = availableLetters.filter(letter => letter.id !== selectedLetter.id);\n        while (options.length < 4 && otherLetters.length > 0) {\n          const randomIndex = Math.floor(Math.random() * otherLetters.length);\n          const incorrectOption = otherLetters[randomIndex].name;\n          if (!options.includes(incorrectOption)) {\n            options.push(incorrectOption);\n          }\n          otherLetters.splice(randomIndex, 1);\n        }\n        break;\n\n      case 'pronunciation':\n        // Show Korean letter, ask for romanization\n        selectedLetter = availableLetters[Math.floor(Math.random() * availableLetters.length)];\n        question = `How do you romanize this letter?`;\n        correctAnswer = selectedLetter.romanization;\n        options = [correctAnswer];\n\n        // Add 3 incorrect options\n        const otherLetters2 = availableLetters.filter(letter => letter.id !== selectedLetter.id);\n        while (options.length < 4 && otherLetters2.length > 0) {\n          const randomIndex = Math.floor(Math.random() * otherLetters2.length);\n          const incorrectOption = otherLetters2[randomIndex].romanization;\n          if (!options.includes(incorrectOption)) {\n            options.push(incorrectOption);\n          }\n          otherLetters2.splice(randomIndex, 1);\n        }\n        break;\n\n      default:\n        return;\n    }\n\n    // Shuffle options\n    options = options.sort(() => Math.random() - 0.5);\n\n    setCurrentQuestion({\n      question,\n      correctAnswer,\n      options,\n      letter: selectedLetter\n    });\n    setSelectedAnswer(null);\n    setShowResult(false);\n  }, [availableLetters, practiceMode]);\n\n  // Initialize first question\n  useEffect(() => {\n    generateQuestion();\n  }, [generateQuestion]);\n\n  // Handle answer selection\n  const handleAnswerSelect = (answer) => {\n    setSelectedAnswer(answer);\n    setShowResult(true);\n\n    const isCorrect = answer === currentQuestion.correctAnswer;\n    const newScore = isCorrect ? 100 : 0;\n\n    // Update progress\n    updateScore(currentQuestion.letter.id, newScore);\n\n    // Update session stats\n    setSessionStats(prev => ({\n      correct: prev.correct + (isCorrect ? 1 : 0),\n      incorrect: prev.incorrect + (isCorrect ? 0 : 1),\n      currentStreak: isCorrect ? prev.currentStreak + 1 : 0,\n      bestStreak: isCorrect ? Math.max(prev.bestStreak, prev.currentStreak + 1) : prev.bestStreak\n    }));\n\n    // Update question count\n    setQuestionCount(prev => prev + 1);\n\n    // Auto-advance to next question after 2 seconds\n    setTimeout(() => {\n      generateQuestion();\n    }, 2000);\n  };\n\n  // Get practice mode description\n  const getPracticeModeDescription = () => {\n    switch (practiceMode) {\n      case 'identification':\n        return 'Identify Korean letters by their names';\n      case 'pronunciation':\n        return 'Practice Korean letter romanization';\n      default:\n        return 'Practice Korean letters';\n    }\n  };\n\n  // Calculate session accuracy\n  const getSessionAccuracy = () => {\n    if (questionCount === 0) return 0;\n    return Math.round((sessionStats.correct / questionCount) * 100);\n  };\n\n  if (availableLetters.length === 0) {\n    return (\n      <div className=\"practice-section\">\n        <div className=\"section-header\">\n          <h2>Practice Korean Letters</h2>\n          <p>No letters available for practice. Complete some letters in the Learn section first!</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"practice-section\">\n      <div className=\"section-header\">\n        <h2>Practice Korean Letters</h2>\n        <p>{getPracticeModeDescription()}</p>\n\n        {/* Practice Mode Selection */}\n        <div className=\"practice-mode-selection\">\n          <div className=\"mode-buttons\">\n            <button\n              className={`mode-btn ${practiceMode === 'identification' ? 'active' : ''}`}\n              onClick={() => setPracticeMode('identification')}\n            >\n              Letter Names\n            </button>\n            <button\n              className={`mode-btn ${practiceMode === 'pronunciation' ? 'active' : ''}`}\n              onClick={() => setPracticeMode('pronunciation')}\n            >\n              Romanization\n            </button>\n          </div>\n        </div>\n\n        {/* Session Stats */}\n        <div className=\"session-stats\">\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Questions:</span>\n            <span className=\"stat-value\">{questionCount}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Correct:</span>\n            <span className=\"stat-value correct\">{sessionStats.correct}</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Accuracy:</span>\n            <span className=\"stat-value\">{getSessionAccuracy()}%</span>\n          </div>\n          <div className=\"stat-item\">\n            <span className=\"stat-label\">Best Streak:</span>\n            <span className=\"stat-value\">{sessionStats.bestStreak}</span>\n          </div>\n        </div>\n      </div>\n\n      {currentQuestion && (\n        <div className=\"practice-content\">\n          <div className=\"question-card\">\n            <div className=\"question-header\">\n              <h3>Question {questionCount + 1}</h3>\n            </div>\n\n            <div className=\"question-main\">\n              <div className=\"letter-display-large\">\n                <span className=\"korean-letter-large\">{currentQuestion.letter.koreanLetter}</span>\n                <div className=\"letter-hint\">\n                  <span className={`category-hint ${currentQuestion.letter.category}`}>\n                    {currentQuestion.letter.category}\n                  </span>\n                  <span className={`difficulty-hint difficulty-${currentQuestion.letter.difficulty}`}>\n                    Level {currentQuestion.letter.difficulty}\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"question-text\">\n                <p>{currentQuestion.question}</p>\n              </div>\n\n              <div className=\"answer-options\">\n                {currentQuestion.options.map((option, index) => (\n                  <button\n                    key={index}\n                    className={`answer-option ${\n                      showResult\n                        ? option === currentQuestion.correctAnswer\n                          ? 'correct'\n                          : selectedAnswer === option\n                          ? 'incorrect'\n                          : ''\n                        : selectedAnswer === option\n                        ? 'selected'\n                        : ''\n                    }`}\n                    onClick={() => !showResult && handleAnswerSelect(option)}\n                    disabled={showResult}\n                  >\n                    <span className=\"option-letter\">{String.fromCharCode(65 + index)}</span>\n                    <span className=\"option-text\">{option}</span>\n                    {showResult && option === currentQuestion.correctAnswer && (\n                      <span className=\"result-icon correct\">✓</span>\n                    )}\n                    {showResult && selectedAnswer === option && option !== currentQuestion.correctAnswer && (\n                      <span className=\"result-icon incorrect\">✗</span>\n                    )}\n                  </button>\n                ))}\n              </div>\n\n              {showResult && (\n                <div className=\"result-feedback\">\n                  <div className={`feedback ${selectedAnswer === currentQuestion.correctAnswer ? 'correct' : 'incorrect'}`}>\n                    <p>\n                      {selectedAnswer === currentQuestion.correctAnswer\n                        ? 'Correct! Well done!'\n                        : `Incorrect. The correct answer is \"${currentQuestion.correctAnswer}\".`\n                      }\n                    </p>\n                  </div>\n\n                  <div className=\"letter-info\">\n                    <h4>{currentQuestion.letter.name} ({currentQuestion.letter.koreanLetter})</h4>\n                    <p><strong>Romanization:</strong> {currentQuestion.letter.romanization}</p>\n                    <p><strong>Pronunciation:</strong> {currentQuestion.letter.englishComparison}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Progress Summary */}\n          <div className=\"progress-summary\">\n            <h4>Your Progress</h4>\n            <div className=\"progress-grid\">\n              <div className=\"progress-item\">\n                <span className=\"progress-label\">Best Score:</span>\n                <span className=\"progress-value\">{getBestScore(currentQuestion.letter.id)}%</span>\n              </div>\n              <div className=\"progress-item\">\n                <span className=\"progress-label\">Completed:</span>\n                <span className=\"progress-value\">\n                  {isLetterCompleted(currentQuestion.letter.id) ? 'Yes' : 'No'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PracticeSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}