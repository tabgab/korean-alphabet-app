{"ast":null,"code":"var _jsxFileName = \"/Users/gabortabi/DEV/learnKorean/src/components/LearnSection.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { koreanAlphabet } from '../koreanAlphabetData';\nimport { useProgress } from '../context/ProgressContext';\nimport { playLetterSound, playPronunciationGuide, speakKorean, preloadVoices } from '../utils/audioUtils';\n\n// Pictogram mapping for visual learning\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pictogramMap = {\n  'square-angle': '⊏',\n  'line-horizontal': '─',\n  'line-vertical': '│',\n  'line-diagonal': '╲',\n  'square': '□',\n  'circle': '○',\n  'circle-half': '◐',\n  'triangle': '△',\n  'angle-right': '∟',\n  'zap': '⚡',\n  'h-square': '⊏',\n  'bars': '≡',\n  'table': '⊤',\n  'r': '◟',\n  's': 'Ͻ',\n  't': '┬',\n  'y': '◠',\n  'trident': 'Ψ',\n  'omega': 'Ω',\n  'angle': '∠',\n  'plus': '+',\n  'star': '⭐'\n};\nconst getPictogram = iconName => {\n  return pictogramMap[iconName] || '◇';\n};\n\n// Visual description helper\nconst getVisualDescription = letter => {\n  const descriptions = {\n    'Kiyeok': 'a backwards \"L\" with a small horizontal line',\n    'Nieun': 'a simple horizontal line',\n    'Digeut': 'a square bracket facing right',\n    'Rieul': 'two diagonal lines meeting',\n    'Mieum': 'a perfect square',\n    'Bieup': 'a square with a lid on top',\n    'Si-ot': 'two horizontal lines, one above the other',\n    'Ieung': 'a perfect circle',\n    'Jieut': 'a backwards \"C\" with a horizontal line',\n    'Chieut': 'three horizontal lines stacked',\n    'Kieuk': 'ㄱ but with extra breath (aspirated)',\n    'Tieut': 'ㄷ but with extra breath (aspirated)',\n    'Pieup': 'ㅂ but with extra breath (aspirated)',\n    'Hieut': 'two diagonal lines crossing',\n    'A': 'a vertical line with a small horizontal branch to the right',\n    'Ya': 'ㅏ but with an extra horizontal line above',\n    'Eo': 'a horizontal line with a small vertical branch up',\n    'Yeo': 'ㅓ but with an extra horizontal line above',\n    'O': 'a horizontal line with a circle above it',\n    'Yo': 'ㅗ but with an extra horizontal line below',\n    'U': 'a horizontal line with a circle below it',\n    'Yu': 'ㅜ but with an extra horizontal line below',\n    'Eu': 'a single horizontal line',\n    'I': 'a single vertical line'\n  };\n  return descriptions[letter.name] || 'a unique shape to remember';\n};\n\n// Practice tip helper\nconst getPracticeTip = letter => {\n  const tips = {\n    'Kiyeok': 'Start at the top and go down, then left - like drawing a backwards L',\n    'Nieun': 'Just one horizontal line - simple and quick',\n    'Digeut': 'Two lines: vertical then horizontal from the top',\n    'Rieul': 'Two diagonal lines meeting at the bottom',\n    'Mieum': 'Four lines forming a square - go clockwise',\n    'Bieup': 'Three lines: start like ㄱ but add a top line',\n    'Si-ot': 'Two parallel horizontal lines',\n    'Ieung': 'One circular motion - smooth and continuous',\n    'Jieut': 'Three strokes: curve, line, then small horizontal',\n    'Chieut': 'Three horizontal lines from top to bottom',\n    'Kieuk': 'Like Kiyeok but pronounce with more breath',\n    'Tieut': 'Like Digeut but pronounce with more breath',\n    'Pieup': 'Like Bieup but pronounce with more breath',\n    'Hieut': 'Two diagonal lines crossing each other',\n    'A': 'Vertical line down, then small branch to the right',\n    'Ya': 'Like ㅏ but add an extra horizontal line above',\n    'Eo': 'Horizontal line right, then small vertical up',\n    'Yeo': 'Like ㅓ but add an extra horizontal line above',\n    'O': 'Horizontal line, then circle above it',\n    'Yo': 'Horizontal line, circle above, then line below',\n    'U': 'Horizontal line, then circle below it',\n    'Yu': 'Horizontal line, circle below, then line below that',\n    'Eu': 'Single horizontal line - the simplest vowel',\n    'I': 'Single vertical line - tall and straight'\n  };\n  return tips[letter.name] || 'Practice the stroke order carefully';\n};\nconst LearnSection = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    isLetterUnlocked,\n    getAvailableLetters,\n    getLockedLettersCount\n  } = useProgress();\n  const [selectedLetter, setSelectedLetter] = useState(null);\n  const [filter, setFilter] = useState('available'); // 'all', 'available', 'locked', 'consonants', 'vowels'\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Preload voices when component mounts\n  useEffect(() => {\n    preloadVoices();\n  }, []);\n\n  // Function to pronounce Korean words using Web Speech API\n  const speakKorean = text => {\n    if ('speechSynthesis' in window) {\n      // Cancel any ongoing speech\n      window.speechSynthesis.cancel();\n      const utterance = new SpeechSynthesisUtterance(text);\n\n      // Try to find a Korean voice\n      const voices = window.speechSynthesis.getVoices();\n      const koreanVoice = voices.find(voice => voice.lang.startsWith('ko') ||\n      // Korean\n      voice.name.toLowerCase().includes('korean'));\n      if (koreanVoice) {\n        utterance.voice = koreanVoice;\n        utterance.lang = koreanVoice.lang;\n      } else {\n        // Fallback to English with Korean text\n        utterance.lang = 'ko-KR';\n        utterance.rate = 0.8; // Slightly slower for clarity\n      }\n\n      // Speak the text\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.warn('Speech synthesis not supported in this browser');\n    }\n  };\n  const getFilteredLetters = () => {\n    switch (filter) {\n      case 'available':\n        return getAvailableLetters();\n      case 'locked':\n        return koreanAlphabet.filter(letter => !isLetterUnlocked(letter.id));\n      case 'consonants':\n        return getAvailableLetters().filter(letter => letter.category === 'consonant');\n      case 'vowels':\n        return getAvailableLetters().filter(letter => letter.category === 'vowel');\n      default:\n        return getAvailableLetters();\n    }\n  };\n  const filteredLetters = getFilteredLetters();\n  const LetterCard = ({\n    letter\n  }) => {\n    _s();\n    const {\n      isLetterUnlocked,\n      isLetterCompleted,\n      getBestScore\n    } = useProgress();\n    const unlocked = isLetterUnlocked(letter.id);\n    const completed = isLetterCompleted(letter.id);\n    const bestScore = getBestScore(letter.id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `letter-card ${letter.category} ${(selectedLetter === null || selectedLetter === void 0 ? void 0 : selectedLetter.id) === letter.id ? 'selected' : ''} ${unlocked ? 'unlocked' : 'locked'}`,\n      onClick: () => unlocked && setSelectedLetter(letter),\n      role: \"button\",\n      tabIndex: unlocked ? 0 : -1,\n      \"aria-label\": `${letter.name} Korean letter. ${unlocked ? 'Click to view details' : 'Locked - complete previous levels to unlock'}`,\n      \"aria-pressed\": (selectedLetter === null || selectedLetter === void 0 ? void 0 : selectedLetter.id) === letter.id,\n      onKeyDown: e => {\n        if ((e.key === 'Enter' || e.key === ' ') && unlocked) {\n          e.preventDefault();\n          setSelectedLetter(letter);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `korean-letter ${unlocked ? '' : 'locked'}`,\n            children: letter.koreanLetter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"letter-name\",\n            children: letter.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), !unlocked && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"lock-icon\",\n            children: \"\\uD83D\\uDD12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `pictogram ${unlocked ? '' : 'locked'}`,\n          children: getPictogram(letter.pictogram)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), unlocked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-sound\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sound-text\",\n            children: [\"/\", letter.romanization, \"/\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-comparison\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"comparison-text\",\n            children: letter.englishComparison\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-progress\",\n          children: completed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completion-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"completion-badge\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"best-score\",\n              children: [bestScore, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `difficulty-badge difficulty-${letter.difficulty}`,\n            children: [\"Level \", letter.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"locked-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Complete Level \", letter.difficulty - 1, \" letters to unlock\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  };\n  _s(LetterCard, \"ZmnkOgCHOFMj7I2xM2jOFNZsNSY=\", false, function () {\n    return [useProgress];\n  });\n  const LetterDetail = ({\n    letter\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter-visualization\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"detail-korean\",\n          children: letter.koreanLetter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pictogram-large\",\n          children: getPictogram(letter.pictogram)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: letter.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pronunciation\",\n          children: [\"Romanization: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: letter.romanization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-category\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `category-badge ${letter.category}`,\n            children: letter.category.charAt(0).toUpperCase() + letter.category.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `difficulty-badge difficulty-${letter.difficulty}`,\n            children: [\"Level \", letter.difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comparison-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDD0D English Comparison\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: letter.englishComparison\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visual-aid-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDC41\\uFE0F Visual Learning Aid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: letter.visualAid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visual-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visual-prompt\",\n            children: \"Think of it as:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visual-description\",\n            children: getVisualDescription(letter)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), letter.strokeOrder && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stroke-order-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u270F\\uFE0F Stroke Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stroke-count\",\n          children: [\"Number of strokes: \", letter.strokeOrder.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stroke-order\",\n          children: letter.strokeOrder.map((stroke, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stroke-number\",\n            children: stroke\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"examples-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCDD Example Words (English)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"examples-subtitle\",\n          children: \"Words that start with similar sounds:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-words\",\n          children: letter.exampleWords.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"example-word\",\n            children: word\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), letter.commonWords.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"korean-words-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83C\\uDDF0\\uD83C\\uDDF7 Korean Examples\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"korean-subtitle\",\n          children: \"Common Korean words starting with this letter (click to hear pronunciation):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"korean-words\",\n          children: letter.commonWords.slice(0, 6).map((wordWithTranslation, index) => {\n            // Split word and translation (format: \"word (translation)\")\n            const match = wordWithTranslation.match(/^(.+?)\\s*\\((.+)\\)$/);\n            if (match) {\n              const koreanWord = match[1].trim();\n              const englishTranslation = match[2].trim();\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"korean-word-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"korean-word-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"korean-word-text\",\n                    children: koreanWord\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"pronunciation-btn\",\n                    onClick: () => speakKorean(koreanWord),\n                    \"aria-label\": `Pronounce ${koreanWord}`,\n                    title: `Hear pronunciation of ${koreanWord}`,\n                    children: \"\\uD83D\\uDD0A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"korean-word-translation\",\n                  children: englishTranslation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"korean-word-item\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"korean-word\",\n                children: wordWithTranslation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"practice-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83C\\uDFAF Practice Tip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: getPracticeTip(letter)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Learn the Korean Alphabet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on any letter to see detailed information and pronunciation guides.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-btn ${filter === 'available' ? 'active' : ''}`,\n        onClick: () => setFilter('available'),\n        children: [\"Available (\", getAvailableLetters().length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-btn ${filter === 'locked' ? 'active' : ''}`,\n        onClick: () => setFilter('locked'),\n        children: [\"Locked (\", getLockedLettersCount(), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-btn ${filter === 'consonants' ? 'active' : ''}`,\n        onClick: () => setFilter('consonants'),\n        children: [\"Consonants (\", getAvailableLetters().filter(l => l.category === 'consonant').length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `filter-btn ${filter === 'vowels' ? 'active' : ''}`,\n        onClick: () => setFilter('vowels'),\n        children: [\"Vowels (\", getAvailableLetters().filter(l => l.category === 'vowel').length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letters-grid\",\n      children: filteredLetters.map(letter => /*#__PURE__*/_jsxDEV(LetterCard, {\n        letter: letter\n      }, letter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), selectedLetter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letter-detail-panel\",\n      children: /*#__PURE__*/_jsxDEV(LetterDetail, {\n        letter: selectedLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 5\n  }, this);\n};\n_s2(LearnSection, \"lRmTUg9IbpPSZVXqyR2xfA9Cthk=\", false, function () {\n  return [useProgress];\n});\n_c = LearnSection;\nexport default LearnSection;\nvar _c;\n$RefreshReg$(_c, \"LearnSection\");","map":{"version":3,"names":["React","useState","useEffect","koreanAlphabet","useProgress","playLetterSound","playPronunciationGuide","speakKorean","preloadVoices","jsxDEV","_jsxDEV","Fragment","_Fragment","pictogramMap","getPictogram","iconName","getVisualDescription","letter","descriptions","name","getPracticeTip","tips","LearnSection","_s2","_s","$RefreshSig$","isLetterUnlocked","getAvailableLetters","getLockedLettersCount","selectedLetter","setSelectedLetter","filter","setFilter","isPlaying","setIsPlaying","text","window","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","voices","getVoices","koreanVoice","find","voice","lang","startsWith","toLowerCase","includes","rate","speak","console","warn","getFilteredLetters","id","category","filteredLetters","LetterCard","isLetterCompleted","getBestScore","unlocked","completed","bestScore","className","onClick","role","tabIndex","onKeyDown","e","key","preventDefault","children","koreanLetter","fileName","_jsxFileName","lineNumber","columnNumber","pictogram","romanization","englishComparison","difficulty","LetterDetail","charAt","toUpperCase","slice","visualAid","strokeOrder","length","map","stroke","index","exampleWords","word","commonWords","wordWithTranslation","match","koreanWord","trim","englishTranslation","title","l","_c","$RefreshReg$"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/LearnSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { koreanAlphabet } from '../koreanAlphabetData';\nimport { useProgress } from '../context/ProgressContext';\nimport { playLetterSound, playPronunciationGuide, speakKorean, preloadVoices } from '../utils/audioUtils';\n\n// Pictogram mapping for visual learning\nconst pictogramMap = {\n  'square-angle': '⊏',\n  'line-horizontal': '─',\n  'line-vertical': '│',\n  'line-diagonal': '╲',\n  'square': '□',\n  'circle': '○',\n  'circle-half': '◐',\n  'triangle': '△',\n  'angle-right': '∟',\n  'zap': '⚡',\n  'h-square': '⊏',\n  'bars': '≡',\n  'table': '⊤',\n  'r': '◟',\n  's': 'Ͻ',\n  't': '┬',\n  'y': '◠',\n  'trident': 'Ψ',\n  'omega': 'Ω',\n  'angle': '∠',\n  'plus': '+',\n  'star': '⭐'\n};\n\nconst getPictogram = (iconName) => {\n  return pictogramMap[iconName] || '◇';\n};\n\n// Visual description helper\nconst getVisualDescription = (letter) => {\n  const descriptions = {\n    'Kiyeok': 'a backwards \"L\" with a small horizontal line',\n    'Nieun': 'a simple horizontal line',\n    'Digeut': 'a square bracket facing right',\n    'Rieul': 'two diagonal lines meeting',\n    'Mieum': 'a perfect square',\n    'Bieup': 'a square with a lid on top',\n    'Si-ot': 'two horizontal lines, one above the other',\n    'Ieung': 'a perfect circle',\n    'Jieut': 'a backwards \"C\" with a horizontal line',\n    'Chieut': 'three horizontal lines stacked',\n    'Kieuk': 'ㄱ but with extra breath (aspirated)',\n    'Tieut': 'ㄷ but with extra breath (aspirated)',\n    'Pieup': 'ㅂ but with extra breath (aspirated)',\n    'Hieut': 'two diagonal lines crossing',\n    'A': 'a vertical line with a small horizontal branch to the right',\n    'Ya': 'ㅏ but with an extra horizontal line above',\n    'Eo': 'a horizontal line with a small vertical branch up',\n    'Yeo': 'ㅓ but with an extra horizontal line above',\n    'O': 'a horizontal line with a circle above it',\n    'Yo': 'ㅗ but with an extra horizontal line below',\n    'U': 'a horizontal line with a circle below it',\n    'Yu': 'ㅜ but with an extra horizontal line below',\n    'Eu': 'a single horizontal line',\n    'I': 'a single vertical line'\n  };\n  return descriptions[letter.name] || 'a unique shape to remember';\n};\n\n// Practice tip helper\nconst getPracticeTip = (letter) => {\n  const tips = {\n    'Kiyeok': 'Start at the top and go down, then left - like drawing a backwards L',\n    'Nieun': 'Just one horizontal line - simple and quick',\n    'Digeut': 'Two lines: vertical then horizontal from the top',\n    'Rieul': 'Two diagonal lines meeting at the bottom',\n    'Mieum': 'Four lines forming a square - go clockwise',\n    'Bieup': 'Three lines: start like ㄱ but add a top line',\n    'Si-ot': 'Two parallel horizontal lines',\n    'Ieung': 'One circular motion - smooth and continuous',\n    'Jieut': 'Three strokes: curve, line, then small horizontal',\n    'Chieut': 'Three horizontal lines from top to bottom',\n    'Kieuk': 'Like Kiyeok but pronounce with more breath',\n    'Tieut': 'Like Digeut but pronounce with more breath',\n    'Pieup': 'Like Bieup but pronounce with more breath',\n    'Hieut': 'Two diagonal lines crossing each other',\n    'A': 'Vertical line down, then small branch to the right',\n    'Ya': 'Like ㅏ but add an extra horizontal line above',\n    'Eo': 'Horizontal line right, then small vertical up',\n    'Yeo': 'Like ㅓ but add an extra horizontal line above',\n    'O': 'Horizontal line, then circle above it',\n    'Yo': 'Horizontal line, circle above, then line below',\n    'U': 'Horizontal line, then circle below it',\n    'Yu': 'Horizontal line, circle below, then line below that',\n    'Eu': 'Single horizontal line - the simplest vowel',\n    'I': 'Single vertical line - tall and straight'\n  };\n  return tips[letter.name] || 'Practice the stroke order carefully';\n};\n\nconst LearnSection = () => {\n  const { isLetterUnlocked, getAvailableLetters, getLockedLettersCount } = useProgress();\n  const [selectedLetter, setSelectedLetter] = useState(null);\n  const [filter, setFilter] = useState('available'); // 'all', 'available', 'locked', 'consonants', 'vowels'\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Preload voices when component mounts\n  useEffect(() => {\n    preloadVoices();\n  }, []);\n\n  // Function to pronounce Korean words using Web Speech API\n  const speakKorean = (text) => {\n    if ('speechSynthesis' in window) {\n      // Cancel any ongoing speech\n      window.speechSynthesis.cancel();\n\n      const utterance = new SpeechSynthesisUtterance(text);\n\n      // Try to find a Korean voice\n      const voices = window.speechSynthesis.getVoices();\n      const koreanVoice = voices.find(voice =>\n        voice.lang.startsWith('ko') || // Korean\n        voice.name.toLowerCase().includes('korean')\n      );\n\n      if (koreanVoice) {\n        utterance.voice = koreanVoice;\n        utterance.lang = koreanVoice.lang;\n      } else {\n        // Fallback to English with Korean text\n        utterance.lang = 'ko-KR';\n        utterance.rate = 0.8; // Slightly slower for clarity\n      }\n\n      // Speak the text\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.warn('Speech synthesis not supported in this browser');\n    }\n  };\n\n  const getFilteredLetters = () => {\n    switch (filter) {\n      case 'available':\n        return getAvailableLetters();\n      case 'locked':\n        return koreanAlphabet.filter(letter => !isLetterUnlocked(letter.id));\n      case 'consonants':\n        return getAvailableLetters().filter(letter => letter.category === 'consonant');\n      case 'vowels':\n        return getAvailableLetters().filter(letter => letter.category === 'vowel');\n      default:\n        return getAvailableLetters();\n    }\n  };\n\n  const filteredLetters = getFilteredLetters();\n\n  const LetterCard = ({ letter }) => {\n    const { isLetterUnlocked, isLetterCompleted, getBestScore } = useProgress();\n    const unlocked = isLetterUnlocked(letter.id);\n    const completed = isLetterCompleted(letter.id);\n    const bestScore = getBestScore(letter.id);\n\n    return (\n      <div\n        className={`letter-card ${letter.category} ${selectedLetter?.id === letter.id ? 'selected' : ''} ${unlocked ? 'unlocked' : 'locked'}`}\n        onClick={() => unlocked && setSelectedLetter(letter)}\n        role=\"button\"\n        tabIndex={unlocked ? 0 : -1}\n        aria-label={`${letter.name} Korean letter. ${unlocked ? 'Click to view details' : 'Locked - complete previous levels to unlock'}`}\n        aria-pressed={selectedLetter?.id === letter.id}\n        onKeyDown={(e) => {\n          if ((e.key === 'Enter' || e.key === ' ') && unlocked) {\n            e.preventDefault();\n            setSelectedLetter(letter);\n          }\n        }}\n      >\n        <div className=\"letter-display\">\n          <div className=\"letter-main\">\n            <span className={`korean-letter ${unlocked ? '' : 'locked'}`}>{letter.koreanLetter}</span>\n            <span className=\"letter-name\">{letter.name}</span>\n            {!unlocked && <span className=\"lock-icon\">🔒</span>}\n          </div>\n          <div className={`pictogram ${unlocked ? '' : 'locked'}`}>{getPictogram(letter.pictogram)}</div>\n        </div>\n\n        {unlocked ? (\n          <>\n            <div className=\"letter-sound\">\n              <span className=\"sound-text\">/{letter.romanization}/</span>\n            </div>\n            <div className=\"letter-comparison\">\n              <span className=\"comparison-text\">{letter.englishComparison}</span>\n            </div>\n            <div className=\"letter-progress\">\n              {completed && (\n                <div className=\"completion-indicator\">\n                  <span className=\"completion-badge\">✓</span>\n                  <span className=\"best-score\">{bestScore}%</span>\n                </div>\n              )}\n            </div>\n            <div className=\"difficulty-indicator\">\n              <span className={`difficulty-badge difficulty-${letter.difficulty}`}>\n                Level {letter.difficulty}\n              </span>\n            </div>\n          </>\n        ) : (\n          <div className=\"locked-message\">\n            <p>Complete Level {letter.difficulty - 1} letters to unlock</p>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const LetterDetail = ({ letter }) => (\n    <div className=\"letter-detail\">\n      <div className=\"detail-header\">\n        <div className=\"letter-visualization\">\n          <span className=\"detail-korean\">{letter.koreanLetter}</span>\n          <div className=\"pictogram-large\">{getPictogram(letter.pictogram)}</div>\n        </div>\n        <div className=\"detail-info\">\n          <h3>{letter.name}</h3>\n          <p className=\"pronunciation\">Romanization: <strong>{letter.romanization}</strong></p>\n          <div className=\"letter-category\">\n            <span className={`category-badge ${letter.category}`}>\n              {letter.category.charAt(0).toUpperCase() + letter.category.slice(1)}\n            </span>\n            <span className={`difficulty-badge difficulty-${letter.difficulty}`}>\n              Level {letter.difficulty}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"detail-content\">\n        <div className=\"comparison-section\">\n          <h4>🔍 English Comparison</h4>\n          <p>{letter.englishComparison}</p>\n        </div>\n\n        <div className=\"visual-aid-section\">\n          <h4>👁️ Visual Learning Aid</h4>\n          <p>{letter.visualAid}</p>\n          <div className=\"visual-example\">\n            <span className=\"visual-prompt\">Think of it as:</span>\n            <span className=\"visual-description\">{getVisualDescription(letter)}</span>\n          </div>\n        </div>\n\n        {letter.strokeOrder && (\n          <div className=\"stroke-order-section\">\n            <h4>✏️ Stroke Order</h4>\n            <p className=\"stroke-count\">Number of strokes: {letter.strokeOrder.length}</p>\n            <div className=\"stroke-order\">\n              {letter.strokeOrder.map((stroke, index) => (\n                <span key={index} className=\"stroke-number\">{stroke}</span>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div className=\"examples-section\">\n          <h4>📝 Example Words (English)</h4>\n          <p className=\"examples-subtitle\">Words that start with similar sounds:</p>\n          <div className=\"example-words\">\n            {letter.exampleWords.map((word, index) => (\n              <span key={index} className=\"example-word\">{word}</span>\n            ))}\n          </div>\n        </div>\n\n        {letter.commonWords.length > 0 && (\n          <div className=\"korean-words-section\">\n            <h4>🇰🇷 Korean Examples</h4>\n            <p className=\"korean-subtitle\">Common Korean words starting with this letter (click to hear pronunciation):</p>\n            <div className=\"korean-words\">\n              {letter.commonWords.slice(0, 6).map((wordWithTranslation, index) => {\n                // Split word and translation (format: \"word (translation)\")\n                const match = wordWithTranslation.match(/^(.+?)\\s*\\((.+)\\)$/);\n                if (match) {\n                  const koreanWord = match[1].trim();\n                  const englishTranslation = match[2].trim();\n                  return (\n                    <div key={index} className=\"korean-word-item\">\n                      <div className=\"korean-word-container\">\n                        <span className=\"korean-word-text\">{koreanWord}</span>\n                        <button\n                          className=\"pronunciation-btn\"\n                          onClick={() => speakKorean(koreanWord)}\n                          aria-label={`Pronounce ${koreanWord}`}\n                          title={`Hear pronunciation of ${koreanWord}`}\n                        >\n                          🔊\n                        </button>\n                      </div>\n                      <span className=\"korean-word-translation\">{englishTranslation}</span>\n                    </div>\n                  );\n                }\n                return (\n                  <div key={index} className=\"korean-word-item\">\n                    <span className=\"korean-word\">{wordWithTranslation}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        <div className=\"practice-section\">\n          <h4>🎯 Practice Tip</h4>\n          <p>{getPracticeTip(letter)}</p>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"learn-section\">\n      <div className=\"section-header\">\n        <h2>Learn the Korean Alphabet</h2>\n        <p>Click on any letter to see detailed information and pronunciation guides.</p>\n      </div>\n\n      <div className=\"filter-buttons\">\n        <button\n          className={`filter-btn ${filter === 'available' ? 'active' : ''}`}\n          onClick={() => setFilter('available')}\n        >\n          Available ({getAvailableLetters().length})\n        </button>\n        <button\n          className={`filter-btn ${filter === 'locked' ? 'active' : ''}`}\n          onClick={() => setFilter('locked')}\n        >\n          Locked ({getLockedLettersCount()})\n        </button>\n        <button\n          className={`filter-btn ${filter === 'consonants' ? 'active' : ''}`}\n          onClick={() => setFilter('consonants')}\n        >\n          Consonants ({getAvailableLetters().filter(l => l.category === 'consonant').length})\n        </button>\n        <button\n          className={`filter-btn ${filter === 'vowels' ? 'active' : ''}`}\n          onClick={() => setFilter('vowels')}\n        >\n          Vowels ({getAvailableLetters().filter(l => l.category === 'vowel').length})\n        </button>\n      </div>\n\n      <div className=\"letters-grid\">\n        {filteredLetters.map(letter => (\n          <LetterCard key={letter.id} letter={letter} />\n        ))}\n      </div>\n\n      {selectedLetter && (\n        <div className=\"letter-detail-panel\">\n          <LetterDetail letter={selectedLetter} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LearnSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}