{"ast":null,"code":"var _jsxFileName = \"/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { exampleWords } from '../koreanAlphabetData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordBuilderSection = () => {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [userSyllables, setUserSyllables] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const selectWord = useCallback(word => {\n    setSelectedWord(word);\n    setUserSyllables([]);\n    setShowResult(false);\n    setIsCorrect(false);\n  }, []);\n  const handleSyllableDrop = useCallback(syllable => {\n    // Don't add if we already have the maximum number of syllables for this word\n    if (userSyllables.length >= selectedWord.syllables.length) {\n      return;\n    }\n\n    // Don't add duplicate syllables\n    if (userSyllables.some(userSyl => userSyl.syllable === syllable.syllable)) {\n      return;\n    }\n    setUserSyllables(prev => [...prev, syllable]);\n  }, [selectedWord, userSyllables]);\n  const removeSyllable = useCallback(index => {\n    setUserSyllables(prev => prev.filter((_, i) => i !== index));\n  }, []);\n  const checkAnswer = useCallback(() => {\n    if (!selectedWord || userSyllables.length !== selectedWord.syllables.length) {\n      setIsCorrect(false);\n      setShowResult(true);\n      return;\n    }\n\n    // Check if syllables are in correct order\n    const correct = userSyllables.every((userSyl, index) => userSyl.syllable === selectedWord.syllables[index].syllable);\n    setIsCorrect(correct);\n    setShowResult(true);\n  }, [selectedWord, userSyllables]);\n  const resetExercise = useCallback(() => {\n    setUserSyllables([]);\n    setShowResult(false);\n    setIsCorrect(false);\n  }, []);\n  const getSyllableButtonClass = syllable => {\n    const isUsed = userSyllables.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n  if (!selectedWord) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Word Builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a word to practice building it from syllable blocks.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a word to build:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-cards\",\n          children: exampleWords.map(word => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"word-card\",\n            onClick: () => selectWord(word),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-korean\",\n              children: word.korean\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-romanization\",\n              children: word.romanization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-english\",\n              children: [\"\\\"\", word.english, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-count\",\n              children: [word.syllables.length, \" syllables\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-builder-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"\\u2190 Back to Word Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Build: \", selectedWord.english]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"target-word\",\n            children: selectedWord.korean\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"romanization\",\n            children: [\"(\", selectedWord.romanization, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"target-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Build the word:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"syllable-slots\",\n          children: selectedWord.syllables.map((targetSyllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"syllable-slot\",\n            children: userSyllables[index] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-in-slot\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"syllable-text\",\n                children: userSyllables[index].syllable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"remove-syllable\",\n                onClick: () => removeSyllable(index),\n                \"aria-label\": \"Remove syllable\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-slot\",\n              children: \"Drop syllable here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"syllable-pool\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Available syllables:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"syllables-container\",\n          children: selectedWord.syllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: getSyllableButtonClass(syllable),\n            draggable: !userSyllables.some(userSyl => userSyl.syllable === syllable.syllable),\n            onDragStart: e => {\n              e.dataTransfer.setData('text/plain', syllable.syllable);\n            },\n            onClick: () => handleSyllableDrop(syllable),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-display\",\n              children: syllable.syllable\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"jamo-breakdown\",\n                children: [syllable.consonant && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo\",\n                  children: syllable.consonant\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 44\n                }, this), syllable.vowel && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo\",\n                  children: syllable.vowel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 40\n                }, this), syllable.final && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo final\",\n                  children: syllable.final\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"structure\",\n                children: syllable.structure\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"builder-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"check-btn\",\n          onClick: checkAnswer,\n          children: \"Check Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: resetExercise,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), showResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `result-section ${isCorrect ? 'correct' : 'incorrect'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: isCorrect ? 'Correct!' : 'Not quite right'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: isCorrect ? `Great job! You correctly built \"${selectedWord.korean}\" (${selectedWord.english}).` : `The correct word is \"${selectedWord.korean}\". Try rearranging the syllables.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"syllable-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Syllable Breakdown:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"explanation-syllables\",\n            children: selectedWord.syllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"explanation-syllable\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"syllable-main\",\n                children: syllable.syllable\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"syllable-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"jamo-breakdown\",\n                  children: [syllable.consonant && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"jamo\",\n                    children: syllable.consonant\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 48\n                  }, this), syllable.vowel && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"jamo\",\n                    children: syllable.vowel\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 44\n                  }, this), syllable.final && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"jamo final\",\n                    children: syllable.final\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 44\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"structure\",\n                  children: syllable.structure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-word-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"Try Another Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(WordBuilderSection, \"A9+9I2UK47rV08rKfolIFl68TX4=\");\n_c = WordBuilderSection;\nexport default WordBuilderSection;\nvar _c;\n$RefreshReg$(_c, \"WordBuilderSection\");","map":{"version":3,"names":["React","useState","useCallback","exampleWords","jsxDEV","_jsxDEV","WordBuilderSection","_s","selectedWord","setSelectedWord","userSyllables","setUserSyllables","showResult","setShowResult","isCorrect","setIsCorrect","selectWord","word","handleSyllableDrop","syllable","length","syllables","some","userSyl","prev","removeSyllable","index","filter","_","i","checkAnswer","correct","every","resetExercise","getSyllableButtonClass","isUsed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","korean","romanization","english","id","targetSyllable","draggable","onDragStart","e","dataTransfer","setData","consonant","vowel","final","structure","_c","$RefreshReg$"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { exampleWords } from '../koreanAlphabetData';\n\nconst WordBuilderSection = () => {\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [userSyllables, setUserSyllables] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n\n  const selectWord = useCallback((word) => {\n    setSelectedWord(word);\n    setUserSyllables([]);\n    setShowResult(false);\n    setIsCorrect(false);\n  }, []);\n\n  const handleSyllableDrop = useCallback((syllable) => {\n    // Don't add if we already have the maximum number of syllables for this word\n    if (userSyllables.length >= selectedWord.syllables.length) {\n      return;\n    }\n\n    // Don't add duplicate syllables\n    if (userSyllables.some(userSyl => userSyl.syllable === syllable.syllable)) {\n      return;\n    }\n\n    setUserSyllables(prev => [...prev, syllable]);\n  }, [selectedWord, userSyllables]);\n\n  const removeSyllable = useCallback((index) => {\n    setUserSyllables(prev => prev.filter((_, i) => i !== index));\n  }, []);\n\n  const checkAnswer = useCallback(() => {\n    if (!selectedWord || userSyllables.length !== selectedWord.syllables.length) {\n      setIsCorrect(false);\n      setShowResult(true);\n      return;\n    }\n\n    // Check if syllables are in correct order\n    const correct = userSyllables.every((userSyl, index) =>\n      userSyl.syllable === selectedWord.syllables[index].syllable\n    );\n\n    setIsCorrect(correct);\n    setShowResult(true);\n  }, [selectedWord, userSyllables]);\n\n  const resetExercise = useCallback(() => {\n    setUserSyllables([]);\n    setShowResult(false);\n    setIsCorrect(false);\n  }, []);\n\n  const getSyllableButtonClass = (syllable) => {\n    const isUsed = userSyllables.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n\n  if (!selectedWord) {\n    return (\n      <div className=\"word-builder-section\">\n        <div className=\"section-header\">\n          <h2>Word Builder</h2>\n          <p>Choose a word to practice building it from syllable blocks.</p>\n        </div>\n\n        <div className=\"word-selection\">\n          <h3>Select a word to build:</h3>\n          <div className=\"word-cards\">\n            {exampleWords.map(word => (\n              <button\n                key={word.id}\n                className=\"word-card\"\n                onClick={() => selectWord(word)}\n              >\n                <div className=\"word-korean\">{word.korean}</div>\n                <div className=\"word-romanization\">{word.romanization}</div>\n                <div className=\"word-english\">\"{word.english}\"</div>\n                <div className=\"syllable-count\">{word.syllables.length} syllables</div>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"word-builder-section\">\n      <div className=\"section-header\">\n        <div className=\"exercise-header\">\n          <button className=\"back-btn\" onClick={() => setSelectedWord(null)}>\n            ← Back to Word Selection\n          </button>\n          <h2>Build: {selectedWord.english}</h2>\n          <div className=\"word-info\">\n            <span className=\"target-word\">{selectedWord.korean}</span>\n            <span className=\"romanization\">({selectedWord.romanization})</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"word-builder-container\">\n        {/* Target area where user builds the word */}\n        <div className=\"target-area\">\n          <h3>Build the word:</h3>\n          <div className=\"syllable-slots\">\n            {selectedWord.syllables.map((targetSyllable, index) => (\n              <div key={index} className=\"syllable-slot\">\n                {userSyllables[index] ? (\n                  <div className=\"syllable-in-slot\">\n                    <span className=\"syllable-text\">{userSyllables[index].syllable}</span>\n                    <button\n                      className=\"remove-syllable\"\n                      onClick={() => removeSyllable(index)}\n                      aria-label=\"Remove syllable\"\n                    >\n                      ×\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"empty-slot\">\n                    Drop syllable here\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Available syllables */}\n        <div className=\"syllable-pool\">\n          <h3>Available syllables:</h3>\n          <div className=\"syllables-container\">\n            {selectedWord.syllables.map((syllable, index) => (\n              <div\n                key={index}\n                className={getSyllableButtonClass(syllable)}\n                draggable={!userSyllables.some(userSyl => userSyl.syllable === syllable.syllable)}\n                onDragStart={(e) => {\n                  e.dataTransfer.setData('text/plain', syllable.syllable);\n                }}\n                onClick={() => handleSyllableDrop(syllable)}\n              >\n                <div className=\"syllable-display\">{syllable.syllable}</div>\n                <div className=\"syllable-info\">\n                  <div className=\"jamo-breakdown\">\n                    {syllable.consonant && <span className=\"jamo\">{syllable.consonant}</span>}\n                    {syllable.vowel && <span className=\"jamo\">{syllable.vowel}</span>}\n                    {syllable.final && <span className=\"jamo final\">{syllable.final}</span>}\n                  </div>\n                  <div className=\"structure\">{syllable.structure}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Controls */}\n        <div className=\"builder-controls\">\n          <button className=\"check-btn\" onClick={checkAnswer}>\n            Check Answer\n          </button>\n          <button className=\"reset-btn\" onClick={resetExercise}>\n            Reset\n          </button>\n        </div>\n\n        {/* Result */}\n        {showResult && (\n          <div className={`result-section ${isCorrect ? 'correct' : 'incorrect'}`}>\n            <div className=\"feedback\">\n              <h3>{isCorrect ? 'Correct!' : 'Not quite right'}</h3>\n              <p>\n                {isCorrect\n                  ? `Great job! You correctly built \"${selectedWord.korean}\" (${selectedWord.english}).`\n                  : `The correct word is \"${selectedWord.korean}\". Try rearranging the syllables.`\n                }\n              </p>\n            </div>\n\n            <div className=\"syllable-explanation\">\n              <h4>Syllable Breakdown:</h4>\n              <div className=\"explanation-syllables\">\n                {selectedWord.syllables.map((syllable, index) => (\n                  <div key={index} className=\"explanation-syllable\">\n                    <div className=\"syllable-main\">{syllable.syllable}</div>\n                    <div className=\"syllable-details\">\n                      <div className=\"jamo-breakdown\">\n                        {syllable.consonant && <span className=\"jamo\">{syllable.consonant}</span>}\n                        {syllable.vowel && <span className=\"jamo\">{syllable.vowel}</span>}\n                        {syllable.final && <span className=\"jamo final\">{syllable.final}</span>}\n                      </div>\n                      <div className=\"structure\">{syllable.structure}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <button className=\"next-word-btn\" onClick={() => setSelectedWord(null)}>\n              Try Another Word\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WordBuilderSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}