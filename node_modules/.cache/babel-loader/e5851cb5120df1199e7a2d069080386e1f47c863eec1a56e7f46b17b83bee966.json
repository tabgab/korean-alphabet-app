{"ast":null,"code":"var _jsxFileName = \"/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { exampleWords, koreanConsonants, koreanVowels } from '../koreanAlphabetData';\nimport { playSyllableSound, playWordSound, preloadVoices } from '../utils/audioUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordBuilderSection = () => {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currentStage, setCurrentStage] = useState(1); // 1: jamo, 2: syllables, 3: word\n  const [selectedJamo, setSelectedJamo] = useState({\n    consonants: [],\n    // Array of selected consonants (can include duplicates for different positions)\n    vowels: [] // Array of selected vowels\n  });\n  const [builtSyllables, setBuiltSyllables] = useState([]);\n  const [userWord, setUserWord] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [currentHint, setCurrentHint] = useState('');\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Preload voices when component mounts\n  useEffect(() => {\n    preloadVoices();\n  }, []);\n\n  // Audio playback handlers\n  const handlePlaySyllableSound = async syllable => {\n    if (isPlaying) return;\n    setIsPlaying(true);\n    try {\n      await playSyllableSound(syllable);\n    } catch (error) {\n      console.error('Error playing syllable sound:', error);\n    } finally {\n      setIsPlaying(false);\n    }\n  };\n  const handlePlayWordSound = async word => {\n    if (isPlaying) return;\n    setIsPlaying(true);\n    try {\n      await playWordSound(word);\n    } catch (error) {\n      console.error('Error playing word sound:', error);\n    } finally {\n      setIsPlaying(false);\n    }\n  };\n  const selectWord = useCallback(word => {\n    setSelectedWord(word);\n    setCurrentStage(1);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n  const getRequiredJamo = useCallback(() => {\n    if (!selectedWord) return {\n      consonants: [],\n      vowels: []\n    };\n    const required = {\n      consonants: [],\n      vowels: []\n    };\n    selectedWord.syllables.forEach(syllable => {\n      // Add initial consonant\n      if (syllable.consonant) {\n        const consonant = koreanConsonants.find(c => c.koreanLetter === syllable.consonant);\n        if (consonant && !required.consonants.find(c => c.id === consonant.id)) {\n          required.consonants.push(consonant);\n        }\n      }\n\n      // Add vowel\n      if (syllable.vowel) {\n        const vowel = koreanVowels.find(v => v.koreanLetter === syllable.vowel);\n        if (vowel && !required.vowels.find(v => v.id === vowel.id)) {\n          required.vowels.push(vowel);\n        }\n      }\n\n      // Add final consonant (for CVC syllables)\n      if (syllable.final) {\n        const finalConsonant = koreanConsonants.find(c => c.koreanLetter === syllable.final);\n        if (finalConsonant && !required.consonants.find(c => c.id === finalConsonant.id)) {\n          required.consonants.push(finalConsonant);\n        }\n      }\n    });\n    return required;\n  }, [selectedWord]);\n  const getHints = useCallback(() => {\n    if (!selectedWord) return [];\n    const hints = [];\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const missingConsonants = required.consonants.filter(reqC => {\n        var _selectedJamo$consona;\n        return !((_selectedJamo$consona = selectedJamo.consonants) !== null && _selectedJamo$consona !== void 0 && _selectedJamo$consona.some(selC => selC.id === reqC.id));\n      });\n      const missingVowels = required.vowels.filter(reqV => {\n        var _selectedJamo$vowels;\n        return !((_selectedJamo$vowels = selectedJamo.vowels) !== null && _selectedJamo$vowels !== void 0 && _selectedJamo$vowels.some(selV => selV.id === reqV.id));\n      });\n      if (missingConsonants.length > 0) {\n        hints.push(`Select the consonant: ${missingConsonants[0].koreanLetter} (${missingConsonants[0].name})`);\n      } else if (missingVowels.length > 0) {\n        hints.push(`Select the vowel: ${missingVowels[0].koreanLetter} (${missingVowels[0].name})`);\n      } else {\n        hints.push(\"Great! You've selected all required letters. Click 'Next' to build syllables.\");\n      }\n    }\n    if (currentStage === 2) {\n      const currentSyllableIndex = builtSyllables.length;\n      if (currentSyllableIndex < selectedWord.syllables.length) {\n        const targetSyllable = selectedWord.syllables[currentSyllableIndex];\n        if (!selectedJamo.initial && !selectedJamo.vowel) {\n          if (targetSyllable.structure === 'CVC') {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CVC): Select ${targetSyllable.consonant} (initial) + ${targetSyllable.vowel} + ${targetSyllable.final} (final)`);\n          } else {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CV): Select ${targetSyllable.consonant} + ${targetSyllable.vowel}`);\n          }\n        } else if (selectedJamo.initial && !selectedJamo.vowel) {\n          hints.push(`Now select ${targetSyllable.vowel}${targetSyllable.final ? ' (and optionally ' + targetSyllable.final + ' for final consonant)' : ''}`);\n        } else if (!selectedJamo.initial && selectedJamo.vowel) {\n          hints.push(`Select ${targetSyllable.consonant} as initial consonant`);\n        } else if (selectedJamo.initial && selectedJamo.vowel && !selectedJamo.final) {\n          if (targetSyllable.final) {\n            // Check if we can reuse the same consonant for final position\n            const availableConsonants = requiredJamo.consonants.filter(c => c.koreanLetter === targetSyllable.final || c.koreanLetter === targetSyllable.consonant);\n            if (availableConsonants.length > 0) {\n              hints.push(`Add ${targetSyllable.final} as final consonant (you can reuse ${targetSyllable.consonant} if it's the same letter)`);\n            } else {\n              hints.push(`Add ${targetSyllable.final} as final consonant`);\n            }\n          } else {\n            hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CV structure)`);\n          }\n        } else if (selectedJamo.initial && selectedJamo.vowel && selectedJamo.final) {\n          hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CVC structure)`);\n        }\n      }\n    }\n    if (currentStage === 3) {\n      if (userWord.length < selectedWord.syllables.length) {\n        const nextSyllable = selectedWord.syllables[userWord.length];\n        const availableSyllable = builtSyllables.find(bs => bs.syllable === nextSyllable.syllable);\n        if (availableSyllable) {\n          hints.push(`Drag \"${availableSyllable.syllable}\" to the next empty slot`);\n        } else {\n          hints.push(`Build \"${nextSyllable.syllable}\" first in Stage 2`);\n        }\n      } else {\n        hints.push(`Click \"Check Word\" to verify your word construction`);\n      }\n    }\n    return hints;\n  }, [selectedWord, currentStage, selectedJamo, builtSyllables, userWord, getRequiredJamo]);\n  const requiredJamo = getRequiredJamo();\n  const stageHints = getHints();\n  const showHintForCurrentStage = useCallback(() => {\n    const hints = getHints();\n    if (hints.length > 0) {\n      setCurrentHint(hints[0]);\n      setShowHint(true);\n    }\n  }, [getHints]);\n  const handleJamoSelection = useCallback((jamo, type) => {\n    console.log('Jamo selected:', jamo, type);\n    setSelectedJamo(prev => {\n      if (type === 'consonant') {\n        // For consonants, allow multiple selections of the same jamo for different positions\n        // Check if this exact jamo is already selected\n        const isAlreadySelected = prev.consonants.some(c => c.id === jamo.id);\n        if (isAlreadySelected) {\n          // If already selected, we can still add it again for reuse\n          // This allows the same consonant to be used in multiple positions\n          console.log('Adding another instance of consonant for reuse');\n          return {\n            ...prev,\n            consonants: [...prev.consonants, jamo]\n          };\n        } else {\n          // If not selected, add it\n          console.log('Adding new consonant selection');\n          return {\n            ...prev,\n            consonants: [...prev.consonants, jamo]\n          };\n        }\n      } else if (type === 'vowel') {\n        // For vowels, toggle behavior (usually only need one vowel per syllable)\n        const isAlreadySelected = prev.vowels.some(v => v.id === jamo.id);\n        if (isAlreadySelected) {\n          console.log('Toggling vowel selection');\n          return {\n            ...prev,\n            vowels: prev.vowels.filter(v => v.id !== jamo.id)\n          };\n        } else {\n          console.log('Adding vowel selection');\n          return {\n            ...prev,\n            vowels: [...prev.vowels, jamo]\n          };\n        }\n      }\n      return prev;\n    });\n  }, []);\n  const canBuildSyllable = useCallback(() => {\n    // Need at least 1 consonant and 1 vowel to build a syllable\n    // For CVC syllables, we'll need 2 consonants and 1 vowel\n    const hasConsonant = selectedJamo.consonants.length >= 1;\n    const hasVowel = selectedJamo.vowels.length >= 1;\n    return hasConsonant && hasVowel;\n  }, [selectedJamo]);\n  const buildSyllable = useCallback(() => {\n    if (!canBuildSyllable()) return;\n    console.log('Building syllable with:', selectedJamo);\n    const initialConsonant = selectedJamo.consonants[0];\n    const vowel = selectedJamo.vowels[0];\n    const finalConsonant = selectedJamo.consonants.length > 1 ? selectedJamo.consonants[1] : null;\n\n    // Create syllable text based on structure\n    let syllableText = initialConsonant.koreanLetter + vowel.koreanLetter;\n    if (finalConsonant) {\n      syllableText += finalConsonant.koreanLetter;\n    }\n    console.log('Looking for target syllable with:', {\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : null\n    });\n\n    // Find the matching syllable in the target word to get complete structure\n    const targetSyllable = selectedWord.syllables.find(ts => {\n      const consonantMatch = ts.consonant === initialConsonant.koreanLetter;\n      const vowelMatch = ts.vowel === vowel.koreanLetter;\n      const finalMatch = finalConsonant ? ts.final === finalConsonant.koreanLetter : !ts.final; // No final consonant expected\n\n      console.log('Checking syllable:', ts, {\n        consonantMatch,\n        vowelMatch,\n        finalMatch\n      });\n      return consonantMatch && vowelMatch && finalMatch;\n    });\n    console.log('Found target syllable:', targetSyllable);\n    const newSyllable = {\n      syllable: targetSyllable ? targetSyllable.syllable : syllableText,\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : targetSyllable ? targetSyllable.final : null,\n      structure: targetSyllable ? targetSyllable.structure : finalConsonant ? 'CVC' : 'CV',\n      completed: true\n    };\n    console.log('Created new syllable:', newSyllable);\n    setBuiltSyllables(prev => {\n      const updated = [...prev, newSyllable];\n      console.log('Updated builtSyllables:', updated);\n      return updated;\n    });\n\n    // Clear selections after building\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n  }, [canBuildSyllable, selectedJamo, selectedWord]);\n  const handleSyllableDrop = useCallback(syllable => {\n    console.log('Dropping syllable:', syllable);\n    if (!selectedWord) {\n      console.error('selectedWord is undefined');\n      return;\n    }\n    if (userWord.length >= selectedWord.syllables.length) {\n      console.log('Word is already complete');\n      return;\n    }\n    if (userWord.some(userSyl => userSyl.syllable === syllable.syllable)) {\n      console.log('Syllable already used');\n      return;\n    }\n    setUserWord(prev => {\n      const newWord = [...prev, syllable];\n      console.log('New userWord:', newWord);\n      return newWord;\n    });\n  }, [selectedWord, userWord]);\n  const removeSyllable = useCallback(index => {\n    console.log('Removing syllable at index:', index);\n    setUserWord(prev => {\n      const newWord = prev.filter((_, i) => i !== index);\n      console.log('New userWord after removal:', newWord);\n      return newWord;\n    });\n  }, []);\n  const checkStageCompletion = useCallback(() => {\n    console.log('Checking stage completion:', {\n      currentStage,\n      userWord,\n      selectedWord\n    });\n    if (currentStage === 1) {\n      // For Stage 1, we need to check if all required jamo have been collected\n      // But since we're now using the old array-based structure for Stage 1,\n      // we need to maintain backward compatibility\n      const required = getRequiredJamo();\n      console.log('Stage 1 validation:', {\n        required,\n        selectedJamo\n      });\n\n      // Check if all required consonants are in the collected jamo\n      const hasAllConsonants = required.consonants.every(reqC => {\n        var _selectedJamo$consona2;\n        return (_selectedJamo$consona2 = selectedJamo.consonants) === null || _selectedJamo$consona2 === void 0 ? void 0 : _selectedJamo$consona2.some(selC => selC.id === reqC.id);\n      });\n\n      // Check if all required vowels are in the collected jamo\n      const hasAllVowels = required.vowels.every(reqV => {\n        var _selectedJamo$vowels2;\n        return (_selectedJamo$vowels2 = selectedJamo.vowels) === null || _selectedJamo$vowels2 === void 0 ? void 0 : _selectedJamo$vowels2.some(selV => selV.id === reqV.id);\n      });\n      console.log('Stage 1 completion check:', {\n        hasAllConsonants,\n        hasAllVowels\n      });\n      return hasAllConsonants && hasAllVowels;\n    }\n    if (currentStage === 2) {\n      return builtSyllables.length === selectedWord.syllables.length && builtSyllables.every(bs => bs.completed);\n    }\n    if (currentStage === 3) {\n      console.log('Stage 3 validation:', {\n        userWord,\n        selectedWord\n      });\n      if (!selectedWord || !selectedWord.syllables) {\n        console.error('selectedWord or syllables is undefined');\n        return false;\n      }\n      if (userWord.length !== selectedWord.syllables.length) {\n        console.log('User word length mismatch:', userWord.length, selectedWord.syllables.length);\n        return false;\n      }\n\n      // Check each syllable with proper error handling\n      for (let index = 0; index < userWord.length; index++) {\n        const userSyl = userWord[index];\n        const targetSyllable = selectedWord.syllables[index];\n        console.log(`Checking index ${index}:`, {\n          userSyl,\n          targetSyllable\n        });\n        if (!userSyl) {\n          console.error('userSyl is undefined at index:', index);\n          return false;\n        }\n        if (!targetSyllable) {\n          console.error('targetSyllable is undefined at index:', index);\n          return false;\n        }\n        if (!userSyl.syllable || !targetSyllable.syllable) {\n          console.error('Syllable text is undefined:', {\n            userSyl,\n            targetSyllable\n          });\n          return false;\n        }\n        const isCorrect = userSyl.syllable === targetSyllable.syllable;\n        console.log(`Comparing: \"${userSyl.syllable}\" vs \"${targetSyllable.syllable}\" = ${isCorrect}`);\n        if (!isCorrect) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }, [currentStage, selectedJamo, builtSyllables, userWord, selectedWord, getRequiredJamo]);\n  const advanceToNextStage = useCallback(() => {\n    if (currentStage < 3) {\n      setCurrentStage(prev => prev + 1);\n      setShowHint(false);\n    }\n  }, [currentStage]);\n  const resetExercise = useCallback(() => {\n    setCurrentStage(1);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n  const getJamoButtonClass = (jamo, type) => {\n    let isSelected = false;\n    if (type === 'consonant') {\n      isSelected = selectedJamo.consonants.some(c => c.id === jamo.id);\n    } else if (type === 'vowel') {\n      isSelected = selectedJamo.vowels.some(v => v.id === jamo.id);\n    }\n    return `jamo-btn ${isSelected ? 'selected' : 'available'}`;\n  };\n  const getSyllableButtonClass = syllable => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n  const renderSyllableWithSound = (syllable, index) => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"syllable-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `syllable-btn ${isUsed ? 'used' : 'available'}`,\n        onClick: () => handleSyllableDrop(syllable),\n        disabled: isUsed,\n        children: syllable.syllable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `syllable-sound-btn ${isPlaying ? 'playing' : ''}`,\n        onClick: e => {\n          e.stopPropagation();\n          handlePlaySyllableSound(syllable);\n        },\n        disabled: isPlaying,\n        \"aria-label\": `Play sound for syllable ${syllable.syllable}`,\n        title: `Hear pronunciation of \"${syllable.syllable}\"`,\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this);\n  };\n  if (!selectedWord) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Progressive Word Builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn Korean writing step by step: from individual letters to complete words.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a word to build:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-cards\",\n          children: exampleWords.map(word => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"word-card\",\n            onClick: () => selectWord(word),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-korean\",\n              children: word.korean\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-romanization\",\n              children: word.romanization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-english\",\n              children: [\"\\\"\", word.english, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-count\",\n              children: [word.syllables.length, \" syllables\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `word-sound-btn ${isPlaying ? 'playing' : ''}`,\n              onClick: e => {\n                e.stopPropagation();\n                handlePlayWordSound(word);\n              },\n              disabled: isPlaying,\n              \"aria-label\": `Play pronunciation for ${word.english}`,\n              title: `Hear how to pronounce \"${word.english}\" in Korean`,\n              children: \"\\uD83D\\uDD0A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-builder-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"\\u2190 Back to Word Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Build: \", selectedWord.english]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"target-word\",\n            children: selectedWord.korean\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"romanization\",\n            children: [\"(\", selectedWord.romanization, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `word-sound-btn ${isPlaying ? 'playing' : ''}`,\n            onClick: () => handlePlayWordSound(selectedWord),\n            disabled: isPlaying,\n            \"aria-label\": `Play pronunciation for ${selectedWord.english}`,\n            title: `Hear how to pronounce \"${selectedWord.english}\"`,\n            children: \"\\uD83D\\uDD0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 1 ? 'active' : ''} ${currentStage > 1 ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Jamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 2 ? 'active' : ''} ${currentStage > 2 ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Syllables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 3 ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-container\",\n      children: [currentStage === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 1: Select Required Letters (Jamo)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose all the consonants and vowels needed to build this word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jamo-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Required Consonants:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-grid\",\n              children: requiredJamo.consonants.map(consonant => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getJamoButtonClass(consonant, 'consonant'),\n                onClick: () => handleJamoSelection(consonant, 'consonant'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: consonant.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: consonant.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-sound\",\n                  children: [\"(\", consonant.romanization, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 23\n                }, this)]\n              }, consonant.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Required Vowels:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-grid\",\n              children: requiredJamo.vowels.map(vowel => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getJamoButtonClass(vowel, 'vowel'),\n                onClick: () => handleJamoSelection(vowel, 'vowel'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: vowel.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: vowel.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-sound\",\n                  children: [\"(\", vowel.romanization, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 23\n                }, this)]\n              }, vowel.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            disabled: stageHints.length === 0,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-stage-btn\",\n            onClick: advanceToNextStage,\n            disabled: !checkStageCompletion(),\n            children: \"Next: Build Syllables \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 11\n      }, this), currentStage === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 2: Build Syllable Blocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Combine consonants and vowels to create syllable blocks. Build them one at a time.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"syllable-building\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-pool-stage2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Available Letters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select consonants and vowels to build the next syllable. You can reuse consonants for different positions.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-pool-grid\",\n              children: [requiredJamo.consonants.map(consonant => {\n                const selectedCount = selectedJamo.consonants.filter(c => c.id === consonant.id).length;\n                const maxNeeded = 2; // Can be used as both initial and final\n\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `jamo-btn ${selectedCount > 0 ? 'selected' : 'available'}`,\n                  onClick: () => handleJamoSelection(consonant, 'consonant'),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"jamo-letter\",\n                    children: consonant.koreanLetter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 639,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"jamo-name\",\n                    children: consonant.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 25\n                  }, this), selectedCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"usage-count\",\n                    children: [\"(\", selectedCount, \"/\", maxNeeded, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 27\n                  }, this)]\n                }, `${consonant.id}-${consonant.koreanLetter}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 23\n                }, this);\n              }), requiredJamo.vowels.map(vowel => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: getJamoButtonClass(vowel, 'vowel'),\n                onClick: () => handleJamoSelection(vowel, 'vowel'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: vowel.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 653,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: vowel.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 23\n                }, this)]\n              }, vowel.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-workspace\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Selected for Current Syllable:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-jamo\",\n              children: [selectedJamo.consonants.map((c, index) => {\n                const position = index === 0 ? 'initial' : 'final';\n                const positionKorean = position === 'initial' ? '초성' : '종성';\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `selected-jamo-item ${position === 'initial' ? 'consonant' : 'final-consonant'}`,\n                  children: [c.koreanLetter, \" (\", c.name, \") - \", positionKorean]\n                }, `${c.id}-${index}-${position}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 23\n                }, this);\n              }), selectedJamo.vowels.map(v => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-jamo-item vowel\",\n                children: [v.koreanLetter, \" (\", v.name, \") - Vowel\"]\n              }, v.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selection-summary\",\n              children: selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"structure-info\",\n                children: [selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"structure-badge cv\",\n                  children: \"CV Structure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 25\n                }, this), selectedJamo.consonants.length === 2 && selectedJamo.vowels.length === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"structure-badge cvc\",\n                  children: \"CVC Structure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-preview\",\n              children: selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-syllable\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-text\",\n                  children: [\"Preview: \", selectedJamo.consonants[0].koreanLetter + selectedJamo.vowels[0].koreanLetter, selectedJamo.consonants.length > 1 && selectedJamo.consonants[1].koreanLetter]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-structure\",\n                  children: [\"(\", selectedJamo.consonants.length > 1 ? 'CVC' : 'CV', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"workspace-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"build-syllable-btn\",\n                onClick: () => {\n                  console.log('Build Syllable clicked');\n                  console.log('Selected Jamo:', selectedJamo);\n                  console.log('Can build:', canBuildSyllable());\n                  buildSyllable();\n                },\n                disabled: !canBuildSyllable(),\n                children: canBuildSyllable() ? `Build Syllable (${selectedJamo.consonants.length > 1 ? 'CVC' : 'CV'}) →` : 'Select 1 consonant + 1 vowel (+ optional final consonant)'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-selection-btn\",\n                onClick: () => setSelectedJamo({\n                  consonants: [],\n                  vowels: []\n                }),\n                children: \"Clear Selection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"built-syllables\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Built Syllables (\", builtSyllables.length, \"/\", selectedWord.syllables.length, \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllables-display\",\n              children: builtSyllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"built-syllable\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"syllable-text\",\n                    children: syllable.syllable\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `syllable-sound-btn ${isPlaying ? 'playing' : ''}`,\n                    onClick: () => handlePlaySyllableSound(syllable),\n                    disabled: isPlaying,\n                    \"aria-label\": `Play sound for syllable ${syllable.syllable}`,\n                    title: `Hear pronunciation of \"${syllable.syllable}\"`,\n                    children: \"\\uD83D\\uDD0A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 739,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-components\",\n                  children: [syllable.consonant, \" + \", syllable.vowel, syllable.final && ` + ${syllable.final}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-structure\",\n                  children: syllable.structure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this), builtSyllables.length < selectedWord.syllables.length && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"next-syllable-hint\",\n              children: [\"Next: Build \\\"\", selectedWord.syllables[builtSyllables.length].syllable, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-stage-btn\",\n            onClick: () => setCurrentStage(1),\n            children: \"\\u2190 Back to Jamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-stage-btn\",\n            onClick: advanceToNextStage,\n            disabled: !checkStageCompletion(),\n            children: \"Next: Build Word \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this), currentStage === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 3: Build the Complete Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Arrange the syllable blocks to form the complete word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-building\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"target-word-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Word Structure:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-slots\",\n              children: selectedWord.syllables.map((targetSyllable, index) => {\n                console.log(`Rendering word slot ${index}:`, {\n                  targetSyllable,\n                  userSyllable: userWord[index]\n                });\n                if (!targetSyllable) {\n                  console.error('targetSyllable is undefined at index:', index);\n                  return null;\n                }\n                const isCorrect = userWord[index] && userWord[index].syllable === targetSyllable.syllable;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `word-slot ${isCorrect ? 'correct' : ''}`,\n                  children: userWord[index] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `syllable-in-word ${isCorrect ? 'correct' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"syllable-text\",\n                      children: userWord[index].syllable\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 813,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"remove-syllable\",\n                      onClick: () => removeSyllable(index),\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 814,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"empty-word-slot\",\n                    children: \"Drop syllable here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 822,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 17\n            }, this), userWord.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-word\",\n              children: [\"Current: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"current-word-display\",\n                children: userWord.map(s => s.syllable).join('')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 19\n            }, this), checkStageCompletion() && currentStage === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success-message\",\n              children: [\"\\uD83C\\uDF89 Congratulations! You successfully built \\\"\", selectedWord.korean, \"\\\" (\", selectedWord.english, \")!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available-syllables\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Available Syllables:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllables-pool\",\n              children: builtSyllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getSyllableButtonClass(syllable),\n                draggable: !userWord.some(userSyl => userSyl.syllable === syllable.syllable),\n                onDragStart: e => {\n                  e.dataTransfer.setData('text/plain', syllable.syllable);\n                },\n                onClick: () => handleSyllableDrop(syllable),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"syllable-display\",\n                  children: syllable.syllable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-stage-btn\",\n            onClick: () => setCurrentStage(2),\n            children: \"\\u2190 Back to Syllables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"check-word-btn\",\n            onClick: () => {\n              try {\n                console.log('Check Word button clicked');\n                console.log('userWord:', userWord);\n                console.log('selectedWord:', selectedWord);\n                if (checkStageCompletion()) {\n                  setShowHint(false);\n                  setCurrentHint(`Perfect! You successfully built \"${selectedWord.korean}\" (${selectedWord.english})!`);\n                  setShowHint(true);\n                } else {\n                  // Find the first incorrect syllable\n                  let errorMessage = 'Check your syllable placement and try again.';\n                  if (userWord.length > 0 && selectedWord && selectedWord.syllables) {\n                    const firstIncorrect = userWord.findIndex((userSyl, index) => {\n                      if (!userSyl || !selectedWord.syllables[index]) return true;\n                      return userSyl.syllable !== selectedWord.syllables[index].syllable;\n                    });\n                    if (firstIncorrect >= 0) {\n                      errorMessage = `Check position ${firstIncorrect + 1}. Make sure \"${selectedWord.syllables[firstIncorrect].syllable}\" is in the correct place.`;\n                    }\n                  }\n                  setShowHint(false);\n                  setCurrentHint(errorMessage);\n                  setShowHint(true);\n                }\n              } catch (error) {\n                console.error('Error in Check Word:', error);\n                setShowHint(false);\n                setCurrentHint('An error occurred. Please try again or refresh the page.');\n                setShowHint(true);\n              }\n            },\n            children: \"Check Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: resetExercise,\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-word-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"Try Another Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 9\n      }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hint-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hint-icon\",\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-hint\",\n            onClick: () => setShowHint(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 508,\n    columnNumber: 5\n  }, this);\n};\n_s(WordBuilderSection, \"Mjd0XBpAVtsViS5LEsnIBalimoI=\");\n_c = WordBuilderSection;\nexport default WordBuilderSection;\nvar _c;\n$RefreshReg$(_c, \"WordBuilderSection\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","exampleWords","koreanConsonants","koreanVowels","playSyllableSound","playWordSound","preloadVoices","jsxDEV","_jsxDEV","WordBuilderSection","_s","selectedWord","setSelectedWord","currentStage","setCurrentStage","selectedJamo","setSelectedJamo","consonants","vowels","builtSyllables","setBuiltSyllables","userWord","setUserWord","showHint","setShowHint","currentHint","setCurrentHint","isPlaying","setIsPlaying","handlePlaySyllableSound","syllable","error","console","handlePlayWordSound","word","selectWord","getRequiredJamo","required","syllables","forEach","consonant","find","c","koreanLetter","id","push","vowel","v","final","finalConsonant","getHints","hints","missingConsonants","filter","reqC","_selectedJamo$consona","some","selC","missingVowels","reqV","_selectedJamo$vowels","selV","length","name","currentSyllableIndex","targetSyllable","initial","structure","availableConsonants","requiredJamo","nextSyllable","availableSyllable","bs","stageHints","showHintForCurrentStage","handleJamoSelection","jamo","type","log","prev","isAlreadySelected","canBuildSyllable","hasConsonant","hasVowel","buildSyllable","initialConsonant","syllableText","ts","consonantMatch","vowelMatch","finalMatch","newSyllable","completed","updated","handleSyllableDrop","userSyl","newWord","removeSyllable","index","_","i","checkStageCompletion","hasAllConsonants","every","_selectedJamo$consona2","hasAllVowels","_selectedJamo$vowels2","isCorrect","advanceToNextStage","resetExercise","getJamoButtonClass","isSelected","getSyllableButtonClass","isUsed","renderSyllableWithSound","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","title","map","korean","romanization","english","selectedCount","maxNeeded","position","positionKorean","userSyllable","s","join","draggable","onDragStart","dataTransfer","setData","errorMessage","firstIncorrect","findIndex","_c","$RefreshReg$"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { exampleWords, koreanConsonants, koreanVowels } from '../koreanAlphabetData';\nimport { playSyllableSound, playWordSound, preloadVoices } from '../utils/audioUtils';\n\nconst WordBuilderSection = () => {\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currentStage, setCurrentStage] = useState(1); // 1: jamo, 2: syllables, 3: word\n  const [selectedJamo, setSelectedJamo] = useState({\n    consonants: [],   // Array of selected consonants (can include duplicates for different positions)\n    vowels: []        // Array of selected vowels\n  });\n  const [builtSyllables, setBuiltSyllables] = useState([]);\n  const [userWord, setUserWord] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [currentHint, setCurrentHint] = useState('');\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  // Preload voices when component mounts\n  useEffect(() => {\n    preloadVoices();\n  }, []);\n\n  // Audio playback handlers\n  const handlePlaySyllableSound = async (syllable) => {\n    if (isPlaying) return;\n\n    setIsPlaying(true);\n    try {\n      await playSyllableSound(syllable);\n    } catch (error) {\n      console.error('Error playing syllable sound:', error);\n    } finally {\n      setIsPlaying(false);\n    }\n  };\n\n  const handlePlayWordSound = async (word) => {\n    if (isPlaying) return;\n\n    setIsPlaying(true);\n    try {\n      await playWordSound(word);\n    } catch (error) {\n      console.error('Error playing word sound:', error);\n    } finally {\n      setIsPlaying(false);\n    }\n  };\n\n  const selectWord = useCallback((word) => {\n    setSelectedWord(word);\n    setCurrentStage(1);\n    setSelectedJamo({ consonants: [], vowels: [] });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n\n  const getRequiredJamo = useCallback(() => {\n    if (!selectedWord) return { consonants: [], vowels: [] };\n\n    const required = { consonants: [], vowels: [] };\n\n    selectedWord.syllables.forEach(syllable => {\n      // Add initial consonant\n      if (syllable.consonant) {\n        const consonant = koreanConsonants.find(c => c.koreanLetter === syllable.consonant);\n        if (consonant && !required.consonants.find(c => c.id === consonant.id)) {\n          required.consonants.push(consonant);\n        }\n      }\n\n      // Add vowel\n      if (syllable.vowel) {\n        const vowel = koreanVowels.find(v => v.koreanLetter === syllable.vowel);\n        if (vowel && !required.vowels.find(v => v.id === vowel.id)) {\n          required.vowels.push(vowel);\n        }\n      }\n\n      // Add final consonant (for CVC syllables)\n      if (syllable.final) {\n        const finalConsonant = koreanConsonants.find(c => c.koreanLetter === syllable.final);\n        if (finalConsonant && !required.consonants.find(c => c.id === finalConsonant.id)) {\n          required.consonants.push(finalConsonant);\n        }\n      }\n    });\n\n    return required;\n  }, [selectedWord]);\n\n  const getHints = useCallback(() => {\n    if (!selectedWord) return [];\n\n    const hints = [];\n\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const missingConsonants = required.consonants.filter(reqC =>\n        !selectedJamo.consonants?.some(selC => selC.id === reqC.id)\n      );\n      const missingVowels = required.vowels.filter(reqV =>\n        !selectedJamo.vowels?.some(selV => selV.id === reqV.id)\n      );\n\n      if (missingConsonants.length > 0) {\n        hints.push(`Select the consonant: ${missingConsonants[0].koreanLetter} (${missingConsonants[0].name})`);\n      } else if (missingVowels.length > 0) {\n        hints.push(`Select the vowel: ${missingVowels[0].koreanLetter} (${missingVowels[0].name})`);\n      } else {\n        hints.push(\"Great! You've selected all required letters. Click 'Next' to build syllables.\");\n      }\n    }\n\n    if (currentStage === 2) {\n      const currentSyllableIndex = builtSyllables.length;\n      if (currentSyllableIndex < selectedWord.syllables.length) {\n        const targetSyllable = selectedWord.syllables[currentSyllableIndex];\n\n        if (!selectedJamo.initial && !selectedJamo.vowel) {\n          if (targetSyllable.structure === 'CVC') {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CVC): Select ${targetSyllable.consonant} (initial) + ${targetSyllable.vowel} + ${targetSyllable.final} (final)`);\n          } else {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CV): Select ${targetSyllable.consonant} + ${targetSyllable.vowel}`);\n          }\n        } else if (selectedJamo.initial && !selectedJamo.vowel) {\n          hints.push(`Now select ${targetSyllable.vowel}${targetSyllable.final ? ' (and optionally ' + targetSyllable.final + ' for final consonant)' : ''}`);\n        } else if (!selectedJamo.initial && selectedJamo.vowel) {\n          hints.push(`Select ${targetSyllable.consonant} as initial consonant`);\n        } else if (selectedJamo.initial && selectedJamo.vowel && !selectedJamo.final) {\n          if (targetSyllable.final) {\n            // Check if we can reuse the same consonant for final position\n            const availableConsonants = requiredJamo.consonants.filter(c =>\n              c.koreanLetter === targetSyllable.final ||\n              c.koreanLetter === targetSyllable.consonant\n            );\n            if (availableConsonants.length > 0) {\n              hints.push(`Add ${targetSyllable.final} as final consonant (you can reuse ${targetSyllable.consonant} if it's the same letter)`);\n            } else {\n              hints.push(`Add ${targetSyllable.final} as final consonant`);\n            }\n          } else {\n            hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CV structure)`);\n          }\n        } else if (selectedJamo.initial && selectedJamo.vowel && selectedJamo.final) {\n          hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CVC structure)`);\n        }\n      }\n    }\n\n    if (currentStage === 3) {\n      if (userWord.length < selectedWord.syllables.length) {\n        const nextSyllable = selectedWord.syllables[userWord.length];\n        const availableSyllable = builtSyllables.find(bs => bs.syllable === nextSyllable.syllable);\n        if (availableSyllable) {\n          hints.push(`Drag \"${availableSyllable.syllable}\" to the next empty slot`);\n        } else {\n          hints.push(`Build \"${nextSyllable.syllable}\" first in Stage 2`);\n        }\n      } else {\n        hints.push(`Click \"Check Word\" to verify your word construction`);\n      }\n    }\n\n    return hints;\n  }, [selectedWord, currentStage, selectedJamo, builtSyllables, userWord, getRequiredJamo]);\n\n  const requiredJamo = getRequiredJamo();\n  const stageHints = getHints();\n\n  const showHintForCurrentStage = useCallback(() => {\n    const hints = getHints();\n    if (hints.length > 0) {\n      setCurrentHint(hints[0]);\n      setShowHint(true);\n    }\n  }, [getHints]);\n\n  const handleJamoSelection = useCallback((jamo, type) => {\n    console.log('Jamo selected:', jamo, type);\n\n    setSelectedJamo(prev => {\n      if (type === 'consonant') {\n        // For consonants, allow multiple selections of the same jamo for different positions\n        // Check if this exact jamo is already selected\n        const isAlreadySelected = prev.consonants.some(c => c.id === jamo.id);\n\n        if (isAlreadySelected) {\n          // If already selected, we can still add it again for reuse\n          // This allows the same consonant to be used in multiple positions\n          console.log('Adding another instance of consonant for reuse');\n          return {\n            ...prev,\n            consonants: [...prev.consonants, jamo]\n          };\n        } else {\n          // If not selected, add it\n          console.log('Adding new consonant selection');\n          return {\n            ...prev,\n            consonants: [...prev.consonants, jamo]\n          };\n        }\n      } else if (type === 'vowel') {\n        // For vowels, toggle behavior (usually only need one vowel per syllable)\n        const isAlreadySelected = prev.vowels.some(v => v.id === jamo.id);\n\n        if (isAlreadySelected) {\n          console.log('Toggling vowel selection');\n          return {\n            ...prev,\n            vowels: prev.vowels.filter(v => v.id !== jamo.id)\n          };\n        } else {\n          console.log('Adding vowel selection');\n          return {\n            ...prev,\n            vowels: [...prev.vowels, jamo]\n          };\n        }\n      }\n\n      return prev;\n    });\n  }, []);\n\n  const canBuildSyllable = useCallback(() => {\n    // Need at least 1 consonant and 1 vowel to build a syllable\n    // For CVC syllables, we'll need 2 consonants and 1 vowel\n    const hasConsonant = selectedJamo.consonants.length >= 1;\n    const hasVowel = selectedJamo.vowels.length >= 1;\n\n    return hasConsonant && hasVowel;\n  }, [selectedJamo]);\n\n\n  const buildSyllable = useCallback(() => {\n    if (!canBuildSyllable()) return;\n\n    console.log('Building syllable with:', selectedJamo);\n\n    const initialConsonant = selectedJamo.consonants[0];\n    const vowel = selectedJamo.vowels[0];\n    const finalConsonant = selectedJamo.consonants.length > 1 ? selectedJamo.consonants[1] : null;\n\n    // Create syllable text based on structure\n    let syllableText = initialConsonant.koreanLetter + vowel.koreanLetter;\n    if (finalConsonant) {\n      syllableText += finalConsonant.koreanLetter;\n    }\n\n    console.log('Looking for target syllable with:', {\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : null\n    });\n\n    // Find the matching syllable in the target word to get complete structure\n    const targetSyllable = selectedWord.syllables.find(ts => {\n      const consonantMatch = ts.consonant === initialConsonant.koreanLetter;\n      const vowelMatch = ts.vowel === vowel.koreanLetter;\n      const finalMatch = finalConsonant\n        ? ts.final === finalConsonant.koreanLetter\n        : !ts.final; // No final consonant expected\n\n      console.log('Checking syllable:', ts, { consonantMatch, vowelMatch, finalMatch });\n      return consonantMatch && vowelMatch && finalMatch;\n    });\n\n    console.log('Found target syllable:', targetSyllable);\n\n    const newSyllable = {\n      syllable: targetSyllable ? targetSyllable.syllable : syllableText,\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : (targetSyllable ? targetSyllable.final : null),\n      structure: targetSyllable ? targetSyllable.structure : (finalConsonant ? 'CVC' : 'CV'),\n      completed: true\n    };\n\n    console.log('Created new syllable:', newSyllable);\n\n    setBuiltSyllables(prev => {\n      const updated = [...prev, newSyllable];\n      console.log('Updated builtSyllables:', updated);\n      return updated;\n    });\n\n    // Clear selections after building\n    setSelectedJamo({ consonants: [], vowels: [] });\n  }, [canBuildSyllable, selectedJamo, selectedWord]);\n\n  const handleSyllableDrop = useCallback((syllable) => {\n    console.log('Dropping syllable:', syllable);\n\n    if (!selectedWord) {\n      console.error('selectedWord is undefined');\n      return;\n    }\n\n    if (userWord.length >= selectedWord.syllables.length) {\n      console.log('Word is already complete');\n      return;\n    }\n\n    if (userWord.some(userSyl => userSyl.syllable === syllable.syllable)) {\n      console.log('Syllable already used');\n      return;\n    }\n\n    setUserWord(prev => {\n      const newWord = [...prev, syllable];\n      console.log('New userWord:', newWord);\n      return newWord;\n    });\n  }, [selectedWord, userWord]);\n\n  const removeSyllable = useCallback((index) => {\n    console.log('Removing syllable at index:', index);\n    setUserWord(prev => {\n      const newWord = prev.filter((_, i) => i !== index);\n      console.log('New userWord after removal:', newWord);\n      return newWord;\n    });\n  }, []);\n\n  const checkStageCompletion = useCallback(() => {\n    console.log('Checking stage completion:', { currentStage, userWord, selectedWord });\n\n    if (currentStage === 1) {\n      // For Stage 1, we need to check if all required jamo have been collected\n      // But since we're now using the old array-based structure for Stage 1,\n      // we need to maintain backward compatibility\n      const required = getRequiredJamo();\n      console.log('Stage 1 validation:', { required, selectedJamo });\n\n      // Check if all required consonants are in the collected jamo\n      const hasAllConsonants = required.consonants.every(reqC =>\n        selectedJamo.consonants?.some(selC => selC.id === reqC.id)\n      );\n\n      // Check if all required vowels are in the collected jamo\n      const hasAllVowels = required.vowels.every(reqV =>\n        selectedJamo.vowels?.some(selV => selV.id === reqV.id)\n      );\n\n      console.log('Stage 1 completion check:', { hasAllConsonants, hasAllVowels });\n      return hasAllConsonants && hasAllVowels;\n    }\n\n    if (currentStage === 2) {\n      return builtSyllables.length === selectedWord.syllables.length &&\n             builtSyllables.every(bs => bs.completed);\n    }\n\n    if (currentStage === 3) {\n      console.log('Stage 3 validation:', { userWord, selectedWord });\n\n      if (!selectedWord || !selectedWord.syllables) {\n        console.error('selectedWord or syllables is undefined');\n        return false;\n      }\n\n      if (userWord.length !== selectedWord.syllables.length) {\n        console.log('User word length mismatch:', userWord.length, selectedWord.syllables.length);\n        return false;\n      }\n\n      // Check each syllable with proper error handling\n      for (let index = 0; index < userWord.length; index++) {\n        const userSyl = userWord[index];\n        const targetSyllable = selectedWord.syllables[index];\n\n        console.log(`Checking index ${index}:`, { userSyl, targetSyllable });\n\n        if (!userSyl) {\n          console.error('userSyl is undefined at index:', index);\n          return false;\n        }\n\n        if (!targetSyllable) {\n          console.error('targetSyllable is undefined at index:', index);\n          return false;\n        }\n\n        if (!userSyl.syllable || !targetSyllable.syllable) {\n          console.error('Syllable text is undefined:', { userSyl, targetSyllable });\n          return false;\n        }\n\n        const isCorrect = userSyl.syllable === targetSyllable.syllable;\n        console.log(`Comparing: \"${userSyl.syllable}\" vs \"${targetSyllable.syllable}\" = ${isCorrect}`);\n\n        if (!isCorrect) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }, [currentStage, selectedJamo, builtSyllables, userWord, selectedWord, getRequiredJamo]);\n\n  const advanceToNextStage = useCallback(() => {\n    if (currentStage < 3) {\n      setCurrentStage(prev => prev + 1);\n      setShowHint(false);\n    }\n  }, [currentStage]);\n\n  const resetExercise = useCallback(() => {\n    setCurrentStage(1);\n    setSelectedJamo({ consonants: [], vowels: [] });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n\n  const getJamoButtonClass = (jamo, type) => {\n    let isSelected = false;\n\n    if (type === 'consonant') {\n      isSelected = selectedJamo.consonants.some(c => c.id === jamo.id);\n    } else if (type === 'vowel') {\n      isSelected = selectedJamo.vowels.some(v => v.id === jamo.id);\n    }\n\n    return `jamo-btn ${isSelected ? 'selected' : 'available'}`;\n  };\n\n  const getSyllableButtonClass = (syllable) => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n\n  const renderSyllableWithSound = (syllable, index) => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return (\n      <div key={index} className=\"syllable-container\">\n        <button\n          className={`syllable-btn ${isUsed ? 'used' : 'available'}`}\n          onClick={() => handleSyllableDrop(syllable)}\n          disabled={isUsed}\n        >\n          {syllable.syllable}\n        </button>\n        <button\n          className={`syllable-sound-btn ${isPlaying ? 'playing' : ''}`}\n          onClick={(e) => {\n            e.stopPropagation();\n            handlePlaySyllableSound(syllable);\n          }}\n          disabled={isPlaying}\n          aria-label={`Play sound for syllable ${syllable.syllable}`}\n          title={`Hear pronunciation of \"${syllable.syllable}\"`}\n        >\n          🔊\n        </button>\n      </div>\n    );\n  };\n\n\n  if (!selectedWord) {\n    return (\n      <div className=\"word-builder-section\">\n        <div className=\"section-header\">\n          <h2>Progressive Word Builder</h2>\n          <p>Learn Korean writing step by step: from individual letters to complete words.</p>\n        </div>\n\n        <div className=\"word-selection\">\n          <h3>Select a word to build:</h3>\n          <div className=\"word-cards\">\n            {exampleWords.map(word => (\n              <button\n                key={word.id}\n                className=\"word-card\"\n                onClick={() => selectWord(word)}\n              >\n                <div className=\"word-korean\">{word.korean}</div>\n                <div className=\"word-romanization\">{word.romanization}</div>\n                <div className=\"word-english\">\"{word.english}\"</div>\n                <div className=\"syllable-count\">{word.syllables.length} syllables</div>\n                <button\n                  className={`word-sound-btn ${isPlaying ? 'playing' : ''}`}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    handlePlayWordSound(word);\n                  }}\n                  disabled={isPlaying}\n                  aria-label={`Play pronunciation for ${word.english}`}\n                  title={`Hear how to pronounce \"${word.english}\" in Korean`}\n                >\n                  🔊\n                </button>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"word-builder-section\">\n      <div className=\"section-header\">\n        <div className=\"exercise-header\">\n          <button className=\"back-btn\" onClick={() => setSelectedWord(null)}>\n            ← Back to Word Selection\n          </button>\n          <h2>Build: {selectedWord.english}</h2>\n          <div className=\"word-info\">\n            <span className=\"target-word\">{selectedWord.korean}</span>\n            <span className=\"romanization\">({selectedWord.romanization})</span>\n            <button\n              className={`word-sound-btn ${isPlaying ? 'playing' : ''}`}\n              onClick={() => handlePlayWordSound(selectedWord)}\n              disabled={isPlaying}\n              aria-label={`Play pronunciation for ${selectedWord.english}`}\n              title={`Hear how to pronounce \"${selectedWord.english}\"`}\n            >\n              🔊\n            </button>\n          </div>\n        </div>\n\n        {/* Progress indicator */}\n        <div className=\"stage-progress\">\n          <div className={`stage ${currentStage === 1 ? 'active' : ''} ${currentStage > 1 ? 'completed' : ''}`}>\n            <span className=\"stage-number\">1</span>\n            <span className=\"stage-label\">Jamo</span>\n          </div>\n          <div className={`stage ${currentStage === 2 ? 'active' : ''} ${currentStage > 2 ? 'completed' : ''}`}>\n            <span className=\"stage-number\">2</span>\n            <span className=\"stage-label\">Syllables</span>\n          </div>\n          <div className={`stage ${currentStage === 3 ? 'active' : ''}`}>\n            <span className=\"stage-number\">3</span>\n            <span className=\"stage-label\">Word</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"word-builder-container\">\n        {/* Stage 1: Jamo Selection */}\n        {currentStage === 1 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 1: Select Required Letters (Jamo)</h3>\n              <p>Choose all the consonants and vowels needed to build this word.</p>\n            </div>\n\n            <div className=\"jamo-selection\">\n              <div className=\"jamo-section\">\n                <h4>Required Consonants:</h4>\n                <div className=\"jamo-grid\">\n                  {requiredJamo.consonants.map(consonant => (\n                    <div\n                      key={consonant.id}\n                      className={getJamoButtonClass(consonant, 'consonant')}\n                      onClick={() => handleJamoSelection(consonant, 'consonant')}\n                    >\n                      <span className=\"jamo-letter\">{consonant.koreanLetter}</span>\n                      <span className=\"jamo-name\">{consonant.name}</span>\n                      <span className=\"jamo-sound\">({consonant.romanization})</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"jamo-section\">\n                <h4>Required Vowels:</h4>\n                <div className=\"jamo-grid\">\n                  {requiredJamo.vowels.map(vowel => (\n                    <div\n                      key={vowel.id}\n                      className={getJamoButtonClass(vowel, 'vowel')}\n                      onClick={() => handleJamoSelection(vowel, 'vowel')}\n                    >\n                      <span className=\"jamo-letter\">{vowel.koreanLetter}</span>\n                      <span className=\"jamo-name\">{vowel.name}</span>\n                      <span className=\"jamo-sound\">({vowel.romanization})</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button\n                className=\"hint-btn\"\n                onClick={showHintForCurrentStage}\n                disabled={stageHints.length === 0}\n              >\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button\n                className=\"next-stage-btn\"\n                onClick={advanceToNextStage}\n                disabled={!checkStageCompletion()}\n              >\n                Next: Build Syllables →\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Stage 2: Syllable Building */}\n        {currentStage === 2 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 2: Build Syllable Blocks</h3>\n              <p>Combine consonants and vowels to create syllable blocks. Build them one at a time.</p>\n            </div>\n\n            <div className=\"syllable-building\">\n              {/* Available Jamo Pool for Syllable Building */}\n              <div className=\"jamo-pool-stage2\">\n                <h4>Available Letters:</h4>\n                <p>Select consonants and vowels to build the next syllable. You can reuse consonants for different positions.</p>\n                <div className=\"jamo-pool-grid\">\n                  {requiredJamo.consonants.map(consonant => {\n                    const selectedCount = selectedJamo.consonants.filter(c => c.id === consonant.id).length;\n                    const maxNeeded = 2; // Can be used as both initial and final\n\n                    return (\n                      <button\n                        key={`${consonant.id}-${consonant.koreanLetter}`}\n                        className={`jamo-btn ${selectedCount > 0 ? 'selected' : 'available'}`}\n                        onClick={() => handleJamoSelection(consonant, 'consonant')}\n                      >\n                        <span className=\"jamo-letter\">{consonant.koreanLetter}</span>\n                        <span className=\"jamo-name\">{consonant.name}</span>\n                        {selectedCount > 0 && (\n                          <span className=\"usage-count\">({selectedCount}/{maxNeeded})</span>\n                        )}\n                      </button>\n                    );\n                  })}\n                  {requiredJamo.vowels.map(vowel => (\n                    <button\n                      key={vowel.id}\n                      className={getJamoButtonClass(vowel, 'vowel')}\n                      onClick={() => handleJamoSelection(vowel, 'vowel')}\n                    >\n                      <span className=\"jamo-letter\">{vowel.koreanLetter}</span>\n                      <span className=\"jamo-name\">{vowel.name}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"jamo-workspace\">\n                <h4>Selected for Current Syllable:</h4>\n                <div className=\"selected-jamo\">\n                  {selectedJamo.consonants.map((c, index) => {\n                    const position = index === 0 ? 'initial' : 'final';\n                    const positionKorean = position === 'initial' ? '초성' : '종성';\n                    return (\n                      <span key={`${c.id}-${index}-${position}`} className={`selected-jamo-item ${position === 'initial' ? 'consonant' : 'final-consonant'}`}>\n                        {c.koreanLetter} ({c.name}) - {positionKorean}\n                      </span>\n                    );\n                  })}\n                  {selectedJamo.vowels.map(v => (\n                    <span key={v.id} className=\"selected-jamo-item vowel\">\n                      {v.koreanLetter} ({v.name}) - Vowel\n                    </span>\n                  ))}\n                </div>\n\n                <div className=\"selection-summary\">\n                  {selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && (\n                    <div className=\"structure-info\">\n                      {selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1 && (\n                        <span className=\"structure-badge cv\">CV Structure</span>\n                      )}\n                      {selectedJamo.consonants.length === 2 && selectedJamo.vowels.length === 1 && (\n                        <span className=\"structure-badge cvc\">CVC Structure</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"syllable-preview\">\n                  {selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && (\n                    <div className=\"preview-syllable\">\n                      <span className=\"preview-text\">\n                        Preview: {selectedJamo.consonants[0].koreanLetter + selectedJamo.vowels[0].koreanLetter}\n                        {selectedJamo.consonants.length > 1 && selectedJamo.consonants[1].koreanLetter}\n                      </span>\n                      <span className=\"preview-structure\">\n                        ({selectedJamo.consonants.length > 1 ? 'CVC' : 'CV'})\n                      </span>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"workspace-buttons\">\n                  <button\n                    className=\"build-syllable-btn\"\n                    onClick={() => {\n                      console.log('Build Syllable clicked');\n                      console.log('Selected Jamo:', selectedJamo);\n                      console.log('Can build:', canBuildSyllable());\n                      buildSyllable();\n                    }}\n                    disabled={!canBuildSyllable()}\n                  >\n                    {canBuildSyllable()\n                      ? `Build Syllable (${selectedJamo.consonants.length > 1 ? 'CVC' : 'CV'}) →`\n                      : 'Select 1 consonant + 1 vowel (+ optional final consonant)'\n                    }\n                  </button>\n\n                  <button\n                    className=\"clear-selection-btn\"\n                    onClick={() => setSelectedJamo({ consonants: [], vowels: [] })}\n                  >\n                    Clear Selection\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"built-syllables\">\n                <h4>Built Syllables ({builtSyllables.length}/{selectedWord.syllables.length}):</h4>\n                <div className=\"syllables-display\">\n                  {builtSyllables.map((syllable, index) => (\n                    <div key={index} className=\"built-syllable\">\n                      <div className=\"syllable-header\">\n                        <span className=\"syllable-text\">{syllable.syllable}</span>\n                        <button\n                          className={`syllable-sound-btn ${isPlaying ? 'playing' : ''}`}\n                          onClick={() => handlePlaySyllableSound(syllable)}\n                          disabled={isPlaying}\n                          aria-label={`Play sound for syllable ${syllable.syllable}`}\n                          title={`Hear pronunciation of \"${syllable.syllable}\"`}\n                        >\n                          🔊\n                        </button>\n                      </div>\n                      <div className=\"syllable-components\">\n                        {syllable.consonant} + {syllable.vowel}\n                        {syllable.final && ` + ${syllable.final}`}\n                      </div>\n                      <div className=\"syllable-structure\">{syllable.structure}</div>\n                    </div>\n                  ))}\n                </div>\n\n                {builtSyllables.length < selectedWord.syllables.length && (\n                  <div className=\"next-syllable-hint\">\n                    Next: Build \"{selectedWord.syllables[builtSyllables.length].syllable}\"\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button className=\"hint-btn\" onClick={showHintForCurrentStage}>\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button className=\"prev-stage-btn\" onClick={() => setCurrentStage(1)}>\n                ← Back to Jamo\n              </button>\n              <button\n                className=\"next-stage-btn\"\n                onClick={advanceToNextStage}\n                disabled={!checkStageCompletion()}\n              >\n                Next: Build Word →\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Stage 3: Word Building */}\n        {currentStage === 3 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 3: Build the Complete Word</h3>\n              <p>Arrange the syllable blocks to form the complete word.</p>\n            </div>\n\n            <div className=\"word-building\">\n              <div className=\"target-word-area\">\n                <h4>Word Structure:</h4>\n                <div className=\"word-slots\">\n                  {selectedWord.syllables.map((targetSyllable, index) => {\n                    console.log(`Rendering word slot ${index}:`, { targetSyllable, userSyllable: userWord[index] });\n\n                    if (!targetSyllable) {\n                      console.error('targetSyllable is undefined at index:', index);\n                      return null;\n                    }\n\n                    const isCorrect = userWord[index] && userWord[index].syllable === targetSyllable.syllable;\n                    return (\n                      <div key={index} className={`word-slot ${isCorrect ? 'correct' : ''}`}>\n                        {userWord[index] ? (\n                          <div className={`syllable-in-word ${isCorrect ? 'correct' : ''}`}>\n                            <span className=\"syllable-text\">{userWord[index].syllable}</span>\n                            <button\n                              className=\"remove-syllable\"\n                              onClick={() => removeSyllable(index)}\n                            >\n                              ×\n                            </button>\n                          </div>\n                        ) : (\n                          <div className=\"empty-word-slot\">\n                            Drop syllable here\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n                {userWord.length > 0 && (\n                  <div className=\"current-word\">\n                    Current: <span className=\"current-word-display\">\n                      {userWord.map(s => s.syllable).join('')}\n                    </span>\n                  </div>\n                )}\n\n                {checkStageCompletion() && currentStage === 3 && (\n                  <div className=\"success-message\">\n                    🎉 Congratulations! You successfully built \"{selectedWord.korean}\" ({selectedWord.english})!\n                  </div>\n                )}\n              </div>\n\n              <div className=\"available-syllables\">\n                <h4>Available Syllables:</h4>\n                <div className=\"syllables-pool\">\n                  {builtSyllables.map((syllable, index) => (\n                    <div\n                      key={index}\n                      className={getSyllableButtonClass(syllable)}\n                      draggable={!userWord.some(userSyl => userSyl.syllable === syllable.syllable)}\n                      onDragStart={(e) => {\n                        e.dataTransfer.setData('text/plain', syllable.syllable);\n                      }}\n                      onClick={() => handleSyllableDrop(syllable)}\n                    >\n                      <span className=\"syllable-display\">{syllable.syllable}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button className=\"hint-btn\" onClick={showHintForCurrentStage}>\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button className=\"prev-stage-btn\" onClick={() => setCurrentStage(2)}>\n                ← Back to Syllables\n              </button>\n              <button className=\"check-word-btn\" onClick={() => {\n                try {\n                  console.log('Check Word button clicked');\n                  console.log('userWord:', userWord);\n                  console.log('selectedWord:', selectedWord);\n\n                  if (checkStageCompletion()) {\n                    setShowHint(false);\n                    setCurrentHint(`Perfect! You successfully built \"${selectedWord.korean}\" (${selectedWord.english})!`);\n                    setShowHint(true);\n                  } else {\n                    // Find the first incorrect syllable\n                    let errorMessage = 'Check your syllable placement and try again.';\n                    if (userWord.length > 0 && selectedWord && selectedWord.syllables) {\n                      const firstIncorrect = userWord.findIndex((userSyl, index) => {\n                        if (!userSyl || !selectedWord.syllables[index]) return true;\n                        return userSyl.syllable !== selectedWord.syllables[index].syllable;\n                      });\n\n                      if (firstIncorrect >= 0) {\n                        errorMessage = `Check position ${firstIncorrect + 1}. Make sure \"${selectedWord.syllables[firstIncorrect].syllable}\" is in the correct place.`;\n                      }\n                    }\n\n                    setShowHint(false);\n                    setCurrentHint(errorMessage);\n                    setShowHint(true);\n                  }\n                } catch (error) {\n                  console.error('Error in Check Word:', error);\n                  setShowHint(false);\n                  setCurrentHint('An error occurred. Please try again or refresh the page.');\n                  setShowHint(true);\n                }\n              }}>\n                Check Word\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Overall Controls */}\n        <div className=\"exercise-controls\">\n          <button className=\"reset-btn\" onClick={resetExercise}>\n            Start Over\n          </button>\n          <button className=\"new-word-btn\" onClick={() => setSelectedWord(null)}>\n            Try Another Word\n          </button>\n        </div>\n\n        {/* Hints */}\n        {showHint && (\n          <div className=\"hint-section\">\n            <div className=\"hint-content\">\n              <span className=\"hint-icon\">💡</span>\n              <span className=\"hint-text\">{currentHint}</span>\n              <button className=\"close-hint\" onClick={() => setShowHint(false)}>×</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WordBuilderSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}