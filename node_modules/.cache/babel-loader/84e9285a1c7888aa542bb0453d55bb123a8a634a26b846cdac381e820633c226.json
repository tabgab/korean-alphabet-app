{"ast":null,"code":"import React,{useState}from'react';import{koreanAlphabet}from'../koreanAlphabetData';import{useProgress}from'../context/ProgressContext';// Pictogram mapping for visual learning\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const pictogramMap={'square-angle':'⊏','line-horizontal':'─','line-vertical':'│','line-diagonal':'╲','square':'□','circle':'○','circle-half':'◐','triangle':'△','angle-right':'∟','zap':'⚡','h-square':'⊏','bars':'≡','table':'⊤','r':'◟','s':'Ͻ','t':'┬','y':'◠','trident':'Ψ','omega':'Ω','angle':'∠','plus':'+','star':'⭐'};const getPictogram=iconName=>{return pictogramMap[iconName]||'◇';};// Visual description helper\nconst getVisualDescription=letter=>{const descriptions={'Kiyeok':'a backwards \"L\" with a small horizontal line','Nieun':'a simple horizontal line','Digeut':'a square bracket facing right','Rieul':'two diagonal lines meeting','Mieum':'a perfect square','Bieup':'a square with a lid on top','Si-ot':'two horizontal lines, one above the other','Ieung':'a perfect circle','Jieut':'a backwards \"C\" with a horizontal line','Chieut':'three horizontal lines stacked','Kieuk':'ㄱ but with extra breath (aspirated)','Tieut':'ㄷ but with extra breath (aspirated)','Pieup':'ㅂ but with extra breath (aspirated)','Hieut':'two diagonal lines crossing','A':'a vertical line with a small horizontal branch to the right','Ya':'ㅏ but with an extra horizontal line above','Eo':'a horizontal line with a small vertical branch up','Yeo':'ㅓ but with an extra horizontal line above','O':'a horizontal line with a circle above it','Yo':'ㅗ but with an extra horizontal line below','U':'a horizontal line with a circle below it','Yu':'ㅜ but with an extra horizontal line below','Eu':'a single horizontal line','I':'a single vertical line'};return descriptions[letter.name]||'a unique shape to remember';};// Practice tip helper\nconst getPracticeTip=letter=>{const tips={'Kiyeok':'Start at the top and go down, then left - like drawing a backwards L','Nieun':'Just one horizontal line - simple and quick','Digeut':'Two lines: vertical then horizontal from the top','Rieul':'Two diagonal lines meeting at the bottom','Mieum':'Four lines forming a square - go clockwise','Bieup':'Three lines: start like ㄱ but add a top line','Si-ot':'Two parallel horizontal lines','Ieung':'One circular motion - smooth and continuous','Jieut':'Three strokes: curve, line, then small horizontal','Chieut':'Three horizontal lines from top to bottom','Kieuk':'Like Kiyeok but pronounce with more breath','Tieut':'Like Digeut but pronounce with more breath','Pieup':'Like Bieup but pronounce with more breath','Hieut':'Two diagonal lines crossing each other','A':'Vertical line down, then small branch to the right','Ya':'Like ㅏ but add an extra horizontal line above','Eo':'Horizontal line right, then small vertical up','Yeo':'Like ㅓ but add an extra horizontal line above','O':'Horizontal line, then circle above it','Yo':'Horizontal line, circle above, then line below','U':'Horizontal line, then circle below it','Yu':'Horizontal line, circle below, then line below that','Eu':'Single horizontal line - the simplest vowel','I':'Single vertical line - tall and straight'};return tips[letter.name]||'Practice the stroke order carefully';};const LearnSection=()=>{const{isLetterUnlocked,getAvailableLetters,getLockedLettersCount}=useProgress();const[selectedLetter,setSelectedLetter]=useState(null);const[filter,setFilter]=useState('available');// 'all', 'available', 'locked', 'consonants', 'vowels'\n// Function to pronounce Korean words using Web Speech API\nconst speakKorean=text=>{if('speechSynthesis'in window){// Cancel any ongoing speech\nwindow.speechSynthesis.cancel();const utterance=new SpeechSynthesisUtterance(text);// Try to find a Korean voice\nconst voices=window.speechSynthesis.getVoices();const koreanVoice=voices.find(voice=>voice.lang.startsWith('ko')||// Korean\nvoice.name.toLowerCase().includes('korean'));if(koreanVoice){utterance.voice=koreanVoice;utterance.lang=koreanVoice.lang;}else{// Fallback to English with Korean text\nutterance.lang='ko-KR';utterance.rate=0.8;// Slightly slower for clarity\n}// Speak the text\nwindow.speechSynthesis.speak(utterance);}else{console.warn('Speech synthesis not supported in this browser');}};const getFilteredLetters=()=>{switch(filter){case'available':return getAvailableLetters();case'locked':return koreanAlphabet.filter(letter=>!isLetterUnlocked(letter.id));case'consonants':return getAvailableLetters().filter(letter=>letter.category==='consonant');case'vowels':return getAvailableLetters().filter(letter=>letter.category==='vowel');default:return getAvailableLetters();}};const filteredLetters=getFilteredLetters();const LetterCard=_ref=>{let{letter}=_ref;const{isLetterUnlocked,isLetterCompleted,getBestScore}=useProgress();const unlocked=isLetterUnlocked(letter.id);const completed=isLetterCompleted(letter.id);const bestScore=getBestScore(letter.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"letter-card \".concat(letter.category,\" \").concat((selectedLetter===null||selectedLetter===void 0?void 0:selectedLetter.id)===letter.id?'selected':'',\" \").concat(unlocked?'unlocked':'locked'),onClick:()=>unlocked&&setSelectedLetter(letter),role:\"button\",tabIndex:unlocked?0:-1,\"aria-label\":\"\".concat(letter.name,\" Korean letter. \").concat(unlocked?'Click to view details':'Locked - complete previous levels to unlock'),\"aria-pressed\":(selectedLetter===null||selectedLetter===void 0?void 0:selectedLetter.id)===letter.id,onKeyDown:e=>{if((e.key==='Enter'||e.key===' ')&&unlocked){e.preventDefault();setSelectedLetter(letter);}},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"letter-display\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"letter-main\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"korean-letter \".concat(unlocked?'':'locked'),children:letter.koreanLetter}),/*#__PURE__*/_jsx(\"span\",{className:\"letter-name\",children:letter.name}),!unlocked&&/*#__PURE__*/_jsx(\"span\",{className:\"lock-icon\",children:\"\\uD83D\\uDD12\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pictogram \".concat(unlocked?'':'locked'),children:getPictogram(letter.pictogram)})]}),unlocked?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"letter-sound\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"sound-text\",children:[\"/\",letter.romanization,\"/\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"letter-comparison\",children:/*#__PURE__*/_jsx(\"span\",{className:\"comparison-text\",children:letter.englishComparison})}),/*#__PURE__*/_jsx(\"div\",{className:\"letter-progress\",children:completed&&/*#__PURE__*/_jsxs(\"div\",{className:\"completion-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"completion-badge\",children:\"\\u2713\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"best-score\",children:[bestScore,\"%\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"difficulty-indicator\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"difficulty-badge difficulty-\".concat(letter.difficulty),children:[\"Level \",letter.difficulty]})})]}):/*#__PURE__*/_jsx(\"div\",{className:\"locked-message\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Complete Level \",letter.difficulty-1,\" letters to unlock\"]})})]});};const LetterDetail=_ref2=>{let{letter}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"letter-detail\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"detail-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"letter-visualization\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"detail-korean\",children:letter.koreanLetter}),/*#__PURE__*/_jsx(\"div\",{className:\"pictogram-large\",children:getPictogram(letter.pictogram)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:letter.name}),/*#__PURE__*/_jsxs(\"p\",{className:\"pronunciation\",children:[\"Romanization: \",/*#__PURE__*/_jsx(\"strong\",{children:letter.romanization})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"letter-category\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"category-badge \".concat(letter.category),children:letter.category.charAt(0).toUpperCase()+letter.category.slice(1)}),/*#__PURE__*/_jsxs(\"span\",{className:\"difficulty-badge difficulty-\".concat(letter.difficulty),children:[\"Level \",letter.difficulty]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comparison-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDD0D English Comparison\"}),/*#__PURE__*/_jsx(\"p\",{children:letter.englishComparison})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"visual-aid-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDC41\\uFE0F Visual Learning Aid\"}),/*#__PURE__*/_jsx(\"p\",{children:letter.visualAid}),/*#__PURE__*/_jsxs(\"div\",{className:\"visual-example\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"visual-prompt\",children:\"Think of it as:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"visual-description\",children:getVisualDescription(letter)})]})]}),letter.strokeOrder&&/*#__PURE__*/_jsxs(\"div\",{className:\"stroke-order-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u270F\\uFE0F Stroke Order\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"stroke-count\",children:[\"Number of strokes: \",letter.strokeOrder.length]}),/*#__PURE__*/_jsx(\"div\",{className:\"stroke-order\",children:letter.strokeOrder.map((stroke,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"stroke-number\",children:stroke},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"examples-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDCDD Example Words (English)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"examples-subtitle\",children:\"Words that start with similar sounds:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"example-words\",children:letter.exampleWords.map((word,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"example-word\",children:word},index))})]}),letter.commonWords.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"korean-words-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83C\\uDDF0\\uD83C\\uDDF7 Korean Examples\"}),/*#__PURE__*/_jsx(\"p\",{className:\"korean-subtitle\",children:\"Common Korean words starting with this letter (click to hear pronunciation):\"}),/*#__PURE__*/_jsx(\"div\",{className:\"korean-words\",children:letter.commonWords.slice(0,6).map((wordWithTranslation,index)=>{// Split word and translation (format: \"word (translation)\")\nconst match=wordWithTranslation.match(/^(.+?)\\s*\\((.+)\\)$/);if(match){const koreanWord=match[1].trim();const englishTranslation=match[2].trim();return/*#__PURE__*/_jsxs(\"div\",{className:\"korean-word-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"korean-word-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"korean-word-text\",children:koreanWord}),/*#__PURE__*/_jsx(\"button\",{className:\"pronunciation-btn\",onClick:()=>speakKorean(koreanWord),\"aria-label\":\"Pronounce \".concat(koreanWord),title:\"Hear pronunciation of \".concat(koreanWord),children:\"\\uD83D\\uDD0A\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"korean-word-translation\",children:englishTranslation})]},index);}return/*#__PURE__*/_jsx(\"div\",{className:\"korean-word-item\",children:/*#__PURE__*/_jsx(\"span\",{className:\"korean-word\",children:wordWithTranslation})},index);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"practice-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83C\\uDFAF Practice Tip\"}),/*#__PURE__*/_jsx(\"p\",{children:getPracticeTip(letter)})]})]})]});};return/*#__PURE__*/_jsxs(\"div\",{className:\"learn-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Learn the Korean Alphabet\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on any letter to see detailed information and pronunciation guides.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"filter-btn \".concat(filter==='available'?'active':''),onClick:()=>setFilter('available'),children:[\"Available (\",getAvailableLetters().length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"filter-btn \".concat(filter==='locked'?'active':''),onClick:()=>setFilter('locked'),children:[\"Locked (\",getLockedLettersCount(),\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"filter-btn \".concat(filter==='consonants'?'active':''),onClick:()=>setFilter('consonants'),children:[\"Consonants (\",getAvailableLetters().filter(l=>l.category==='consonant').length,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"filter-btn \".concat(filter==='vowels'?'active':''),onClick:()=>setFilter('vowels'),children:[\"Vowels (\",getAvailableLetters().filter(l=>l.category==='vowel').length,\")\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"letters-grid\",children:filteredLetters.map(letter=>/*#__PURE__*/_jsx(LetterCard,{letter:letter},letter.id))}),selectedLetter&&/*#__PURE__*/_jsx(\"div\",{className:\"letter-detail-panel\",children:/*#__PURE__*/_jsx(LetterDetail,{letter:selectedLetter})})]});};export default LearnSection;","map":{"version":3,"names":["React","useState","koreanAlphabet","useProgress","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","pictogramMap","getPictogram","iconName","getVisualDescription","letter","descriptions","name","getPracticeTip","tips","LearnSection","isLetterUnlocked","getAvailableLetters","getLockedLettersCount","selectedLetter","setSelectedLetter","filter","setFilter","speakKorean","text","window","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","voices","getVoices","koreanVoice","find","voice","lang","startsWith","toLowerCase","includes","rate","speak","console","warn","getFilteredLetters","id","category","filteredLetters","LetterCard","_ref","isLetterCompleted","getBestScore","unlocked","completed","bestScore","className","concat","onClick","role","tabIndex","onKeyDown","e","key","preventDefault","children","koreanLetter","pictogram","romanization","englishComparison","difficulty","LetterDetail","_ref2","charAt","toUpperCase","slice","visualAid","strokeOrder","length","map","stroke","index","exampleWords","word","commonWords","wordWithTranslation","match","koreanWord","trim","englishTranslation","title","l"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/LearnSection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { koreanAlphabet } from '../koreanAlphabetData';\nimport { useProgress } from '../context/ProgressContext';\n\n// Pictogram mapping for visual learning\nconst pictogramMap = {\n  'square-angle': '⊏',\n  'line-horizontal': '─',\n  'line-vertical': '│',\n  'line-diagonal': '╲',\n  'square': '□',\n  'circle': '○',\n  'circle-half': '◐',\n  'triangle': '△',\n  'angle-right': '∟',\n  'zap': '⚡',\n  'h-square': '⊏',\n  'bars': '≡',\n  'table': '⊤',\n  'r': '◟',\n  's': 'Ͻ',\n  't': '┬',\n  'y': '◠',\n  'trident': 'Ψ',\n  'omega': 'Ω',\n  'angle': '∠',\n  'plus': '+',\n  'star': '⭐'\n};\n\nconst getPictogram = (iconName) => {\n  return pictogramMap[iconName] || '◇';\n};\n\n// Visual description helper\nconst getVisualDescription = (letter) => {\n  const descriptions = {\n    'Kiyeok': 'a backwards \"L\" with a small horizontal line',\n    'Nieun': 'a simple horizontal line',\n    'Digeut': 'a square bracket facing right',\n    'Rieul': 'two diagonal lines meeting',\n    'Mieum': 'a perfect square',\n    'Bieup': 'a square with a lid on top',\n    'Si-ot': 'two horizontal lines, one above the other',\n    'Ieung': 'a perfect circle',\n    'Jieut': 'a backwards \"C\" with a horizontal line',\n    'Chieut': 'three horizontal lines stacked',\n    'Kieuk': 'ㄱ but with extra breath (aspirated)',\n    'Tieut': 'ㄷ but with extra breath (aspirated)',\n    'Pieup': 'ㅂ but with extra breath (aspirated)',\n    'Hieut': 'two diagonal lines crossing',\n    'A': 'a vertical line with a small horizontal branch to the right',\n    'Ya': 'ㅏ but with an extra horizontal line above',\n    'Eo': 'a horizontal line with a small vertical branch up',\n    'Yeo': 'ㅓ but with an extra horizontal line above',\n    'O': 'a horizontal line with a circle above it',\n    'Yo': 'ㅗ but with an extra horizontal line below',\n    'U': 'a horizontal line with a circle below it',\n    'Yu': 'ㅜ but with an extra horizontal line below',\n    'Eu': 'a single horizontal line',\n    'I': 'a single vertical line'\n  };\n  return descriptions[letter.name] || 'a unique shape to remember';\n};\n\n// Practice tip helper\nconst getPracticeTip = (letter) => {\n  const tips = {\n    'Kiyeok': 'Start at the top and go down, then left - like drawing a backwards L',\n    'Nieun': 'Just one horizontal line - simple and quick',\n    'Digeut': 'Two lines: vertical then horizontal from the top',\n    'Rieul': 'Two diagonal lines meeting at the bottom',\n    'Mieum': 'Four lines forming a square - go clockwise',\n    'Bieup': 'Three lines: start like ㄱ but add a top line',\n    'Si-ot': 'Two parallel horizontal lines',\n    'Ieung': 'One circular motion - smooth and continuous',\n    'Jieut': 'Three strokes: curve, line, then small horizontal',\n    'Chieut': 'Three horizontal lines from top to bottom',\n    'Kieuk': 'Like Kiyeok but pronounce with more breath',\n    'Tieut': 'Like Digeut but pronounce with more breath',\n    'Pieup': 'Like Bieup but pronounce with more breath',\n    'Hieut': 'Two diagonal lines crossing each other',\n    'A': 'Vertical line down, then small branch to the right',\n    'Ya': 'Like ㅏ but add an extra horizontal line above',\n    'Eo': 'Horizontal line right, then small vertical up',\n    'Yeo': 'Like ㅓ but add an extra horizontal line above',\n    'O': 'Horizontal line, then circle above it',\n    'Yo': 'Horizontal line, circle above, then line below',\n    'U': 'Horizontal line, then circle below it',\n    'Yu': 'Horizontal line, circle below, then line below that',\n    'Eu': 'Single horizontal line - the simplest vowel',\n    'I': 'Single vertical line - tall and straight'\n  };\n  return tips[letter.name] || 'Practice the stroke order carefully';\n};\n\nconst LearnSection = () => {\n  const { isLetterUnlocked, getAvailableLetters, getLockedLettersCount } = useProgress();\n  const [selectedLetter, setSelectedLetter] = useState(null);\n  const [filter, setFilter] = useState('available'); // 'all', 'available', 'locked', 'consonants', 'vowels'\n\n  // Function to pronounce Korean words using Web Speech API\n  const speakKorean = (text) => {\n    if ('speechSynthesis' in window) {\n      // Cancel any ongoing speech\n      window.speechSynthesis.cancel();\n\n      const utterance = new SpeechSynthesisUtterance(text);\n\n      // Try to find a Korean voice\n      const voices = window.speechSynthesis.getVoices();\n      const koreanVoice = voices.find(voice =>\n        voice.lang.startsWith('ko') || // Korean\n        voice.name.toLowerCase().includes('korean')\n      );\n\n      if (koreanVoice) {\n        utterance.voice = koreanVoice;\n        utterance.lang = koreanVoice.lang;\n      } else {\n        // Fallback to English with Korean text\n        utterance.lang = 'ko-KR';\n        utterance.rate = 0.8; // Slightly slower for clarity\n      }\n\n      // Speak the text\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.warn('Speech synthesis not supported in this browser');\n    }\n  };\n\n  const getFilteredLetters = () => {\n    switch (filter) {\n      case 'available':\n        return getAvailableLetters();\n      case 'locked':\n        return koreanAlphabet.filter(letter => !isLetterUnlocked(letter.id));\n      case 'consonants':\n        return getAvailableLetters().filter(letter => letter.category === 'consonant');\n      case 'vowels':\n        return getAvailableLetters().filter(letter => letter.category === 'vowel');\n      default:\n        return getAvailableLetters();\n    }\n  };\n\n  const filteredLetters = getFilteredLetters();\n\n  const LetterCard = ({ letter }) => {\n    const { isLetterUnlocked, isLetterCompleted, getBestScore } = useProgress();\n    const unlocked = isLetterUnlocked(letter.id);\n    const completed = isLetterCompleted(letter.id);\n    const bestScore = getBestScore(letter.id);\n\n    return (\n      <div\n        className={`letter-card ${letter.category} ${selectedLetter?.id === letter.id ? 'selected' : ''} ${unlocked ? 'unlocked' : 'locked'}`}\n        onClick={() => unlocked && setSelectedLetter(letter)}\n        role=\"button\"\n        tabIndex={unlocked ? 0 : -1}\n        aria-label={`${letter.name} Korean letter. ${unlocked ? 'Click to view details' : 'Locked - complete previous levels to unlock'}`}\n        aria-pressed={selectedLetter?.id === letter.id}\n        onKeyDown={(e) => {\n          if ((e.key === 'Enter' || e.key === ' ') && unlocked) {\n            e.preventDefault();\n            setSelectedLetter(letter);\n          }\n        }}\n      >\n        <div className=\"letter-display\">\n          <div className=\"letter-main\">\n            <span className={`korean-letter ${unlocked ? '' : 'locked'}`}>{letter.koreanLetter}</span>\n            <span className=\"letter-name\">{letter.name}</span>\n            {!unlocked && <span className=\"lock-icon\">🔒</span>}\n          </div>\n          <div className={`pictogram ${unlocked ? '' : 'locked'}`}>{getPictogram(letter.pictogram)}</div>\n        </div>\n\n        {unlocked ? (\n          <>\n            <div className=\"letter-sound\">\n              <span className=\"sound-text\">/{letter.romanization}/</span>\n            </div>\n            <div className=\"letter-comparison\">\n              <span className=\"comparison-text\">{letter.englishComparison}</span>\n            </div>\n            <div className=\"letter-progress\">\n              {completed && (\n                <div className=\"completion-indicator\">\n                  <span className=\"completion-badge\">✓</span>\n                  <span className=\"best-score\">{bestScore}%</span>\n                </div>\n              )}\n            </div>\n            <div className=\"difficulty-indicator\">\n              <span className={`difficulty-badge difficulty-${letter.difficulty}`}>\n                Level {letter.difficulty}\n              </span>\n            </div>\n          </>\n        ) : (\n          <div className=\"locked-message\">\n            <p>Complete Level {letter.difficulty - 1} letters to unlock</p>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const LetterDetail = ({ letter }) => (\n    <div className=\"letter-detail\">\n      <div className=\"detail-header\">\n        <div className=\"letter-visualization\">\n          <span className=\"detail-korean\">{letter.koreanLetter}</span>\n          <div className=\"pictogram-large\">{getPictogram(letter.pictogram)}</div>\n        </div>\n        <div className=\"detail-info\">\n          <h3>{letter.name}</h3>\n          <p className=\"pronunciation\">Romanization: <strong>{letter.romanization}</strong></p>\n          <div className=\"letter-category\">\n            <span className={`category-badge ${letter.category}`}>\n              {letter.category.charAt(0).toUpperCase() + letter.category.slice(1)}\n            </span>\n            <span className={`difficulty-badge difficulty-${letter.difficulty}`}>\n              Level {letter.difficulty}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"detail-content\">\n        <div className=\"comparison-section\">\n          <h4>🔍 English Comparison</h4>\n          <p>{letter.englishComparison}</p>\n        </div>\n\n        <div className=\"visual-aid-section\">\n          <h4>👁️ Visual Learning Aid</h4>\n          <p>{letter.visualAid}</p>\n          <div className=\"visual-example\">\n            <span className=\"visual-prompt\">Think of it as:</span>\n            <span className=\"visual-description\">{getVisualDescription(letter)}</span>\n          </div>\n        </div>\n\n        {letter.strokeOrder && (\n          <div className=\"stroke-order-section\">\n            <h4>✏️ Stroke Order</h4>\n            <p className=\"stroke-count\">Number of strokes: {letter.strokeOrder.length}</p>\n            <div className=\"stroke-order\">\n              {letter.strokeOrder.map((stroke, index) => (\n                <span key={index} className=\"stroke-number\">{stroke}</span>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div className=\"examples-section\">\n          <h4>📝 Example Words (English)</h4>\n          <p className=\"examples-subtitle\">Words that start with similar sounds:</p>\n          <div className=\"example-words\">\n            {letter.exampleWords.map((word, index) => (\n              <span key={index} className=\"example-word\">{word}</span>\n            ))}\n          </div>\n        </div>\n\n        {letter.commonWords.length > 0 && (\n          <div className=\"korean-words-section\">\n            <h4>🇰🇷 Korean Examples</h4>\n            <p className=\"korean-subtitle\">Common Korean words starting with this letter (click to hear pronunciation):</p>\n            <div className=\"korean-words\">\n              {letter.commonWords.slice(0, 6).map((wordWithTranslation, index) => {\n                // Split word and translation (format: \"word (translation)\")\n                const match = wordWithTranslation.match(/^(.+?)\\s*\\((.+)\\)$/);\n                if (match) {\n                  const koreanWord = match[1].trim();\n                  const englishTranslation = match[2].trim();\n                  return (\n                    <div key={index} className=\"korean-word-item\">\n                      <div className=\"korean-word-container\">\n                        <span className=\"korean-word-text\">{koreanWord}</span>\n                        <button\n                          className=\"pronunciation-btn\"\n                          onClick={() => speakKorean(koreanWord)}\n                          aria-label={`Pronounce ${koreanWord}`}\n                          title={`Hear pronunciation of ${koreanWord}`}\n                        >\n                          🔊\n                        </button>\n                      </div>\n                      <span className=\"korean-word-translation\">{englishTranslation}</span>\n                    </div>\n                  );\n                }\n                return (\n                  <div key={index} className=\"korean-word-item\">\n                    <span className=\"korean-word\">{wordWithTranslation}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n        <div className=\"practice-section\">\n          <h4>🎯 Practice Tip</h4>\n          <p>{getPracticeTip(letter)}</p>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"learn-section\">\n      <div className=\"section-header\">\n        <h2>Learn the Korean Alphabet</h2>\n        <p>Click on any letter to see detailed information and pronunciation guides.</p>\n      </div>\n\n      <div className=\"filter-buttons\">\n        <button\n          className={`filter-btn ${filter === 'available' ? 'active' : ''}`}\n          onClick={() => setFilter('available')}\n        >\n          Available ({getAvailableLetters().length})\n        </button>\n        <button\n          className={`filter-btn ${filter === 'locked' ? 'active' : ''}`}\n          onClick={() => setFilter('locked')}\n        >\n          Locked ({getLockedLettersCount()})\n        </button>\n        <button\n          className={`filter-btn ${filter === 'consonants' ? 'active' : ''}`}\n          onClick={() => setFilter('consonants')}\n        >\n          Consonants ({getAvailableLetters().filter(l => l.category === 'consonant').length})\n        </button>\n        <button\n          className={`filter-btn ${filter === 'vowels' ? 'active' : ''}`}\n          onClick={() => setFilter('vowels')}\n        >\n          Vowels ({getAvailableLetters().filter(l => l.category === 'vowel').length})\n        </button>\n      </div>\n\n      <div className=\"letters-grid\">\n        {filteredLetters.map(letter => (\n          <LetterCard key={letter.id} letter={letter} />\n        ))}\n      </div>\n\n      {selectedLetter && (\n        <div className=\"letter-detail-panel\">\n          <LetterDetail letter={selectedLetter} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LearnSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}