{"ast":null,"code":"import React from'react';import{useProgress}from'../context/ProgressContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProgressSection=()=>{const{userProgress,getUnlockedAchievements,getLockedAchievements,getExerciseStats,getProgressMetrics,getAvailableLetters,isLetterCompleted,getBestScore,resetAllProgress}=useProgress();// Generate exercise recommendations based on progress\nconst getExerciseRecommendations=()=>{const availableLetters=getAvailableLetters();const currentLevel=Math.max(...availableLetters.map(letter=>letter.difficulty),1);const levelLetters=availableLetters.filter(letter=>letter.difficulty===currentLevel);const recommendations=[];// Recommend practicing incomplete letters\nconst incompleteLetters=levelLetters.filter(letter=>!isLetterCompleted(letter.id));if(incompleteLetters.length>0){recommendations.push({icon:'🎯',title:'Complete Current Level',description:\"Practice \".concat(incompleteLetters.length,\" remaining Level \").concat(currentLevel,\" letters\"),reason:\"Finish \".concat(incompleteLetters.map(l=>l.name).join(', '),\" to unlock Level \").concat(currentLevel+1)});}// Recommend specific exercise types based on performance\nconst avgScore=getProgressMetrics().averageScore;if(avgScore<70){recommendations.push({icon:'📝',title:'Build Strong Foundations',description:'Focus on Multiple Choice and Letter Matching exercises',reason:'Strengthen your basics before advancing to harder content'});}else if(avgScore>85){recommendations.push({icon:'⚡',title:'Challenge Yourself',description:'Try Sound Association and Word Association exercises',reason:'You\\'re ready for more advanced pronunciation practice'});}// Recommend streak building\nif(userProgress.streakCount<5){recommendations.push({icon:'🔥',title:'Build Your Streak',description:'Practice daily to build momentum',reason:'Consistent practice leads to better retention and unlocks streak achievements'});}return recommendations.slice(0,3);// Limit to 3 recommendations\n};const progress=getProgressMetrics();const unlockedAchievements=getUnlockedAchievements();const lockedAchievements=getLockedAchievements();const stats=getExerciseStats();return/*#__PURE__*/_jsxs(\"div\",{className:\"progress-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Your Progress\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Track your learning journey and celebrate your achievements!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"reset-progress-btn\",onClick:()=>{if(window.confirm('Are you sure you want to reset all progress? This cannot be undone.')){resetAllProgress();}},children:\"\\uD83D\\uDD04 Reset Progress (Testing)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"reset-note\",children:\"\\u26A0\\uFE0F This will clear all saved progress data\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card primary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:\"\\uD83D\\uDCDA\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[progress.completedLetters,\"/24\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Letters Mastered\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card secondary\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:\"\\u2B50\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:progress.totalScore.toLocaleString()}),/*#__PURE__*/_jsx(\"p\",{children:\"Total Points\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card accent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:\"\\uD83D\\uDD25\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:userProgress.streakCount}),/*#__PURE__*/_jsx(\"p\",{children:\"Day Streak\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card success\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[progress.averageScore,\"%\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Average Score\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-overview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"overview-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overview-label\",children:\"Current Level\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-value level-{progress.currentLevel}\",children:[\"Level \",progress.currentLevel]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overview-label\",children:\"Unlocked Letters\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-value\",children:[progress.unlockedLetters,\"/24\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overview-label\",children:\"Study Time\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-value\",children:[Math.round(stats.studyTimeMinutes),\"min\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"progress-chart\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Alphabet Progress\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-circle\",children:[/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 100 100\",className:\"circular-progress\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"50\",cy:\"50\",r:\"45\",fill:\"none\",stroke:\"#e2e8f0\",strokeWidth:\"8\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"50\",cy:\"50\",r:\"45\",fill:\"none\",stroke:\"#3b82f6\",strokeWidth:\"8\",strokeDasharray:\"\".concat(2*Math.PI*45),strokeDashoffset:\"\".concat(2*Math.PI*45*(1-progress.completionProgress/100)),transform:\"rotate(-90 50 50)\",className:\"progress-ring\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"progress-percentage\",children:[progress.completionProgress,\"%\"]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"detailed-stats\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Exercise Statistics\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Questions Answered\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stats.totalQuestions})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Correct Answers\"}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-value\",children:stats.correctAnswers})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Accuracy Rate\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[stats.totalQuestions>0?Math.round(stats.correctAnswers/stats.totalQuestions*100):0,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Best Streak\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-value\",children:[stats.bestStreak,\" days\"]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"progress-goals\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFAF Next Level Progress\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"level-progress\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"current-level\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Current Level: \",progress.currentLevel]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Master Level \",progress.currentLevel,\" letters to unlock Level \",progress.currentLevel+1]}),progress.currentLevel<4&&/*#__PURE__*/_jsxs(\"div\",{className:\"unlock-requirements\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[\"Requirements for Level \",progress.currentLevel+1,\":\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"requirements-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"requirement\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"req-icon\",children:\"\\uD83D\\uDCDA\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Complete all Level \",progress.currentLevel,\" letters\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"requirement\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"req-icon\",children:\"\\u2B50\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Maintain \",'>',\"70% average score\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"requirement\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"req-icon\",children:\"\\uD83C\\uDFAF\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Practice regularly for consistent progress\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"level-letters\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Level \",progress.currentLevel,\" Letters (\",getAvailableLetters().length,\" available)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"letters-status\",children:getAvailableLetters().filter(letter=>letter.difficulty===progress.currentLevel).map(letter=>{const completed=isLetterCompleted(letter.id);const bestScore=getBestScore(letter.id);return/*#__PURE__*/_jsxs(\"div\",{className:\"letter-status \".concat(completed?'completed':'in-progress'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"letter-symbol\",children:letter.koreanLetter}),/*#__PURE__*/_jsxs(\"div\",{className:\"letter-progress\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"letter-name\",children:letter.name}),completed?/*#__PURE__*/_jsxs(\"span\",{className:\"completion-score\",children:[\"\\u2713 \",bestScore,\"%\"]}):/*#__PURE__*/_jsx(\"span\",{className:\"practice-needed\",children:\"Needs Practice\"})]})]},letter.id);})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"exercise-recommendations\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDF93 Recommended Exercises\"}),/*#__PURE__*/_jsx(\"div\",{className:\"recommendations\",children:getExerciseRecommendations().map((rec,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"rec-icon\",children:rec.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"rec-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:rec.title}),/*#__PURE__*/_jsx(\"p\",{children:rec.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"rec-reason\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Why:\"}),\" \",rec.reason]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"rec-action\",onClick:()=>window.location.hash='practice',children:\"Start Exercise\"})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"achievements\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Achievements\"}),/*#__PURE__*/_jsx(\"div\",{className:\"achievements-summary\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"achievement-count\",children:[unlockedAchievements.length,\" of 8 unlocked\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"achievements-list\",children:[unlockedAchievements.map(achievement=>/*#__PURE__*/_jsxs(\"div\",{className:\"achievement unlocked\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"achievement-icon\",children:achievement.icon}),/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:achievement.name}),/*#__PURE__*/_jsx(\"p\",{children:achievement.description}),/*#__PURE__*/_jsxs(\"span\",{className:\"achievement-reward\",children:[\"Reward: \",achievement.reward]})]}),/*#__PURE__*/_jsx(\"span\",{className:\"achievement-date\",children:new Date(achievement.unlockedAt).toLocaleDateString()})]},achievement.id)),lockedAchievements.slice(0,3).map(achievement=>/*#__PURE__*/_jsxs(\"div\",{className:\"achievement locked\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"achievement-icon locked\",children:\"\\uD83D\\uDD12\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"achievement-content\",children:[/*#__PURE__*/_jsx(\"h4\",{children:achievement.name}),/*#__PURE__*/_jsx(\"p\",{children:achievement.description}),/*#__PURE__*/_jsxs(\"span\",{className:\"achievement-reward\",children:[\"Reward: \",achievement.reward]})]})]},achievement.id))]})]})]})]});};export default ProgressSection;","map":{"version":3,"names":["React","useProgress","jsx","_jsx","jsxs","_jsxs","ProgressSection","userProgress","getUnlockedAchievements","getLockedAchievements","getExerciseStats","getProgressMetrics","getAvailableLetters","isLetterCompleted","getBestScore","resetAllProgress","getExerciseRecommendations","availableLetters","currentLevel","Math","max","map","letter","difficulty","levelLetters","filter","recommendations","incompleteLetters","id","length","push","icon","title","description","concat","reason","l","name","join","avgScore","averageScore","streakCount","slice","progress","unlockedAchievements","lockedAchievements","stats","className","children","onClick","window","confirm","completedLetters","totalScore","toLocaleString","unlockedLetters","round","studyTimeMinutes","viewBox","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","PI","strokeDashoffset","completionProgress","transform","totalQuestions","correctAnswers","bestStreak","completed","bestScore","koreanLetter","rec","index","location","hash","achievement","reward","Date","unlockedAt","toLocaleDateString"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/ProgressSection.js"],"sourcesContent":["import React from 'react';\nimport { useProgress } from '../context/ProgressContext';\n\nconst ProgressSection = () => {\n  const {\n    userProgress,\n    getUnlockedAchievements,\n    getLockedAchievements,\n    getExerciseStats,\n    getProgressMetrics,\n    getAvailableLetters,\n    isLetterCompleted,\n    getBestScore,\n    resetAllProgress\n  } = useProgress();\n\n  // Generate exercise recommendations based on progress\n  const getExerciseRecommendations = () => {\n    const availableLetters = getAvailableLetters();\n    const currentLevel = Math.max(...availableLetters.map(letter => letter.difficulty), 1);\n    const levelLetters = availableLetters.filter(letter => letter.difficulty === currentLevel);\n\n    const recommendations = [];\n\n    // Recommend practicing incomplete letters\n    const incompleteLetters = levelLetters.filter(letter => !isLetterCompleted(letter.id));\n    if (incompleteLetters.length > 0) {\n      recommendations.push({\n        icon: '🎯',\n        title: 'Complete Current Level',\n        description: `Practice ${incompleteLetters.length} remaining Level ${currentLevel} letters`,\n        reason: `Finish ${incompleteLetters.map(l => l.name).join(', ')} to unlock Level ${currentLevel + 1}`\n      });\n    }\n\n    // Recommend specific exercise types based on performance\n    const avgScore = getProgressMetrics().averageScore;\n    if (avgScore < 70) {\n      recommendations.push({\n        icon: '📝',\n        title: 'Build Strong Foundations',\n        description: 'Focus on Multiple Choice and Letter Matching exercises',\n        reason: 'Strengthen your basics before advancing to harder content'\n      });\n    } else if (avgScore > 85) {\n      recommendations.push({\n        icon: '⚡',\n        title: 'Challenge Yourself',\n        description: 'Try Sound Association and Word Association exercises',\n        reason: 'You\\'re ready for more advanced pronunciation practice'\n      });\n    }\n\n    // Recommend streak building\n    if (userProgress.streakCount < 5) {\n      recommendations.push({\n        icon: '🔥',\n        title: 'Build Your Streak',\n        description: 'Practice daily to build momentum',\n        reason: 'Consistent practice leads to better retention and unlocks streak achievements'\n      });\n    }\n\n    return recommendations.slice(0, 3); // Limit to 3 recommendations\n  };\n\n  const progress = getProgressMetrics();\n  const unlockedAchievements = getUnlockedAchievements();\n  const lockedAchievements = getLockedAchievements();\n  const stats = getExerciseStats();\n\n  return (\n    <div className=\"progress-section\">\n      <div className=\"section-header\">\n        <h2>Your Progress</h2>\n        <p>Track your learning journey and celebrate your achievements!</p>\n\n        <div className=\"progress-controls\">\n          <button\n            className=\"reset-progress-btn\"\n            onClick={() => {\n              if (window.confirm('Are you sure you want to reset all progress? This cannot be undone.')) {\n                resetAllProgress();\n              }\n            }}\n          >\n            🔄 Reset Progress (Testing)\n          </button>\n          <p className=\"reset-note\">⚠️ This will clear all saved progress data</p>\n        </div>\n      </div>\n\n      <div className=\"progress-stats\">\n        <div className=\"stat-card primary\">\n          <div className=\"stat-icon\">📚</div>\n          <div className=\"stat-content\">\n            <h3>{progress.completedLetters}/24</h3>\n            <p>Letters Mastered</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card secondary\">\n          <div className=\"stat-icon\">⭐</div>\n          <div className=\"stat-content\">\n            <h3>{progress.totalScore.toLocaleString()}</h3>\n            <p>Total Points</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card accent\">\n          <div className=\"stat-icon\">🔥</div>\n          <div className=\"stat-content\">\n            <h3>{userProgress.streakCount}</h3>\n            <p>Day Streak</p>\n          </div>\n        </div>\n\n        <div className=\"stat-card success\">\n          <div className=\"stat-icon\">📊</div>\n          <div className=\"stat-content\">\n            <h3>{progress.averageScore}%</h3>\n            <p>Average Score</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"progress-overview\">\n        <div className=\"overview-item\">\n          <div className=\"overview-label\">Current Level</div>\n          <div className=\"overview-value level-{progress.currentLevel}\">\n            Level {progress.currentLevel}\n          </div>\n        </div>\n        <div className=\"overview-item\">\n          <div className=\"overview-label\">Unlocked Letters</div>\n          <div className=\"overview-value\">{progress.unlockedLetters}/24</div>\n        </div>\n        <div className=\"overview-item\">\n          <div className=\"overview-label\">Study Time</div>\n          <div className=\"overview-value\">{Math.round(stats.studyTimeMinutes)}min</div>\n        </div>\n      </div>\n\n      <div className=\"progress-details\">\n        <div className=\"progress-chart\">\n          <h3>Alphabet Progress</h3>\n          <div className=\"chart-container\">\n            <div className=\"progress-circle\">\n              <svg viewBox=\"0 0 100 100\" className=\"circular-progress\">\n                <circle\n                  cx=\"50\"\n                  cy=\"50\"\n                  r=\"45\"\n                  fill=\"none\"\n                  stroke=\"#e2e8f0\"\n                  strokeWidth=\"8\"\n                />\n                <circle\n                  cx=\"50\"\n                  cy=\"50\"\n                  r=\"45\"\n                  fill=\"none\"\n                  stroke=\"#3b82f6\"\n                  strokeWidth=\"8\"\n                  strokeDasharray={`${2 * Math.PI * 45}`}\n                  strokeDashoffset={`${2 * Math.PI * 45 * (1 - progress.completionProgress / 100)}`}\n                  transform=\"rotate(-90 50 50)\"\n                  className=\"progress-ring\"\n                />\n              </svg>\n              <span className=\"progress-percentage\">\n                {progress.completionProgress}%\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"detailed-stats\">\n          <h3>Exercise Statistics</h3>\n          <div className=\"stats-grid\">\n            <div className=\"stat-item\">\n              <span className=\"stat-label\">Questions Answered</span>\n              <span className=\"stat-value\">{stats.totalQuestions}</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-label\">Correct Answers</span>\n              <span className=\"stat-value\">{stats.correctAnswers}</span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-label\">Accuracy Rate</span>\n              <span className=\"stat-value\">\n                {stats.totalQuestions > 0 ? Math.round((stats.correctAnswers / stats.totalQuestions) * 100) : 0}%\n              </span>\n            </div>\n            <div className=\"stat-item\">\n              <span className=\"stat-label\">Best Streak</span>\n              <span className=\"stat-value\">{stats.bestStreak} days</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"progress-goals\">\n          <h3>🎯 Next Level Progress</h3>\n          <div className=\"level-progress\">\n            <div className=\"current-level\">\n              <h4>Current Level: {progress.currentLevel}</h4>\n              <p>Master Level {progress.currentLevel} letters to unlock Level {progress.currentLevel + 1}</p>\n\n              {progress.currentLevel < 4 && (\n                <div className=\"unlock-requirements\">\n                  <h5>Requirements for Level {progress.currentLevel + 1}:</h5>\n                  <div className=\"requirements-list\">\n                    <div className=\"requirement\">\n                      <span className=\"req-icon\">📚</span>\n                      <span>Complete all Level {progress.currentLevel} letters</span>\n                    </div>\n                    <div className=\"requirement\">\n                      <span className=\"req-icon\">⭐</span>\n                      <span>Maintain {'>'}70% average score</span>\n                    </div>\n                    <div className=\"requirement\">\n                      <span className=\"req-icon\">🎯</span>\n                      <span>Practice regularly for consistent progress</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"level-letters\">\n              <h4>Level {progress.currentLevel} Letters ({getAvailableLetters().length} available)</h4>\n              <div className=\"letters-status\">\n                {getAvailableLetters()\n                  .filter(letter => letter.difficulty === progress.currentLevel)\n                  .map(letter => {\n                    const completed = isLetterCompleted(letter.id);\n                    const bestScore = getBestScore(letter.id);\n                    return (\n                      <div key={letter.id} className={`letter-status ${completed ? 'completed' : 'in-progress'}`}>\n                        <span className=\"letter-symbol\">{letter.koreanLetter}</span>\n                        <div className=\"letter-progress\">\n                          <span className=\"letter-name\">{letter.name}</span>\n                          {completed ? (\n                            <span className=\"completion-score\">✓ {bestScore}%</span>\n                          ) : (\n                            <span className=\"practice-needed\">Needs Practice</span>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"exercise-recommendations\">\n          <h3>🎓 Recommended Exercises</h3>\n          <div className=\"recommendations\">\n            {getExerciseRecommendations().map((rec, index) => (\n              <div key={index} className=\"recommendation-card\">\n                <div className=\"rec-icon\">{rec.icon}</div>\n                <div className=\"rec-content\">\n                  <h4>{rec.title}</h4>\n                  <p>{rec.description}</p>\n                  <div className=\"rec-reason\">\n                    <strong>Why:</strong> {rec.reason}\n                  </div>\n                </div>\n                <button className=\"rec-action\" onClick={() => window.location.hash = 'practice'}>\n                  Start Exercise\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"achievements\">\n          <h3>Achievements</h3>\n          <div className=\"achievements-summary\">\n            <span className=\"achievement-count\">\n              {unlockedAchievements.length} of 8 unlocked\n            </span>\n          </div>\n\n          <div className=\"achievements-list\">\n            {unlockedAchievements.map(achievement => (\n              <div key={achievement.id} className=\"achievement unlocked\">\n                <span className=\"achievement-icon\">{achievement.icon}</span>\n                <div className=\"achievement-content\">\n                  <h4>{achievement.name}</h4>\n                  <p>{achievement.description}</p>\n                  <span className=\"achievement-reward\">Reward: {achievement.reward}</span>\n                </div>\n                <span className=\"achievement-date\">\n                  {new Date(achievement.unlockedAt).toLocaleDateString()}\n                </span>\n              </div>\n            ))}\n\n            {lockedAchievements.slice(0, 3).map(achievement => (\n              <div key={achievement.id} className=\"achievement locked\">\n                <span className=\"achievement-icon locked\">🔒</span>\n                <div className=\"achievement-content\">\n                  <h4>{achievement.name}</h4>\n                  <p>{achievement.description}</p>\n                  <span className=\"achievement-reward\">Reward: {achievement.reward}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}