{"ast":null,"code":"var _jsxFileName = \"/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { exampleWords, koreanConsonants, koreanVowels } from '../koreanAlphabetData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordBuilderSection = () => {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currentStage, setCurrentStage] = useState(1); // 1: jamo, 2: syllables, 3: word\n  const [selectedJamo, setSelectedJamo] = useState({\n    consonants: [],\n    vowels: []\n  });\n  const [builtSyllables, setBuiltSyllables] = useState([]);\n  const [userWord, setUserWord] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [currentHint, setCurrentHint] = useState('');\n  const selectWord = useCallback(word => {\n    setSelectedWord(word);\n    setCurrentStage(1);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n  const getRequiredJamo = useCallback(() => {\n    if (!selectedWord) return {\n      consonants: [],\n      vowels: []\n    };\n    const required = {\n      consonants: [],\n      vowels: []\n    };\n    selectedWord.syllables.forEach(syllable => {\n      if (syllable.consonant) {\n        const consonant = koreanConsonants.find(c => c.koreanLetter === syllable.consonant);\n        if (consonant && !required.consonants.find(c => c.id === consonant.id)) {\n          required.consonants.push(consonant);\n        }\n      }\n      if (syllable.vowel) {\n        const vowel = koreanVowels.find(v => v.koreanLetter === syllable.vowel);\n        if (vowel && !required.vowels.find(v => v.id === vowel.id)) {\n          required.vowels.push(vowel);\n        }\n      }\n      if (syllable.final) {\n        const finalConsonant = koreanConsonants.find(c => c.koreanLetter === syllable.final);\n        if (finalConsonant && !required.consonants.find(c => c.id === finalConsonant.id)) {\n          required.consonants.push(finalConsonant);\n        }\n      }\n    });\n    return required;\n  }, [selectedWord]);\n  const getHints = useCallback(() => {\n    if (!selectedWord) return [];\n    const hints = [];\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const missingConsonants = required.consonants.filter(reqC => !selectedJamo.consonants.some(selC => selC.id === reqC.id));\n      const missingVowels = required.vowels.filter(reqV => !selectedJamo.vowels.some(selV => selV.id === reqV.id));\n      if (missingConsonants.length > 0) {\n        hints.push(`Select the consonant: ${missingConsonants[0].koreanLetter} (${missingConsonants[0].name})`);\n      } else if (missingVowels.length > 0) {\n        hints.push(`Select the vowel: ${missingVowels[0].koreanLetter} (${missingVowels[0].name})`);\n      } else {\n        hints.push(\"Great! You've selected all required letters. Click 'Next' to build syllables.\");\n      }\n    }\n    if (currentStage === 2) {\n      const currentSyllableIndex = builtSyllables.length;\n      if (currentSyllableIndex < selectedWord.syllables.length) {\n        const targetSyllable = selectedWord.syllables[currentSyllableIndex];\n        if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length === 0) {\n          hints.push(`Select ${targetSyllable.consonant} and ${targetSyllable.vowel} to build \"${targetSyllable.syllable}\"`);\n        } else if (selectedJamo.consonants.length > 0 && selectedJamo.vowels.length === 0) {\n          hints.push(`Now select ${targetSyllable.vowel} and click \"Build Syllable\"`);\n        } else if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length > 0) {\n          hints.push(`Select ${targetSyllable.consonant} and click \"Build Syllable\"`);\n        } else {\n          hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\"`);\n        }\n      }\n    }\n    if (currentStage === 3) {\n      if (userWord.length < selectedWord.syllables.length) {\n        const nextSyllable = selectedWord.syllables[userWord.length];\n        const availableSyllable = builtSyllables.find(bs => bs.syllable === nextSyllable.syllable);\n        if (availableSyllable) {\n          hints.push(`Drag \"${availableSyllable.syllable}\" to the next empty slot`);\n        } else {\n          hints.push(`Build \"${nextSyllable.syllable}\" first in Stage 2`);\n        }\n      } else {\n        hints.push(`Click \"Check Word\" to verify your word construction`);\n      }\n    }\n    return hints;\n  }, [selectedWord, currentStage, selectedJamo, builtSyllables, userWord, getRequiredJamo]);\n  const showHintForCurrentStage = useCallback(() => {\n    const hints = getHints();\n    if (hints.length > 0) {\n      setCurrentHint(hints[0]);\n      setShowHint(true);\n    }\n  }, [getHints]);\n  const handleJamoSelection = useCallback((jamo, type) => {\n    if (type === 'consonant') {\n      setSelectedJamo(prev => ({\n        ...prev,\n        consonants: prev.consonants.includes(jamo) ? prev.consonants.filter(c => c.id !== jamo.id) : [...prev.consonants, jamo]\n      }));\n    } else {\n      setSelectedJamo(prev => ({\n        ...prev,\n        vowels: prev.vowels.includes(jamo) ? prev.vowels.filter(v => v.id !== jamo.id) : [...prev.vowels, jamo]\n      }));\n    }\n  }, []);\n  const canBuildSyllable = useCallback(() => {\n    return selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1;\n  }, [selectedJamo]);\n  const buildSyllable = useCallback(() => {\n    if (!canBuildSyllable()) return;\n    const consonant = selectedJamo.consonants[0];\n    const vowel = selectedJamo.vowels[0];\n\n    // For now, create simple CV syllables. Later we can enhance for CVC\n    const syllableText = consonant.koreanLetter + vowel.koreanLetter;\n\n    // Find the matching syllable in the target word to get complete structure\n    const targetSyllable = selectedWord.syllables.find(ts => ts.consonant === consonant.koreanLetter && ts.vowel === vowel.koreanLetter);\n    const newSyllable = {\n      syllable: targetSyllable ? targetSyllable.syllable : syllableText,\n      consonant: consonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: targetSyllable ? targetSyllable.final : null,\n      structure: targetSyllable ? targetSyllable.structure : 'CV',\n      completed: true\n    };\n    setBuiltSyllables(prev => [...prev, newSyllable]);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n  }, [canBuildSyllable, selectedJamo, selectedWord]);\n  const handleSyllableDrop = useCallback(syllable => {\n    if (userWord.length >= selectedWord.syllables.length) return;\n    if (userWord.some(userSyl => userSyl.syllable === syllable.syllable)) return;\n    setUserWord(prev => [...prev, syllable]);\n  }, [selectedWord, userWord]);\n  const removeSyllable = useCallback(index => {\n    setUserWord(prev => prev.filter((_, i) => i !== index));\n  }, []);\n  const checkStageCompletion = useCallback(() => {\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const hasAllConsonants = required.consonants.every(reqC => selectedJamo.consonants.some(selC => selC.id === reqC.id));\n      const hasAllVowels = required.vowels.every(reqV => selectedJamo.vowels.some(selV => selV.id === reqV.id));\n      return hasAllConsonants && hasAllVowels;\n    }\n    if (currentStage === 2) {\n      return builtSyllables.length === selectedWord.syllables.length && builtSyllables.every(bs => bs.completed);\n    }\n    if (currentStage === 3) {\n      if (userWord.length !== selectedWord.syllables.length) return false;\n      return userWord.every((userSyl, index) => userSyl.syllable === selectedWord.syllables[index].syllable);\n    }\n    return false;\n  }, [currentStage, selectedJamo, builtSyllables, userWord, selectedWord, getRequiredJamo]);\n  const advanceToNextStage = useCallback(() => {\n    if (currentStage < 3) {\n      setCurrentStage(prev => prev + 1);\n      setShowHint(false);\n    }\n  }, [currentStage]);\n  const resetExercise = useCallback(() => {\n    setCurrentStage(1);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n  const getJamoButtonClass = (jamo, type) => {\n    const isSelected = type === 'consonant' ? selectedJamo.consonants.some(c => c.id === jamo.id) : selectedJamo.vowels.some(v => v.id === jamo.id);\n    return `jamo-btn ${isSelected ? 'selected' : 'available'}`;\n  };\n  const getSyllableButtonClass = syllable => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n  if (!selectedWord) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Progressive Word Builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn Korean writing step by step: from individual letters to complete words.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a word to build:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-cards\",\n          children: exampleWords.map(word => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"word-card\",\n            onClick: () => selectWord(word),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-korean\",\n              children: word.korean\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-romanization\",\n              children: word.romanization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-english\",\n              children: [\"\\\"\", word.english, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-count\",\n              children: [word.syllables.length, \" syllables\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this);\n  }\n  const requiredJamo = getRequiredJamo();\n  const stageHints = getHints();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-builder-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"\\u2190 Back to Word Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Build: \", selectedWord.english]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"target-word\",\n            children: selectedWord.korean\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"romanization\",\n            children: [\"(\", selectedWord.romanization, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 1 ? 'active' : ''} ${currentStage > 1 ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Jamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 2 ? 'active' : ''} ${currentStage > 2 ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Syllables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 3 ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-container\",\n      children: [currentStage === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 1: Select Required Letters (Jamo)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose all the consonants and vowels needed to build this word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jamo-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Required Consonants:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-grid\",\n              children: requiredJamo.consonants.map(consonant => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getJamoButtonClass(consonant, 'consonant'),\n                onClick: () => handleJamoSelection(consonant, 'consonant'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: consonant.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: consonant.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-sound\",\n                  children: [\"(\", consonant.romanization, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this)]\n              }, consonant.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Required Vowels:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-grid\",\n              children: requiredJamo.vowels.map(vowel => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getJamoButtonClass(vowel, 'vowel'),\n                onClick: () => handleJamoSelection(vowel, 'vowel'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: vowel.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: vowel.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-sound\",\n                  children: [\"(\", vowel.romanization, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this)]\n              }, vowel.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            disabled: stageHints.length === 0,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-stage-btn\",\n            onClick: advanceToNextStage,\n            disabled: !checkStageCompletion(),\n            children: \"Next: Build Syllables \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), currentStage === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 2: Build Syllable Blocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Combine consonants and vowels to create syllable blocks.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"syllable-building\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-workspace\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Selected Letters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-jamo\",\n              children: [selectedJamo.consonants.map(c => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-jamo-item consonant\",\n                children: c.koreanLetter\n              }, c.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this)), selectedJamo.vowels.map(v => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-jamo-item vowel\",\n                children: v.koreanLetter\n              }, v.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"build-syllable-btn\",\n              onClick: buildSyllable,\n              disabled: !canBuildSyllable(),\n              children: \"Build Syllable \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"built-syllables\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Built Syllables:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllables-display\",\n              children: builtSyllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"built-syllable\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"syllable-text\",\n                  children: syllable.syllable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-components\",\n                  children: [syllable.consonant, \" + \", syllable.vowel, syllable.final && ` + ${syllable.final}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-structure\",\n                  children: syllable.structure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-stage-btn\",\n            onClick: () => setCurrentStage(1),\n            children: \"\\u2190 Back to Jamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-stage-btn\",\n            onClick: advanceToNextStage,\n            disabled: !checkStageCompletion(),\n            children: \"Next: Build Word \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), currentStage === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 3: Build the Complete Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Arrange the syllable blocks to form the complete word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-building\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"target-word-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Word Structure:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-slots\",\n              children: selectedWord.syllables.map((targetSyllable, index) => {\n                const isCorrect = userWord[index] && userWord[index].syllable === targetSyllable.syllable;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `word-slot ${isCorrect ? 'correct' : ''}`,\n                  children: userWord[index] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `syllable-in-word ${isCorrect ? 'correct' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"syllable-text\",\n                      children: userWord[index].syllable\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"remove-syllable\",\n                      onClick: () => removeSyllable(index),\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 452,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"empty-word-slot\",\n                    children: \"Drop syllable here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), userWord.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-word\",\n              children: [\"Current: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"current-word-display\",\n                children: userWord.map(s => s.syllable).join('')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this), checkStageCompletion() && currentStage === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success-message\",\n              children: [\"\\uD83C\\uDF89 Congratulations! You successfully built \\\"\", selectedWord.korean, \"\\\" (\", selectedWord.english, \")!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available-syllables\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Available Syllables:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllables-pool\",\n              children: builtSyllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getSyllableButtonClass(syllable),\n                draggable: !userWord.some(userSyl => userSyl.syllable === syllable.syllable),\n                onDragStart: e => {\n                  e.dataTransfer.setData('text/plain', syllable.syllable);\n                },\n                onClick: () => handleSyllableDrop(syllable),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"syllable-display\",\n                  children: syllable.syllable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-stage-btn\",\n            onClick: () => setCurrentStage(2),\n            children: \"\\u2190 Back to Syllables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"check-word-btn\",\n            onClick: () => {\n              if (checkStageCompletion()) {\n                setShowHint(false);\n                setCurrentHint(`Perfect! You successfully built \"${selectedWord.korean}\" (${selectedWord.english})!`);\n                setShowHint(true);\n              } else {\n                setShowHint(false);\n                setCurrentHint(`Almost there! Make sure \"${selectedWord.syllables[userWord.length].syllable}\" is in the correct position.`);\n                setShowHint(true);\n              }\n            },\n            children: \"Check Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: resetExercise,\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-word-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"Try Another Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hint-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hint-icon\",\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-hint\",\n            onClick: () => setShowHint(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n_s(WordBuilderSection, \"I16eSpEKyAQm5si9JFq8htCv5Yw=\");\n_c = WordBuilderSection;\nexport default WordBuilderSection;\nvar _c;\n$RefreshReg$(_c, \"WordBuilderSection\");","map":{"version":3,"names":["React","useState","useCallback","exampleWords","koreanConsonants","koreanVowels","jsxDEV","_jsxDEV","WordBuilderSection","_s","selectedWord","setSelectedWord","currentStage","setCurrentStage","selectedJamo","setSelectedJamo","consonants","vowels","builtSyllables","setBuiltSyllables","userWord","setUserWord","showHint","setShowHint","currentHint","setCurrentHint","selectWord","word","getRequiredJamo","required","syllables","forEach","syllable","consonant","find","c","koreanLetter","id","push","vowel","v","final","finalConsonant","getHints","hints","missingConsonants","filter","reqC","some","selC","missingVowels","reqV","selV","length","name","currentSyllableIndex","targetSyllable","nextSyllable","availableSyllable","bs","showHintForCurrentStage","handleJamoSelection","jamo","type","prev","includes","canBuildSyllable","buildSyllable","syllableText","ts","newSyllable","structure","completed","handleSyllableDrop","userSyl","removeSyllable","index","_","i","checkStageCompletion","hasAllConsonants","every","hasAllVowels","advanceToNextStage","resetExercise","getJamoButtonClass","isSelected","getSyllableButtonClass","isUsed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","korean","romanization","english","requiredJamo","stageHints","disabled","isCorrect","s","join","draggable","onDragStart","e","dataTransfer","setData","_c","$RefreshReg$"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { exampleWords, koreanConsonants, koreanVowels } from '../koreanAlphabetData';\n\nconst WordBuilderSection = () => {\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currentStage, setCurrentStage] = useState(1); // 1: jamo, 2: syllables, 3: word\n  const [selectedJamo, setSelectedJamo] = useState({ consonants: [], vowels: [] });\n  const [builtSyllables, setBuiltSyllables] = useState([]);\n  const [userWord, setUserWord] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [currentHint, setCurrentHint] = useState('');\n\n  const selectWord = useCallback((word) => {\n    setSelectedWord(word);\n    setCurrentStage(1);\n    setSelectedJamo({ consonants: [], vowels: [] });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n\n  const getRequiredJamo = useCallback(() => {\n    if (!selectedWord) return { consonants: [], vowels: [] };\n\n    const required = { consonants: [], vowels: [] };\n\n    selectedWord.syllables.forEach(syllable => {\n      if (syllable.consonant) {\n        const consonant = koreanConsonants.find(c => c.koreanLetter === syllable.consonant);\n        if (consonant && !required.consonants.find(c => c.id === consonant.id)) {\n          required.consonants.push(consonant);\n        }\n      }\n      if (syllable.vowel) {\n        const vowel = koreanVowels.find(v => v.koreanLetter === syllable.vowel);\n        if (vowel && !required.vowels.find(v => v.id === vowel.id)) {\n          required.vowels.push(vowel);\n        }\n      }\n      if (syllable.final) {\n        const finalConsonant = koreanConsonants.find(c => c.koreanLetter === syllable.final);\n        if (finalConsonant && !required.consonants.find(c => c.id === finalConsonant.id)) {\n          required.consonants.push(finalConsonant);\n        }\n      }\n    });\n\n    return required;\n  }, [selectedWord]);\n\n  const getHints = useCallback(() => {\n    if (!selectedWord) return [];\n\n    const hints = [];\n\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const missingConsonants = required.consonants.filter(reqC =>\n        !selectedJamo.consonants.some(selC => selC.id === reqC.id)\n      );\n      const missingVowels = required.vowels.filter(reqV =>\n        !selectedJamo.vowels.some(selV => selV.id === reqV.id)\n      );\n\n      if (missingConsonants.length > 0) {\n        hints.push(`Select the consonant: ${missingConsonants[0].koreanLetter} (${missingConsonants[0].name})`);\n      } else if (missingVowels.length > 0) {\n        hints.push(`Select the vowel: ${missingVowels[0].koreanLetter} (${missingVowels[0].name})`);\n      } else {\n        hints.push(\"Great! You've selected all required letters. Click 'Next' to build syllables.\");\n      }\n    }\n\n    if (currentStage === 2) {\n      const currentSyllableIndex = builtSyllables.length;\n      if (currentSyllableIndex < selectedWord.syllables.length) {\n        const targetSyllable = selectedWord.syllables[currentSyllableIndex];\n        if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length === 0) {\n          hints.push(`Select ${targetSyllable.consonant} and ${targetSyllable.vowel} to build \"${targetSyllable.syllable}\"`);\n        } else if (selectedJamo.consonants.length > 0 && selectedJamo.vowels.length === 0) {\n          hints.push(`Now select ${targetSyllable.vowel} and click \"Build Syllable\"`);\n        } else if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length > 0) {\n          hints.push(`Select ${targetSyllable.consonant} and click \"Build Syllable\"`);\n        } else {\n          hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\"`);\n        }\n      }\n    }\n\n    if (currentStage === 3) {\n      if (userWord.length < selectedWord.syllables.length) {\n        const nextSyllable = selectedWord.syllables[userWord.length];\n        const availableSyllable = builtSyllables.find(bs => bs.syllable === nextSyllable.syllable);\n        if (availableSyllable) {\n          hints.push(`Drag \"${availableSyllable.syllable}\" to the next empty slot`);\n        } else {\n          hints.push(`Build \"${nextSyllable.syllable}\" first in Stage 2`);\n        }\n      } else {\n        hints.push(`Click \"Check Word\" to verify your word construction`);\n      }\n    }\n\n    return hints;\n  }, [selectedWord, currentStage, selectedJamo, builtSyllables, userWord, getRequiredJamo]);\n\n  const showHintForCurrentStage = useCallback(() => {\n    const hints = getHints();\n    if (hints.length > 0) {\n      setCurrentHint(hints[0]);\n      setShowHint(true);\n    }\n  }, [getHints]);\n\n  const handleJamoSelection = useCallback((jamo, type) => {\n    if (type === 'consonant') {\n      setSelectedJamo(prev => ({\n        ...prev,\n        consonants: prev.consonants.includes(jamo)\n          ? prev.consonants.filter(c => c.id !== jamo.id)\n          : [...prev.consonants, jamo]\n      }));\n    } else {\n      setSelectedJamo(prev => ({\n        ...prev,\n        vowels: prev.vowels.includes(jamo)\n          ? prev.vowels.filter(v => v.id !== jamo.id)\n          : [...prev.vowels, jamo]\n      }));\n    }\n  }, []);\n\n  const canBuildSyllable = useCallback(() => {\n    return selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1;\n  }, [selectedJamo]);\n\n  const buildSyllable = useCallback(() => {\n    if (!canBuildSyllable()) return;\n\n    const consonant = selectedJamo.consonants[0];\n    const vowel = selectedJamo.vowels[0];\n\n    // For now, create simple CV syllables. Later we can enhance for CVC\n    const syllableText = consonant.koreanLetter + vowel.koreanLetter;\n\n    // Find the matching syllable in the target word to get complete structure\n    const targetSyllable = selectedWord.syllables.find(ts =>\n      ts.consonant === consonant.koreanLetter && ts.vowel === vowel.koreanLetter\n    );\n\n    const newSyllable = {\n      syllable: targetSyllable ? targetSyllable.syllable : syllableText,\n      consonant: consonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: targetSyllable ? targetSyllable.final : null,\n      structure: targetSyllable ? targetSyllable.structure : 'CV',\n      completed: true\n    };\n\n    setBuiltSyllables(prev => [...prev, newSyllable]);\n    setSelectedJamo({ consonants: [], vowels: [] });\n  }, [canBuildSyllable, selectedJamo, selectedWord]);\n\n  const handleSyllableDrop = useCallback((syllable) => {\n    if (userWord.length >= selectedWord.syllables.length) return;\n\n    if (userWord.some(userSyl => userSyl.syllable === syllable.syllable)) return;\n\n    setUserWord(prev => [...prev, syllable]);\n  }, [selectedWord, userWord]);\n\n  const removeSyllable = useCallback((index) => {\n    setUserWord(prev => prev.filter((_, i) => i !== index));\n  }, []);\n\n  const checkStageCompletion = useCallback(() => {\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const hasAllConsonants = required.consonants.every(reqC =>\n        selectedJamo.consonants.some(selC => selC.id === reqC.id)\n      );\n      const hasAllVowels = required.vowels.every(reqV =>\n        selectedJamo.vowels.some(selV => selV.id === reqV.id)\n      );\n      return hasAllConsonants && hasAllVowels;\n    }\n\n    if (currentStage === 2) {\n      return builtSyllables.length === selectedWord.syllables.length &&\n             builtSyllables.every(bs => bs.completed);\n    }\n\n    if (currentStage === 3) {\n      if (userWord.length !== selectedWord.syllables.length) return false;\n      return userWord.every((userSyl, index) =>\n        userSyl.syllable === selectedWord.syllables[index].syllable\n      );\n    }\n\n    return false;\n  }, [currentStage, selectedJamo, builtSyllables, userWord, selectedWord, getRequiredJamo]);\n\n  const advanceToNextStage = useCallback(() => {\n    if (currentStage < 3) {\n      setCurrentStage(prev => prev + 1);\n      setShowHint(false);\n    }\n  }, [currentStage]);\n\n  const resetExercise = useCallback(() => {\n    setCurrentStage(1);\n    setSelectedJamo({ consonants: [], vowels: [] });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n\n  const getJamoButtonClass = (jamo, type) => {\n    const isSelected = type === 'consonant'\n      ? selectedJamo.consonants.some(c => c.id === jamo.id)\n      : selectedJamo.vowels.some(v => v.id === jamo.id);\n    return `jamo-btn ${isSelected ? 'selected' : 'available'}`;\n  };\n\n  const getSyllableButtonClass = (syllable) => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n\n  if (!selectedWord) {\n    return (\n      <div className=\"word-builder-section\">\n        <div className=\"section-header\">\n          <h2>Progressive Word Builder</h2>\n          <p>Learn Korean writing step by step: from individual letters to complete words.</p>\n        </div>\n\n        <div className=\"word-selection\">\n          <h3>Select a word to build:</h3>\n          <div className=\"word-cards\">\n            {exampleWords.map(word => (\n              <button\n                key={word.id}\n                className=\"word-card\"\n                onClick={() => selectWord(word)}\n              >\n                <div className=\"word-korean\">{word.korean}</div>\n                <div className=\"word-romanization\">{word.romanization}</div>\n                <div className=\"word-english\">\"{word.english}\"</div>\n                <div className=\"syllable-count\">{word.syllables.length} syllables</div>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const requiredJamo = getRequiredJamo();\n  const stageHints = getHints();\n\n  return (\n    <div className=\"word-builder-section\">\n      <div className=\"section-header\">\n        <div className=\"exercise-header\">\n          <button className=\"back-btn\" onClick={() => setSelectedWord(null)}>\n            ← Back to Word Selection\n          </button>\n          <h2>Build: {selectedWord.english}</h2>\n          <div className=\"word-info\">\n            <span className=\"target-word\">{selectedWord.korean}</span>\n            <span className=\"romanization\">({selectedWord.romanization})</span>\n          </div>\n        </div>\n\n        {/* Progress indicator */}\n        <div className=\"stage-progress\">\n          <div className={`stage ${currentStage === 1 ? 'active' : ''} ${currentStage > 1 ? 'completed' : ''}`}>\n            <span className=\"stage-number\">1</span>\n            <span className=\"stage-label\">Jamo</span>\n          </div>\n          <div className={`stage ${currentStage === 2 ? 'active' : ''} ${currentStage > 2 ? 'completed' : ''}`}>\n            <span className=\"stage-number\">2</span>\n            <span className=\"stage-label\">Syllables</span>\n          </div>\n          <div className={`stage ${currentStage === 3 ? 'active' : ''}`}>\n            <span className=\"stage-number\">3</span>\n            <span className=\"stage-label\">Word</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"word-builder-container\">\n        {/* Stage 1: Jamo Selection */}\n        {currentStage === 1 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 1: Select Required Letters (Jamo)</h3>\n              <p>Choose all the consonants and vowels needed to build this word.</p>\n            </div>\n\n            <div className=\"jamo-selection\">\n              <div className=\"jamo-section\">\n                <h4>Required Consonants:</h4>\n                <div className=\"jamo-grid\">\n                  {requiredJamo.consonants.map(consonant => (\n                    <div\n                      key={consonant.id}\n                      className={getJamoButtonClass(consonant, 'consonant')}\n                      onClick={() => handleJamoSelection(consonant, 'consonant')}\n                    >\n                      <span className=\"jamo-letter\">{consonant.koreanLetter}</span>\n                      <span className=\"jamo-name\">{consonant.name}</span>\n                      <span className=\"jamo-sound\">({consonant.romanization})</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"jamo-section\">\n                <h4>Required Vowels:</h4>\n                <div className=\"jamo-grid\">\n                  {requiredJamo.vowels.map(vowel => (\n                    <div\n                      key={vowel.id}\n                      className={getJamoButtonClass(vowel, 'vowel')}\n                      onClick={() => handleJamoSelection(vowel, 'vowel')}\n                    >\n                      <span className=\"jamo-letter\">{vowel.koreanLetter}</span>\n                      <span className=\"jamo-name\">{vowel.name}</span>\n                      <span className=\"jamo-sound\">({vowel.romanization})</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button\n                className=\"hint-btn\"\n                onClick={showHintForCurrentStage}\n                disabled={stageHints.length === 0}\n              >\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button\n                className=\"next-stage-btn\"\n                onClick={advanceToNextStage}\n                disabled={!checkStageCompletion()}\n              >\n                Next: Build Syllables →\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Stage 2: Syllable Building */}\n        {currentStage === 2 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 2: Build Syllable Blocks</h3>\n              <p>Combine consonants and vowels to create syllable blocks.</p>\n            </div>\n\n            <div className=\"syllable-building\">\n              <div className=\"jamo-workspace\">\n                <h4>Selected Letters:</h4>\n                <div className=\"selected-jamo\">\n                  {selectedJamo.consonants.map(c => (\n                    <span key={c.id} className=\"selected-jamo-item consonant\">\n                      {c.koreanLetter}\n                    </span>\n                  ))}\n                  {selectedJamo.vowels.map(v => (\n                    <span key={v.id} className=\"selected-jamo-item vowel\">\n                      {v.koreanLetter}\n                    </span>\n                  ))}\n                </div>\n\n                <button\n                  className=\"build-syllable-btn\"\n                  onClick={buildSyllable}\n                  disabled={!canBuildSyllable()}\n                >\n                  Build Syllable →\n                </button>\n              </div>\n\n              <div className=\"built-syllables\">\n                <h4>Built Syllables:</h4>\n                <div className=\"syllables-display\">\n                  {builtSyllables.map((syllable, index) => (\n                    <div key={index} className=\"built-syllable\">\n                      <span className=\"syllable-text\">{syllable.syllable}</span>\n                      <div className=\"syllable-components\">\n                        {syllable.consonant} + {syllable.vowel}\n                        {syllable.final && ` + ${syllable.final}`}\n                      </div>\n                      <div className=\"syllable-structure\">{syllable.structure}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button className=\"hint-btn\" onClick={showHintForCurrentStage}>\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button className=\"prev-stage-btn\" onClick={() => setCurrentStage(1)}>\n                ← Back to Jamo\n              </button>\n              <button\n                className=\"next-stage-btn\"\n                onClick={advanceToNextStage}\n                disabled={!checkStageCompletion()}\n              >\n                Next: Build Word →\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Stage 3: Word Building */}\n        {currentStage === 3 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 3: Build the Complete Word</h3>\n              <p>Arrange the syllable blocks to form the complete word.</p>\n            </div>\n\n            <div className=\"word-building\">\n              <div className=\"target-word-area\">\n                <h4>Word Structure:</h4>\n                <div className=\"word-slots\">\n                  {selectedWord.syllables.map((targetSyllable, index) => {\n                    const isCorrect = userWord[index] && userWord[index].syllable === targetSyllable.syllable;\n                    return (\n                      <div key={index} className={`word-slot ${isCorrect ? 'correct' : ''}`}>\n                        {userWord[index] ? (\n                          <div className={`syllable-in-word ${isCorrect ? 'correct' : ''}`}>\n                            <span className=\"syllable-text\">{userWord[index].syllable}</span>\n                            <button\n                              className=\"remove-syllable\"\n                              onClick={() => removeSyllable(index)}\n                            >\n                              ×\n                            </button>\n                          </div>\n                        ) : (\n                          <div className=\"empty-word-slot\">\n                            Drop syllable here\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n                {userWord.length > 0 && (\n                  <div className=\"current-word\">\n                    Current: <span className=\"current-word-display\">\n                      {userWord.map(s => s.syllable).join('')}\n                    </span>\n                  </div>\n                )}\n\n                {checkStageCompletion() && currentStage === 3 && (\n                  <div className=\"success-message\">\n                    🎉 Congratulations! You successfully built \"{selectedWord.korean}\" ({selectedWord.english})!\n                  </div>\n                )}\n              </div>\n\n              <div className=\"available-syllables\">\n                <h4>Available Syllables:</h4>\n                <div className=\"syllables-pool\">\n                  {builtSyllables.map((syllable, index) => (\n                    <div\n                      key={index}\n                      className={getSyllableButtonClass(syllable)}\n                      draggable={!userWord.some(userSyl => userSyl.syllable === syllable.syllable)}\n                      onDragStart={(e) => {\n                        e.dataTransfer.setData('text/plain', syllable.syllable);\n                      }}\n                      onClick={() => handleSyllableDrop(syllable)}\n                    >\n                      <span className=\"syllable-display\">{syllable.syllable}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button className=\"hint-btn\" onClick={showHintForCurrentStage}>\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button className=\"prev-stage-btn\" onClick={() => setCurrentStage(2)}>\n                ← Back to Syllables\n              </button>\n              <button className=\"check-word-btn\" onClick={() => {\n                if (checkStageCompletion()) {\n                  setShowHint(false);\n                  setCurrentHint(`Perfect! You successfully built \"${selectedWord.korean}\" (${selectedWord.english})!`);\n                  setShowHint(true);\n                } else {\n                  setShowHint(false);\n                  setCurrentHint(`Almost there! Make sure \"${selectedWord.syllables[userWord.length].syllable}\" is in the correct position.`);\n                  setShowHint(true);\n                }\n              }}>\n                Check Word\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Overall Controls */}\n        <div className=\"exercise-controls\">\n          <button className=\"reset-btn\" onClick={resetExercise}>\n            Start Over\n          </button>\n          <button className=\"new-word-btn\" onClick={() => setSelectedWord(null)}>\n            Try Another Word\n          </button>\n        </div>\n\n        {/* Hints */}\n        {showHint && (\n          <div className=\"hint-section\">\n            <div className=\"hint-content\">\n              <span className=\"hint-icon\">💡</span>\n              <span className=\"hint-text\">{currentHint}</span>\n              <button className=\"close-hint\" onClick={() => setShowHint(false)}>×</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WordBuilderSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}