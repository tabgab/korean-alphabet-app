{"ast":null,"code":"var _jsxFileName = \"/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { exampleWords, koreanConsonants, koreanVowels } from '../koreanAlphabetData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordBuilderSection = () => {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currentStage, setCurrentStage] = useState(1); // 1: jamo, 2: syllables, 3: word\n  const [selectedJamo, setSelectedJamo] = useState({\n    consonants: [],\n    vowels: []\n  });\n  const [builtSyllables, setBuiltSyllables] = useState([]);\n  const [userWord, setUserWord] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [currentHint, setCurrentHint] = useState('');\n  const selectWord = useCallback(word => {\n    setSelectedWord(word);\n    setCurrentStage(1);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n  const getRequiredJamo = useCallback(() => {\n    if (!selectedWord) return {\n      consonants: [],\n      vowels: []\n    };\n    const required = {\n      consonants: [],\n      vowels: []\n    };\n    selectedWord.syllables.forEach(syllable => {\n      // Add initial consonant\n      if (syllable.consonant) {\n        const consonant = koreanConsonants.find(c => c.koreanLetter === syllable.consonant);\n        if (consonant && !required.consonants.find(c => c.id === consonant.id)) {\n          required.consonants.push(consonant);\n        }\n      }\n\n      // Add vowel\n      if (syllable.vowel) {\n        const vowel = koreanVowels.find(v => v.koreanLetter === syllable.vowel);\n        if (vowel && !required.vowels.find(v => v.id === vowel.id)) {\n          required.vowels.push(vowel);\n        }\n      }\n\n      // Add final consonant (for CVC syllables)\n      if (syllable.final) {\n        const finalConsonant = koreanConsonants.find(c => c.koreanLetter === syllable.final);\n        if (finalConsonant && !required.consonants.find(c => c.id === finalConsonant.id)) {\n          required.consonants.push(finalConsonant);\n        }\n      }\n    });\n    return required;\n  }, [selectedWord]);\n  const getHints = useCallback(() => {\n    if (!selectedWord) return [];\n    const hints = [];\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const missingConsonants = required.consonants.filter(reqC => !selectedJamo.consonants.some(selC => selC.id === reqC.id));\n      const missingVowels = required.vowels.filter(reqV => !selectedJamo.vowels.some(selV => selV.id === reqV.id));\n      if (missingConsonants.length > 0) {\n        hints.push(`Select the consonant: ${missingConsonants[0].koreanLetter} (${missingConsonants[0].name})`);\n      } else if (missingVowels.length > 0) {\n        hints.push(`Select the vowel: ${missingVowels[0].koreanLetter} (${missingVowels[0].name})`);\n      } else {\n        hints.push(\"Great! You've selected all required letters. Click 'Next' to build syllables.\");\n      }\n    }\n    if (currentStage === 2) {\n      const currentSyllableIndex = builtSyllables.length;\n      if (currentSyllableIndex < selectedWord.syllables.length) {\n        const targetSyllable = selectedWord.syllables[currentSyllableIndex];\n        if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length === 0) {\n          if (targetSyllable.structure === 'CVC') {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CVC): Select ${targetSyllable.consonant} (initial) + ${targetSyllable.vowel} + ${targetSyllable.final} (final)`);\n          } else {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CV): Select ${targetSyllable.consonant} + ${targetSyllable.vowel}`);\n          }\n        } else if (selectedJamo.consonants.length > 0 && selectedJamo.vowels.length === 0) {\n          hints.push(`Now select ${targetSyllable.vowel}${targetSyllable.final ? ' (and optionally ' + targetSyllable.final + ' for final consonant)' : ''}`);\n        } else if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length > 0) {\n          hints.push(`Select ${targetSyllable.consonant} as initial consonant`);\n        } else if (selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1) {\n          if (targetSyllable.final) {\n            // Check if we can reuse the same consonant for final position\n            const availableConsonants = requiredJamo.consonants.filter(c => c.koreanLetter === targetSyllable.final || c.koreanLetter === targetSyllable.consonant);\n            if (availableConsonants.length > 0) {\n              hints.push(`Add ${targetSyllable.final} as final consonant (you can reuse ${targetSyllable.consonant} if it's the same letter)`);\n            } else {\n              hints.push(`Add ${targetSyllable.final} as final consonant`);\n            }\n          } else {\n            hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CV structure)`);\n          }\n        } else if (selectedJamo.consonants.length === 2 && selectedJamo.vowels.length === 1) {\n          hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CVC structure)`);\n        }\n      }\n    }\n    if (currentStage === 3) {\n      if (userWord.length < selectedWord.syllables.length) {\n        const nextSyllable = selectedWord.syllables[userWord.length];\n        const availableSyllable = builtSyllables.find(bs => bs.syllable === nextSyllable.syllable);\n        if (availableSyllable) {\n          hints.push(`Drag \"${availableSyllable.syllable}\" to the next empty slot`);\n        } else {\n          hints.push(`Build \"${nextSyllable.syllable}\" first in Stage 2`);\n        }\n      } else {\n        hints.push(`Click \"Check Word\" to verify your word construction`);\n      }\n    }\n    return hints;\n  }, [selectedWord, currentStage, selectedJamo, builtSyllables, userWord, getRequiredJamo]);\n  const showHintForCurrentStage = useCallback(() => {\n    const hints = getHints();\n    if (hints.length > 0) {\n      setCurrentHint(hints[0]);\n      setShowHint(true);\n    }\n  }, [getHints]);\n  const handleJamoSelection = useCallback((jamo, type) => {\n    console.log('Jamo selected:', jamo, type);\n    if (type === 'consonant') {\n      setSelectedJamo(prev => {\n        const isCurrentlySelected = prev.consonants.some(c => c.id === jamo.id);\n\n        // For consonants, we allow multiple selections of the same jamo\n        // since the same consonant can be used as initial and final\n        let newConsonants;\n        if (isCurrentlySelected) {\n          // If already selected, remove it (toggle behavior)\n          newConsonants = prev.consonants.filter(c => c.id !== jamo.id);\n        } else {\n          // If not selected, add it (allow multiple selections of same jamo)\n          newConsonants = [...prev.consonants, jamo];\n        }\n        const newState = {\n          ...prev,\n          consonants: newConsonants\n        };\n        console.log('New consonant state:', newState);\n        return newState;\n      });\n    } else {\n      setSelectedJamo(prev => {\n        const isCurrentlySelected = prev.vowels.some(v => v.id === jamo.id);\n        let newVowels;\n        if (isCurrentlySelected) {\n          newVowels = prev.vowels.filter(v => v.id !== jamo.id);\n        } else {\n          newVowels = [...prev.vowels, jamo];\n        }\n        const newState = {\n          ...prev,\n          vowels: newVowels\n        };\n        console.log('New vowel state:', newState);\n        return newState;\n      });\n    }\n  }, []);\n  const canBuildSyllable = useCallback(() => {\n    // For CV syllables: need exactly 1 consonant and 1 vowel\n    // For CVC syllables: need 1 consonant, 1 vowel, and optionally 1 final consonant\n    const hasConsonant = selectedJamo.consonants.length >= 1;\n    const hasVowel = selectedJamo.vowels.length === 1;\n    const hasFinalConsonant = selectedJamo.consonants.length <= 2; // Max 1 initial + 1 final\n\n    return hasConsonant && hasVowel && hasFinalConsonant;\n  }, [selectedJamo]);\n  const buildSyllable = useCallback(() => {\n    if (!canBuildSyllable()) return;\n    console.log('Building syllable with:', selectedJamo);\n    const initialConsonant = selectedJamo.consonants[0];\n    const vowel = selectedJamo.vowels[0];\n    const finalConsonant = selectedJamo.consonants.length > 1 ? selectedJamo.consonants[1] : null;\n\n    // Create syllable text based on structure\n    let syllableText = initialConsonant.koreanLetter + vowel.koreanLetter;\n    if (finalConsonant) {\n      syllableText += finalConsonant.koreanLetter;\n    }\n    console.log('Looking for target syllable with:', {\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : null\n    });\n\n    // Find the matching syllable in the target word to get complete structure\n    const targetSyllable = selectedWord.syllables.find(ts => {\n      const consonantMatch = ts.consonant === initialConsonant.koreanLetter;\n      const vowelMatch = ts.vowel === vowel.koreanLetter;\n      const finalMatch = finalConsonant ? ts.final === finalConsonant.koreanLetter : !ts.final; // No final consonant expected\n\n      console.log('Checking syllable:', ts, {\n        consonantMatch,\n        vowelMatch,\n        finalMatch\n      });\n      return consonantMatch && vowelMatch && finalMatch;\n    });\n    console.log('Found target syllable:', targetSyllable);\n    const newSyllable = {\n      syllable: targetSyllable ? targetSyllable.syllable : syllableText,\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : targetSyllable ? targetSyllable.final : null,\n      structure: targetSyllable ? targetSyllable.structure : finalConsonant ? 'CVC' : 'CV',\n      completed: true\n    };\n    console.log('Created new syllable:', newSyllable);\n    setBuiltSyllables(prev => {\n      const updated = [...prev, newSyllable];\n      console.log('Updated builtSyllables:', updated);\n      return updated;\n    });\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n  }, [canBuildSyllable, selectedJamo, selectedWord]);\n  const handleSyllableDrop = useCallback(syllable => {\n    console.log('Dropping syllable:', syllable);\n    if (!selectedWord) {\n      console.error('selectedWord is undefined');\n      return;\n    }\n    if (userWord.length >= selectedWord.syllables.length) {\n      console.log('Word is already complete');\n      return;\n    }\n    if (userWord.some(userSyl => userSyl.syllable === syllable.syllable)) {\n      console.log('Syllable already used');\n      return;\n    }\n    setUserWord(prev => {\n      const newWord = [...prev, syllable];\n      console.log('New userWord:', newWord);\n      return newWord;\n    });\n  }, [selectedWord, userWord]);\n  const removeSyllable = useCallback(index => {\n    console.log('Removing syllable at index:', index);\n    setUserWord(prev => {\n      const newWord = prev.filter((_, i) => i !== index);\n      console.log('New userWord after removal:', newWord);\n      return newWord;\n    });\n  }, []);\n  const checkStageCompletion = useCallback(() => {\n    console.log('Checking stage completion:', {\n      currentStage,\n      userWord,\n      selectedWord\n    });\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const hasAllConsonants = required.consonants.every(reqC => selectedJamo.consonants.some(selC => selC.id === reqC.id));\n      const hasAllVowels = required.vowels.every(reqV => selectedJamo.vowels.some(selV => selV.id === reqV.id));\n      return hasAllConsonants && hasAllVowels;\n    }\n    if (currentStage === 2) {\n      return builtSyllables.length === selectedWord.syllables.length && builtSyllables.every(bs => bs.completed);\n    }\n    if (currentStage === 3) {\n      console.log('Stage 3 validation:', {\n        userWord,\n        selectedWord\n      });\n      if (!selectedWord || !selectedWord.syllables) {\n        console.error('selectedWord or syllables is undefined');\n        return false;\n      }\n      if (userWord.length !== selectedWord.syllables.length) {\n        console.log('User word length mismatch:', userWord.length, selectedWord.syllables.length);\n        return false;\n      }\n\n      // Check each syllable with proper error handling\n      for (let index = 0; index < userWord.length; index++) {\n        const userSyl = userWord[index];\n        const targetSyllable = selectedWord.syllables[index];\n        console.log(`Checking index ${index}:`, {\n          userSyl,\n          targetSyllable\n        });\n        if (!userSyl) {\n          console.error('userSyl is undefined at index:', index);\n          return false;\n        }\n        if (!targetSyllable) {\n          console.error('targetSyllable is undefined at index:', index);\n          return false;\n        }\n        if (!userSyl.syllable || !targetSyllable.syllable) {\n          console.error('Syllable text is undefined:', {\n            userSyl,\n            targetSyllable\n          });\n          return false;\n        }\n        const isCorrect = userSyl.syllable === targetSyllable.syllable;\n        console.log(`Comparing: \"${userSyl.syllable}\" vs \"${targetSyllable.syllable}\" = ${isCorrect}`);\n        if (!isCorrect) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }, [currentStage, selectedJamo, builtSyllables, userWord, selectedWord, getRequiredJamo]);\n  const advanceToNextStage = useCallback(() => {\n    if (currentStage < 3) {\n      setCurrentStage(prev => prev + 1);\n      setShowHint(false);\n    }\n  }, [currentStage]);\n  const resetExercise = useCallback(() => {\n    setCurrentStage(1);\n    setSelectedJamo({\n      consonants: [],\n      vowels: []\n    });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n  const getJamoButtonClass = (jamo, type) => {\n    const isSelected = type === 'consonant' ? selectedJamo.consonants.some(c => c.id === jamo.id) : selectedJamo.vowels.some(v => v.id === jamo.id);\n    return `jamo-btn ${isSelected ? 'selected' : 'available'}`;\n  };\n  const getSyllableButtonClass = syllable => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n  const requiredJamo = getRequiredJamo();\n  const stageHints = getHints();\n  if (!selectedWord) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Progressive Word Builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn Korean writing step by step: from individual letters to complete words.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a word to build:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-cards\",\n          children: exampleWords.map(word => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"word-card\",\n            onClick: () => selectWord(word),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-korean\",\n              children: word.korean\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-romanization\",\n              children: word.romanization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-english\",\n              children: [\"\\\"\", word.english, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-count\",\n              children: [word.syllables.length, \" syllables\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-builder-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"back-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"\\u2190 Back to Word Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Build: \", selectedWord.english]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"target-word\",\n            children: selectedWord.korean\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"romanization\",\n            children: [\"(\", selectedWord.romanization, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 1 ? 'active' : ''} ${currentStage > 1 ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Jamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 2 ? 'active' : ''} ${currentStage > 2 ? 'completed' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Syllables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stage ${currentStage === 3 ? 'active' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stage-label\",\n            children: \"Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-builder-container\",\n      children: [currentStage === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 1: Select Required Letters (Jamo)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose all the consonants and vowels needed to build this word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jamo-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Required Consonants:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-grid\",\n              children: requiredJamo.consonants.map(consonant => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getJamoButtonClass(consonant, 'consonant'),\n                onClick: () => handleJamoSelection(consonant, 'consonant'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: consonant.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: consonant.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-sound\",\n                  children: [\"(\", consonant.romanization, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 23\n                }, this)]\n              }, consonant.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Required Vowels:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-grid\",\n              children: requiredJamo.vowels.map(vowel => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getJamoButtonClass(vowel, 'vowel'),\n                onClick: () => handleJamoSelection(vowel, 'vowel'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: vowel.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: vowel.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-sound\",\n                  children: [\"(\", vowel.romanization, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 23\n                }, this)]\n              }, vowel.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            disabled: stageHints.length === 0,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-stage-btn\",\n            onClick: advanceToNextStage,\n            disabled: !checkStageCompletion(),\n            children: \"Next: Build Syllables \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), currentStage === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 2: Build Syllable Blocks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Combine consonants and vowels to create syllable blocks. Build them one at a time.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"syllable-building\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-pool-stage2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Available Letters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select consonants and vowels to build the next syllable. You can reuse consonants for different positions.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jamo-pool-grid\",\n              children: [requiredJamo.consonants.map(consonant => {\n                const isSelectedForInitial = selectedJamo.consonants.filter((_, index) => index === 0).some(c => c.id === consonant.id);\n                const isSelectedForFinal = selectedJamo.consonants.filter((_, index) => index > 0).some(c => c.id === consonant.id);\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `jamo-btn ${isSelectedForInitial || isSelectedForFinal ? 'selected' : 'available'}`,\n                  onClick: () => handleJamoSelection(consonant, 'consonant'),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"jamo-letter\",\n                    children: consonant.koreanLetter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"jamo-name\",\n                    children: consonant.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 25\n                  }, this), isSelectedForInitial && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"position-indicator initial\",\n                    children: \"\\uCD08\\uC131\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 50\n                  }, this), isSelectedForFinal && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"position-indicator final\",\n                    children: \"\\uC885\\uC131\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 48\n                  }, this)]\n                }, `${consonant.id}-${consonant.koreanLetter}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 23\n                }, this);\n              }), requiredJamo.vowels.map(vowel => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: getJamoButtonClass(vowel, 'vowel'),\n                onClick: () => handleJamoSelection(vowel, 'vowel'),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-letter\",\n                  children: vowel.koreanLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"jamo-name\",\n                  children: vowel.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 23\n                }, this)]\n              }, vowel.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"jamo-workspace\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Selected for Current Syllable:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-jamo\",\n              children: [selectedJamo.consonants.map((c, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `selected-jamo-item ${index === 0 ? 'consonant' : 'final-consonant'}`,\n                children: [c.koreanLetter, \" (\", c.name, \")\", index === 0 ? ' (initial)' : ' (final)']\n              }, `${c.id}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 21\n              }, this)), selectedJamo.vowels.map(v => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-jamo-item vowel\",\n                children: [v.koreanLetter, \" (\", v.name, \")\"]\n              }, v.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selection-summary\",\n              children: selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"structure-info\",\n                children: [selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"structure-badge cv\",\n                  children: \"CV Structure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 25\n                }, this), selectedJamo.consonants.length === 2 && selectedJamo.vowels.length === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"structure-badge cvc\",\n                  children: \"CVC Structure\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllable-preview\",\n              children: selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-syllable\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-text\",\n                  children: [\"Preview: \", selectedJamo.consonants[0].koreanLetter + selectedJamo.vowels[0].koreanLetter, selectedJamo.consonants.length > 1 && selectedJamo.consonants[1].koreanLetter]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"preview-structure\",\n                  children: [\"(\", selectedJamo.consonants.length > 1 ? 'CVC' : 'CV', \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"build-syllable-btn\",\n              onClick: () => {\n                console.log('Build Syllable clicked');\n                console.log('Selected Jamo:', selectedJamo);\n                console.log('Can build:', canBuildSyllable());\n                buildSyllable();\n              },\n              disabled: !canBuildSyllable(),\n              children: canBuildSyllable() ? `Build Syllable (${selectedJamo.consonants.length > 1 ? 'CVC' : 'CV'}) →` : 'Select 1 consonant + 1 vowel (+ optional final consonant)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), selectedJamo.consonants.length > 0 || selectedJamo.vowels.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-selection-btn\",\n              onClick: () => setSelectedJamo({\n                consonants: [],\n                vowels: []\n              }),\n              children: \"Clear Selection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"built-syllables\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Built Syllables (\", builtSyllables.length, \"/\", selectedWord.syllables.length, \"):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllables-display\",\n              children: builtSyllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"built-syllable\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"syllable-text\",\n                  children: syllable.syllable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-components\",\n                  children: [syllable.consonant, \" + \", syllable.vowel, syllable.final && ` + ${syllable.final}`]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"syllable-structure\",\n                  children: syllable.structure\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this), builtSyllables.length < selectedWord.syllables.length && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"next-syllable-hint\",\n              children: [\"Next: Build \\\"\", selectedWord.syllables[builtSyllables.length].syllable, \"\\\"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-stage-btn\",\n            onClick: () => setCurrentStage(1),\n            children: \"\\u2190 Back to Jamo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"next-stage-btn\",\n            onClick: advanceToNextStage,\n            disabled: !checkStageCompletion(),\n            children: \"Next: Build Word \\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this), currentStage === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Stage 3: Build the Complete Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Arrange the syllable blocks to form the complete word.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word-building\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"target-word-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Word Structure:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word-slots\",\n              children: selectedWord.syllables.map((targetSyllable, index) => {\n                console.log(`Rendering word slot ${index}:`, {\n                  targetSyllable,\n                  userSyllable: userWord[index]\n                });\n                if (!targetSyllable) {\n                  console.error('targetSyllable is undefined at index:', index);\n                  return null;\n                }\n                const isCorrect = userWord[index] && userWord[index].syllable === targetSyllable.syllable;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `word-slot ${isCorrect ? 'correct' : ''}`,\n                  children: userWord[index] ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `syllable-in-word ${isCorrect ? 'correct' : ''}`,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"syllable-text\",\n                      children: userWord[index].syllable\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 698,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"remove-syllable\",\n                      onClick: () => removeSyllable(index),\n                      children: \"\\xD7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 699,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 697,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"empty-word-slot\",\n                    children: \"Drop syllable here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 707,\n                    columnNumber: 27\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 17\n            }, this), userWord.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-word\",\n              children: [\"Current: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"current-word-display\",\n                children: userWord.map(s => s.syllable).join('')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 19\n            }, this), checkStageCompletion() && currentStage === 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"success-message\",\n              children: [\"\\uD83C\\uDF89 Congratulations! You successfully built \\\"\", selectedWord.korean, \"\\\" (\", selectedWord.english, \")!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available-syllables\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Available Syllables:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"syllables-pool\",\n              children: builtSyllables.map((syllable, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: getSyllableButtonClass(syllable),\n                draggable: !userWord.some(userSyl => userSyl.syllable === syllable.syllable),\n                onDragStart: e => {\n                  e.dataTransfer.setData('text/plain', syllable.syllable);\n                },\n                onClick: () => handleSyllableDrop(syllable),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"syllable-display\",\n                  children: syllable.syllable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hint-btn\",\n            onClick: showHintForCurrentStage,\n            children: \"\\uD83D\\uDCA1 Show Hint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stage-navigation\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"prev-stage-btn\",\n            onClick: () => setCurrentStage(2),\n            children: \"\\u2190 Back to Syllables\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"check-word-btn\",\n            onClick: () => {\n              try {\n                console.log('Check Word button clicked');\n                console.log('userWord:', userWord);\n                console.log('selectedWord:', selectedWord);\n                if (checkStageCompletion()) {\n                  setShowHint(false);\n                  setCurrentHint(`Perfect! You successfully built \"${selectedWord.korean}\" (${selectedWord.english})!`);\n                  setShowHint(true);\n                } else {\n                  // Find the first incorrect syllable\n                  let errorMessage = 'Check your syllable placement and try again.';\n                  if (userWord.length > 0 && selectedWord && selectedWord.syllables) {\n                    const firstIncorrect = userWord.findIndex((userSyl, index) => {\n                      if (!userSyl || !selectedWord.syllables[index]) return true;\n                      return userSyl.syllable !== selectedWord.syllables[index].syllable;\n                    });\n                    if (firstIncorrect >= 0) {\n                      errorMessage = `Check position ${firstIncorrect + 1}. Make sure \"${selectedWord.syllables[firstIncorrect].syllable}\" is in the correct place.`;\n                    }\n                  }\n                  setShowHint(false);\n                  setCurrentHint(errorMessage);\n                  setShowHint(true);\n                }\n              } catch (error) {\n                console.error('Error in Check Word:', error);\n                setShowHint(false);\n                setCurrentHint('An error occurred. Please try again or refresh the page.');\n                setShowHint(true);\n              }\n            },\n            children: \"Check Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"exercise-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: resetExercise,\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-word-btn\",\n          onClick: () => setSelectedWord(null),\n          children: \"Try Another Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this), showHint && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hint-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hint-icon\",\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hint-text\",\n            children: currentHint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-hint\",\n            onClick: () => setShowHint(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n};\n_s(WordBuilderSection, \"I16eSpEKyAQm5si9JFq8htCv5Yw=\");\n_c = WordBuilderSection;\nexport default WordBuilderSection;\nvar _c;\n$RefreshReg$(_c, \"WordBuilderSection\");","map":{"version":3,"names":["React","useState","useCallback","exampleWords","koreanConsonants","koreanVowels","jsxDEV","_jsxDEV","WordBuilderSection","_s","selectedWord","setSelectedWord","currentStage","setCurrentStage","selectedJamo","setSelectedJamo","consonants","vowels","builtSyllables","setBuiltSyllables","userWord","setUserWord","showHint","setShowHint","currentHint","setCurrentHint","selectWord","word","getRequiredJamo","required","syllables","forEach","syllable","consonant","find","c","koreanLetter","id","push","vowel","v","final","finalConsonant","getHints","hints","missingConsonants","filter","reqC","some","selC","missingVowels","reqV","selV","length","name","currentSyllableIndex","targetSyllable","structure","availableConsonants","requiredJamo","nextSyllable","availableSyllable","bs","showHintForCurrentStage","handleJamoSelection","jamo","type","console","log","prev","isCurrentlySelected","newConsonants","newState","newVowels","canBuildSyllable","hasConsonant","hasVowel","hasFinalConsonant","buildSyllable","initialConsonant","syllableText","ts","consonantMatch","vowelMatch","finalMatch","newSyllable","completed","updated","handleSyllableDrop","error","userSyl","newWord","removeSyllable","index","_","i","checkStageCompletion","hasAllConsonants","every","hasAllVowels","isCorrect","advanceToNextStage","resetExercise","getJamoButtonClass","isSelected","getSyllableButtonClass","isUsed","stageHints","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","korean","romanization","english","disabled","isSelectedForInitial","isSelectedForFinal","userSyllable","s","join","draggable","onDragStart","e","dataTransfer","setData","errorMessage","firstIncorrect","findIndex","_c","$RefreshReg$"],"sources":["/Users/gabortabi/DEV/learnKorean/src/components/WordBuilderSection.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { exampleWords, koreanConsonants, koreanVowels } from '../koreanAlphabetData';\n\nconst WordBuilderSection = () => {\n  const [selectedWord, setSelectedWord] = useState(null);\n  const [currentStage, setCurrentStage] = useState(1); // 1: jamo, 2: syllables, 3: word\n  const [selectedJamo, setSelectedJamo] = useState({ consonants: [], vowels: [] });\n  const [builtSyllables, setBuiltSyllables] = useState([]);\n  const [userWord, setUserWord] = useState([]);\n  const [showHint, setShowHint] = useState(false);\n  const [currentHint, setCurrentHint] = useState('');\n\n  const selectWord = useCallback((word) => {\n    setSelectedWord(word);\n    setCurrentStage(1);\n    setSelectedJamo({ consonants: [], vowels: [] });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n\n  const getRequiredJamo = useCallback(() => {\n    if (!selectedWord) return { consonants: [], vowels: [] };\n\n    const required = { consonants: [], vowels: [] };\n\n    selectedWord.syllables.forEach(syllable => {\n      // Add initial consonant\n      if (syllable.consonant) {\n        const consonant = koreanConsonants.find(c => c.koreanLetter === syllable.consonant);\n        if (consonant && !required.consonants.find(c => c.id === consonant.id)) {\n          required.consonants.push(consonant);\n        }\n      }\n\n      // Add vowel\n      if (syllable.vowel) {\n        const vowel = koreanVowels.find(v => v.koreanLetter === syllable.vowel);\n        if (vowel && !required.vowels.find(v => v.id === vowel.id)) {\n          required.vowels.push(vowel);\n        }\n      }\n\n      // Add final consonant (for CVC syllables)\n      if (syllable.final) {\n        const finalConsonant = koreanConsonants.find(c => c.koreanLetter === syllable.final);\n        if (finalConsonant && !required.consonants.find(c => c.id === finalConsonant.id)) {\n          required.consonants.push(finalConsonant);\n        }\n      }\n    });\n\n    return required;\n  }, [selectedWord]);\n\n  const getHints = useCallback(() => {\n    if (!selectedWord) return [];\n\n    const hints = [];\n\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const missingConsonants = required.consonants.filter(reqC =>\n        !selectedJamo.consonants.some(selC => selC.id === reqC.id)\n      );\n      const missingVowels = required.vowels.filter(reqV =>\n        !selectedJamo.vowels.some(selV => selV.id === reqV.id)\n      );\n\n      if (missingConsonants.length > 0) {\n        hints.push(`Select the consonant: ${missingConsonants[0].koreanLetter} (${missingConsonants[0].name})`);\n      } else if (missingVowels.length > 0) {\n        hints.push(`Select the vowel: ${missingVowels[0].koreanLetter} (${missingVowels[0].name})`);\n      } else {\n        hints.push(\"Great! You've selected all required letters. Click 'Next' to build syllables.\");\n      }\n    }\n\n    if (currentStage === 2) {\n      const currentSyllableIndex = builtSyllables.length;\n      if (currentSyllableIndex < selectedWord.syllables.length) {\n        const targetSyllable = selectedWord.syllables[currentSyllableIndex];\n\n        if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length === 0) {\n          if (targetSyllable.structure === 'CVC') {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CVC): Select ${targetSyllable.consonant} (initial) + ${targetSyllable.vowel} + ${targetSyllable.final} (final)`);\n          } else {\n            hints.push(`Build \"${targetSyllable.syllable}\" (CV): Select ${targetSyllable.consonant} + ${targetSyllable.vowel}`);\n          }\n        } else if (selectedJamo.consonants.length > 0 && selectedJamo.vowels.length === 0) {\n          hints.push(`Now select ${targetSyllable.vowel}${targetSyllable.final ? ' (and optionally ' + targetSyllable.final + ' for final consonant)' : ''}`);\n        } else if (selectedJamo.consonants.length === 0 && selectedJamo.vowels.length > 0) {\n          hints.push(`Select ${targetSyllable.consonant} as initial consonant`);\n        } else if (selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1) {\n          if (targetSyllable.final) {\n            // Check if we can reuse the same consonant for final position\n            const availableConsonants = requiredJamo.consonants.filter(c =>\n              c.koreanLetter === targetSyllable.final ||\n              c.koreanLetter === targetSyllable.consonant\n            );\n            if (availableConsonants.length > 0) {\n              hints.push(`Add ${targetSyllable.final} as final consonant (you can reuse ${targetSyllable.consonant} if it's the same letter)`);\n            } else {\n              hints.push(`Add ${targetSyllable.final} as final consonant`);\n            }\n          } else {\n            hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CV structure)`);\n          }\n        } else if (selectedJamo.consonants.length === 2 && selectedJamo.vowels.length === 1) {\n          hints.push(`Click \"Build Syllable\" to create \"${targetSyllable.syllable}\" (CVC structure)`);\n        }\n      }\n    }\n\n    if (currentStage === 3) {\n      if (userWord.length < selectedWord.syllables.length) {\n        const nextSyllable = selectedWord.syllables[userWord.length];\n        const availableSyllable = builtSyllables.find(bs => bs.syllable === nextSyllable.syllable);\n        if (availableSyllable) {\n          hints.push(`Drag \"${availableSyllable.syllable}\" to the next empty slot`);\n        } else {\n          hints.push(`Build \"${nextSyllable.syllable}\" first in Stage 2`);\n        }\n      } else {\n        hints.push(`Click \"Check Word\" to verify your word construction`);\n      }\n    }\n\n    return hints;\n  }, [selectedWord, currentStage, selectedJamo, builtSyllables, userWord, getRequiredJamo]);\n\n  const showHintForCurrentStage = useCallback(() => {\n    const hints = getHints();\n    if (hints.length > 0) {\n      setCurrentHint(hints[0]);\n      setShowHint(true);\n    }\n  }, [getHints]);\n\n  const handleJamoSelection = useCallback((jamo, type) => {\n    console.log('Jamo selected:', jamo, type);\n\n    if (type === 'consonant') {\n      setSelectedJamo(prev => {\n        const isCurrentlySelected = prev.consonants.some(c => c.id === jamo.id);\n\n        // For consonants, we allow multiple selections of the same jamo\n        // since the same consonant can be used as initial and final\n        let newConsonants;\n        if (isCurrentlySelected) {\n          // If already selected, remove it (toggle behavior)\n          newConsonants = prev.consonants.filter(c => c.id !== jamo.id);\n        } else {\n          // If not selected, add it (allow multiple selections of same jamo)\n          newConsonants = [...prev.consonants, jamo];\n        }\n\n        const newState = {\n          ...prev,\n          consonants: newConsonants\n        };\n        console.log('New consonant state:', newState);\n        return newState;\n      });\n    } else {\n      setSelectedJamo(prev => {\n        const isCurrentlySelected = prev.vowels.some(v => v.id === jamo.id);\n\n        let newVowels;\n        if (isCurrentlySelected) {\n          newVowels = prev.vowels.filter(v => v.id !== jamo.id);\n        } else {\n          newVowels = [...prev.vowels, jamo];\n        }\n\n        const newState = {\n          ...prev,\n          vowels: newVowels\n        };\n        console.log('New vowel state:', newState);\n        return newState;\n      });\n    }\n  }, []);\n\n  const canBuildSyllable = useCallback(() => {\n    // For CV syllables: need exactly 1 consonant and 1 vowel\n    // For CVC syllables: need 1 consonant, 1 vowel, and optionally 1 final consonant\n    const hasConsonant = selectedJamo.consonants.length >= 1;\n    const hasVowel = selectedJamo.vowels.length === 1;\n    const hasFinalConsonant = selectedJamo.consonants.length <= 2; // Max 1 initial + 1 final\n\n    return hasConsonant && hasVowel && hasFinalConsonant;\n  }, [selectedJamo]);\n\n\n  const buildSyllable = useCallback(() => {\n    if (!canBuildSyllable()) return;\n\n    console.log('Building syllable with:', selectedJamo);\n\n    const initialConsonant = selectedJamo.consonants[0];\n    const vowel = selectedJamo.vowels[0];\n    const finalConsonant = selectedJamo.consonants.length > 1 ? selectedJamo.consonants[1] : null;\n\n    // Create syllable text based on structure\n    let syllableText = initialConsonant.koreanLetter + vowel.koreanLetter;\n    if (finalConsonant) {\n      syllableText += finalConsonant.koreanLetter;\n    }\n\n    console.log('Looking for target syllable with:', {\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : null\n    });\n\n    // Find the matching syllable in the target word to get complete structure\n    const targetSyllable = selectedWord.syllables.find(ts => {\n      const consonantMatch = ts.consonant === initialConsonant.koreanLetter;\n      const vowelMatch = ts.vowel === vowel.koreanLetter;\n      const finalMatch = finalConsonant\n        ? ts.final === finalConsonant.koreanLetter\n        : !ts.final; // No final consonant expected\n\n      console.log('Checking syllable:', ts, { consonantMatch, vowelMatch, finalMatch });\n      return consonantMatch && vowelMatch && finalMatch;\n    });\n\n    console.log('Found target syllable:', targetSyllable);\n\n    const newSyllable = {\n      syllable: targetSyllable ? targetSyllable.syllable : syllableText,\n      consonant: initialConsonant.koreanLetter,\n      vowel: vowel.koreanLetter,\n      final: finalConsonant ? finalConsonant.koreanLetter : (targetSyllable ? targetSyllable.final : null),\n      structure: targetSyllable ? targetSyllable.structure : (finalConsonant ? 'CVC' : 'CV'),\n      completed: true\n    };\n\n    console.log('Created new syllable:', newSyllable);\n\n    setBuiltSyllables(prev => {\n      const updated = [...prev, newSyllable];\n      console.log('Updated builtSyllables:', updated);\n      return updated;\n    });\n    setSelectedJamo({ consonants: [], vowels: [] });\n  }, [canBuildSyllable, selectedJamo, selectedWord]);\n\n  const handleSyllableDrop = useCallback((syllable) => {\n    console.log('Dropping syllable:', syllable);\n\n    if (!selectedWord) {\n      console.error('selectedWord is undefined');\n      return;\n    }\n\n    if (userWord.length >= selectedWord.syllables.length) {\n      console.log('Word is already complete');\n      return;\n    }\n\n    if (userWord.some(userSyl => userSyl.syllable === syllable.syllable)) {\n      console.log('Syllable already used');\n      return;\n    }\n\n    setUserWord(prev => {\n      const newWord = [...prev, syllable];\n      console.log('New userWord:', newWord);\n      return newWord;\n    });\n  }, [selectedWord, userWord]);\n\n  const removeSyllable = useCallback((index) => {\n    console.log('Removing syllable at index:', index);\n    setUserWord(prev => {\n      const newWord = prev.filter((_, i) => i !== index);\n      console.log('New userWord after removal:', newWord);\n      return newWord;\n    });\n  }, []);\n\n  const checkStageCompletion = useCallback(() => {\n    console.log('Checking stage completion:', { currentStage, userWord, selectedWord });\n\n    if (currentStage === 1) {\n      const required = getRequiredJamo();\n      const hasAllConsonants = required.consonants.every(reqC =>\n        selectedJamo.consonants.some(selC => selC.id === reqC.id)\n      );\n      const hasAllVowels = required.vowels.every(reqV =>\n        selectedJamo.vowels.some(selV => selV.id === reqV.id)\n      );\n      return hasAllConsonants && hasAllVowels;\n    }\n\n    if (currentStage === 2) {\n      return builtSyllables.length === selectedWord.syllables.length &&\n             builtSyllables.every(bs => bs.completed);\n    }\n\n    if (currentStage === 3) {\n      console.log('Stage 3 validation:', { userWord, selectedWord });\n\n      if (!selectedWord || !selectedWord.syllables) {\n        console.error('selectedWord or syllables is undefined');\n        return false;\n      }\n\n      if (userWord.length !== selectedWord.syllables.length) {\n        console.log('User word length mismatch:', userWord.length, selectedWord.syllables.length);\n        return false;\n      }\n\n      // Check each syllable with proper error handling\n      for (let index = 0; index < userWord.length; index++) {\n        const userSyl = userWord[index];\n        const targetSyllable = selectedWord.syllables[index];\n\n        console.log(`Checking index ${index}:`, { userSyl, targetSyllable });\n\n        if (!userSyl) {\n          console.error('userSyl is undefined at index:', index);\n          return false;\n        }\n\n        if (!targetSyllable) {\n          console.error('targetSyllable is undefined at index:', index);\n          return false;\n        }\n\n        if (!userSyl.syllable || !targetSyllable.syllable) {\n          console.error('Syllable text is undefined:', { userSyl, targetSyllable });\n          return false;\n        }\n\n        const isCorrect = userSyl.syllable === targetSyllable.syllable;\n        console.log(`Comparing: \"${userSyl.syllable}\" vs \"${targetSyllable.syllable}\" = ${isCorrect}`);\n\n        if (!isCorrect) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }, [currentStage, selectedJamo, builtSyllables, userWord, selectedWord, getRequiredJamo]);\n\n  const advanceToNextStage = useCallback(() => {\n    if (currentStage < 3) {\n      setCurrentStage(prev => prev + 1);\n      setShowHint(false);\n    }\n  }, [currentStage]);\n\n  const resetExercise = useCallback(() => {\n    setCurrentStage(1);\n    setSelectedJamo({ consonants: [], vowels: [] });\n    setBuiltSyllables([]);\n    setUserWord([]);\n    setShowHint(false);\n  }, []);\n\n  const getJamoButtonClass = (jamo, type) => {\n    const isSelected = type === 'consonant'\n      ? selectedJamo.consonants.some(c => c.id === jamo.id)\n      : selectedJamo.vowels.some(v => v.id === jamo.id);\n    return `jamo-btn ${isSelected ? 'selected' : 'available'}`;\n  };\n\n  const getSyllableButtonClass = (syllable) => {\n    const isUsed = userWord.some(userSyl => userSyl.syllable === syllable.syllable);\n    return `syllable-btn ${isUsed ? 'used' : 'available'}`;\n  };\n\n  const requiredJamo = getRequiredJamo();\n  const stageHints = getHints();\n\n  if (!selectedWord) {\n    return (\n      <div className=\"word-builder-section\">\n        <div className=\"section-header\">\n          <h2>Progressive Word Builder</h2>\n          <p>Learn Korean writing step by step: from individual letters to complete words.</p>\n        </div>\n\n        <div className=\"word-selection\">\n          <h3>Select a word to build:</h3>\n          <div className=\"word-cards\">\n            {exampleWords.map(word => (\n              <button\n                key={word.id}\n                className=\"word-card\"\n                onClick={() => selectWord(word)}\n              >\n                <div className=\"word-korean\">{word.korean}</div>\n                <div className=\"word-romanization\">{word.romanization}</div>\n                <div className=\"word-english\">\"{word.english}\"</div>\n                <div className=\"syllable-count\">{word.syllables.length} syllables</div>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"word-builder-section\">\n      <div className=\"section-header\">\n        <div className=\"exercise-header\">\n          <button className=\"back-btn\" onClick={() => setSelectedWord(null)}>\n            ← Back to Word Selection\n          </button>\n          <h2>Build: {selectedWord.english}</h2>\n          <div className=\"word-info\">\n            <span className=\"target-word\">{selectedWord.korean}</span>\n            <span className=\"romanization\">({selectedWord.romanization})</span>\n          </div>\n        </div>\n\n        {/* Progress indicator */}\n        <div className=\"stage-progress\">\n          <div className={`stage ${currentStage === 1 ? 'active' : ''} ${currentStage > 1 ? 'completed' : ''}`}>\n            <span className=\"stage-number\">1</span>\n            <span className=\"stage-label\">Jamo</span>\n          </div>\n          <div className={`stage ${currentStage === 2 ? 'active' : ''} ${currentStage > 2 ? 'completed' : ''}`}>\n            <span className=\"stage-number\">2</span>\n            <span className=\"stage-label\">Syllables</span>\n          </div>\n          <div className={`stage ${currentStage === 3 ? 'active' : ''}`}>\n            <span className=\"stage-number\">3</span>\n            <span className=\"stage-label\">Word</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"word-builder-container\">\n        {/* Stage 1: Jamo Selection */}\n        {currentStage === 1 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 1: Select Required Letters (Jamo)</h3>\n              <p>Choose all the consonants and vowels needed to build this word.</p>\n            </div>\n\n            <div className=\"jamo-selection\">\n              <div className=\"jamo-section\">\n                <h4>Required Consonants:</h4>\n                <div className=\"jamo-grid\">\n                  {requiredJamo.consonants.map(consonant => (\n                    <div\n                      key={consonant.id}\n                      className={getJamoButtonClass(consonant, 'consonant')}\n                      onClick={() => handleJamoSelection(consonant, 'consonant')}\n                    >\n                      <span className=\"jamo-letter\">{consonant.koreanLetter}</span>\n                      <span className=\"jamo-name\">{consonant.name}</span>\n                      <span className=\"jamo-sound\">({consonant.romanization})</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"jamo-section\">\n                <h4>Required Vowels:</h4>\n                <div className=\"jamo-grid\">\n                  {requiredJamo.vowels.map(vowel => (\n                    <div\n                      key={vowel.id}\n                      className={getJamoButtonClass(vowel, 'vowel')}\n                      onClick={() => handleJamoSelection(vowel, 'vowel')}\n                    >\n                      <span className=\"jamo-letter\">{vowel.koreanLetter}</span>\n                      <span className=\"jamo-name\">{vowel.name}</span>\n                      <span className=\"jamo-sound\">({vowel.romanization})</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button\n                className=\"hint-btn\"\n                onClick={showHintForCurrentStage}\n                disabled={stageHints.length === 0}\n              >\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button\n                className=\"next-stage-btn\"\n                onClick={advanceToNextStage}\n                disabled={!checkStageCompletion()}\n              >\n                Next: Build Syllables →\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Stage 2: Syllable Building */}\n        {currentStage === 2 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 2: Build Syllable Blocks</h3>\n              <p>Combine consonants and vowels to create syllable blocks. Build them one at a time.</p>\n            </div>\n\n            <div className=\"syllable-building\">\n              {/* Available Jamo Pool for Syllable Building */}\n              <div className=\"jamo-pool-stage2\">\n                <h4>Available Letters:</h4>\n                <p>Select consonants and vowels to build the next syllable. You can reuse consonants for different positions.</p>\n                <div className=\"jamo-pool-grid\">\n                  {requiredJamo.consonants.map(consonant => {\n                    const isSelectedForInitial = selectedJamo.consonants\n                      .filter((_, index) => index === 0)\n                      .some(c => c.id === consonant.id);\n                    const isSelectedForFinal = selectedJamo.consonants\n                      .filter((_, index) => index > 0)\n                      .some(c => c.id === consonant.id);\n\n                    return (\n                      <button\n                        key={`${consonant.id}-${consonant.koreanLetter}`}\n                        className={`jamo-btn ${isSelectedForInitial || isSelectedForFinal ? 'selected' : 'available'}`}\n                        onClick={() => handleJamoSelection(consonant, 'consonant')}\n                      >\n                        <span className=\"jamo-letter\">{consonant.koreanLetter}</span>\n                        <span className=\"jamo-name\">{consonant.name}</span>\n                        {isSelectedForInitial && <span className=\"position-indicator initial\">초성</span>}\n                        {isSelectedForFinal && <span className=\"position-indicator final\">종성</span>}\n                      </button>\n                    );\n                  })}\n                  {requiredJamo.vowels.map(vowel => (\n                    <button\n                      key={vowel.id}\n                      className={getJamoButtonClass(vowel, 'vowel')}\n                      onClick={() => handleJamoSelection(vowel, 'vowel')}\n                    >\n                      <span className=\"jamo-letter\">{vowel.koreanLetter}</span>\n                      <span className=\"jamo-name\">{vowel.name}</span>\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"jamo-workspace\">\n                <h4>Selected for Current Syllable:</h4>\n                <div className=\"selected-jamo\">\n                  {selectedJamo.consonants.map((c, index) => (\n                    <span key={`${c.id}-${index}`} className={`selected-jamo-item ${index === 0 ? 'consonant' : 'final-consonant'}`}>\n                      {c.koreanLetter} ({c.name})\n                      {index === 0 ? ' (initial)' : ' (final)'}\n                    </span>\n                  ))}\n                  {selectedJamo.vowels.map(v => (\n                    <span key={v.id} className=\"selected-jamo-item vowel\">\n                      {v.koreanLetter} ({v.name})\n                    </span>\n                  ))}\n                </div>\n\n                <div className=\"selection-summary\">\n                  {selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && (\n                    <div className=\"structure-info\">\n                      {selectedJamo.consonants.length === 1 && selectedJamo.vowels.length === 1 && (\n                        <span className=\"structure-badge cv\">CV Structure</span>\n                      )}\n                      {selectedJamo.consonants.length === 2 && selectedJamo.vowels.length === 1 && (\n                        <span className=\"structure-badge cvc\">CVC Structure</span>\n                      )}\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"syllable-preview\">\n                  {selectedJamo.consonants.length > 0 && selectedJamo.vowels.length > 0 && (\n                    <div className=\"preview-syllable\">\n                      <span className=\"preview-text\">\n                        Preview: {selectedJamo.consonants[0].koreanLetter + selectedJamo.vowels[0].koreanLetter}\n                        {selectedJamo.consonants.length > 1 && selectedJamo.consonants[1].koreanLetter}\n                      </span>\n                      <span className=\"preview-structure\">\n                        ({selectedJamo.consonants.length > 1 ? 'CVC' : 'CV'})\n                      </span>\n                    </div>\n                  )}\n                </div>\n\n                <button\n                  className=\"build-syllable-btn\"\n                  onClick={() => {\n                    console.log('Build Syllable clicked');\n                    console.log('Selected Jamo:', selectedJamo);\n                    console.log('Can build:', canBuildSyllable());\n                    buildSyllable();\n                  }}\n                  disabled={!canBuildSyllable()}\n                >\n                  {canBuildSyllable()\n                    ? `Build Syllable (${selectedJamo.consonants.length > 1 ? 'CVC' : 'CV'}) →`\n                    : 'Select 1 consonant + 1 vowel (+ optional final consonant)'\n                  }\n                </button>\n\n                {selectedJamo.consonants.length > 0 || selectedJamo.vowels.length > 0 ? (\n                  <button\n                    className=\"clear-selection-btn\"\n                    onClick={() => setSelectedJamo({ consonants: [], vowels: [] })}\n                  >\n                    Clear Selection\n                  </button>\n                ) : null}\n              </div>\n\n              <div className=\"built-syllables\">\n                <h4>Built Syllables ({builtSyllables.length}/{selectedWord.syllables.length}):</h4>\n                <div className=\"syllables-display\">\n                  {builtSyllables.map((syllable, index) => (\n                    <div key={index} className=\"built-syllable\">\n                      <span className=\"syllable-text\">{syllable.syllable}</span>\n                      <div className=\"syllable-components\">\n                        {syllable.consonant} + {syllable.vowel}\n                        {syllable.final && ` + ${syllable.final}`}\n                      </div>\n                      <div className=\"syllable-structure\">{syllable.structure}</div>\n                    </div>\n                  ))}\n                </div>\n\n                {builtSyllables.length < selectedWord.syllables.length && (\n                  <div className=\"next-syllable-hint\">\n                    Next: Build \"{selectedWord.syllables[builtSyllables.length].syllable}\"\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button className=\"hint-btn\" onClick={showHintForCurrentStage}>\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button className=\"prev-stage-btn\" onClick={() => setCurrentStage(1)}>\n                ← Back to Jamo\n              </button>\n              <button\n                className=\"next-stage-btn\"\n                onClick={advanceToNextStage}\n                disabled={!checkStageCompletion()}\n              >\n                Next: Build Word →\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Stage 3: Word Building */}\n        {currentStage === 3 && (\n          <div className=\"stage-container\">\n            <div className=\"stage-header\">\n              <h3>Stage 3: Build the Complete Word</h3>\n              <p>Arrange the syllable blocks to form the complete word.</p>\n            </div>\n\n            <div className=\"word-building\">\n              <div className=\"target-word-area\">\n                <h4>Word Structure:</h4>\n                <div className=\"word-slots\">\n                  {selectedWord.syllables.map((targetSyllable, index) => {\n                    console.log(`Rendering word slot ${index}:`, { targetSyllable, userSyllable: userWord[index] });\n\n                    if (!targetSyllable) {\n                      console.error('targetSyllable is undefined at index:', index);\n                      return null;\n                    }\n\n                    const isCorrect = userWord[index] && userWord[index].syllable === targetSyllable.syllable;\n                    return (\n                      <div key={index} className={`word-slot ${isCorrect ? 'correct' : ''}`}>\n                        {userWord[index] ? (\n                          <div className={`syllable-in-word ${isCorrect ? 'correct' : ''}`}>\n                            <span className=\"syllable-text\">{userWord[index].syllable}</span>\n                            <button\n                              className=\"remove-syllable\"\n                              onClick={() => removeSyllable(index)}\n                            >\n                              ×\n                            </button>\n                          </div>\n                        ) : (\n                          <div className=\"empty-word-slot\">\n                            Drop syllable here\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n                {userWord.length > 0 && (\n                  <div className=\"current-word\">\n                    Current: <span className=\"current-word-display\">\n                      {userWord.map(s => s.syllable).join('')}\n                    </span>\n                  </div>\n                )}\n\n                {checkStageCompletion() && currentStage === 3 && (\n                  <div className=\"success-message\">\n                    🎉 Congratulations! You successfully built \"{selectedWord.korean}\" ({selectedWord.english})!\n                  </div>\n                )}\n              </div>\n\n              <div className=\"available-syllables\">\n                <h4>Available Syllables:</h4>\n                <div className=\"syllables-pool\">\n                  {builtSyllables.map((syllable, index) => (\n                    <div\n                      key={index}\n                      className={getSyllableButtonClass(syllable)}\n                      draggable={!userWord.some(userSyl => userSyl.syllable === syllable.syllable)}\n                      onDragStart={(e) => {\n                        e.dataTransfer.setData('text/plain', syllable.syllable);\n                      }}\n                      onClick={() => handleSyllableDrop(syllable)}\n                    >\n                      <span className=\"syllable-display\">{syllable.syllable}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stage-controls\">\n              <button className=\"hint-btn\" onClick={showHintForCurrentStage}>\n                💡 Show Hint\n              </button>\n              {showHint && <div className=\"hint-text\">{currentHint}</div>}\n            </div>\n\n            <div className=\"stage-navigation\">\n              <button className=\"prev-stage-btn\" onClick={() => setCurrentStage(2)}>\n                ← Back to Syllables\n              </button>\n              <button className=\"check-word-btn\" onClick={() => {\n                try {\n                  console.log('Check Word button clicked');\n                  console.log('userWord:', userWord);\n                  console.log('selectedWord:', selectedWord);\n\n                  if (checkStageCompletion()) {\n                    setShowHint(false);\n                    setCurrentHint(`Perfect! You successfully built \"${selectedWord.korean}\" (${selectedWord.english})!`);\n                    setShowHint(true);\n                  } else {\n                    // Find the first incorrect syllable\n                    let errorMessage = 'Check your syllable placement and try again.';\n                    if (userWord.length > 0 && selectedWord && selectedWord.syllables) {\n                      const firstIncorrect = userWord.findIndex((userSyl, index) => {\n                        if (!userSyl || !selectedWord.syllables[index]) return true;\n                        return userSyl.syllable !== selectedWord.syllables[index].syllable;\n                      });\n\n                      if (firstIncorrect >= 0) {\n                        errorMessage = `Check position ${firstIncorrect + 1}. Make sure \"${selectedWord.syllables[firstIncorrect].syllable}\" is in the correct place.`;\n                      }\n                    }\n\n                    setShowHint(false);\n                    setCurrentHint(errorMessage);\n                    setShowHint(true);\n                  }\n                } catch (error) {\n                  console.error('Error in Check Word:', error);\n                  setShowHint(false);\n                  setCurrentHint('An error occurred. Please try again or refresh the page.');\n                  setShowHint(true);\n                }\n              }}>\n                Check Word\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Overall Controls */}\n        <div className=\"exercise-controls\">\n          <button className=\"reset-btn\" onClick={resetExercise}>\n            Start Over\n          </button>\n          <button className=\"new-word-btn\" onClick={() => setSelectedWord(null)}>\n            Try Another Word\n          </button>\n        </div>\n\n        {/* Hints */}\n        {showHint && (\n          <div className=\"hint-section\">\n            <div className=\"hint-content\">\n              <span className=\"hint-icon\">💡</span>\n              <span className=\"hint-text\">{currentHint}</span>\n              <button className=\"close-hint\" onClick={() => setShowHint(false)}>×</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WordBuilderSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}